%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Flat_8-Template_275203276654.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Digital Marketing 25 Flat icon pack  Such As web. news. news. document. chating</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Digital Marketing 25 Flat icon pack  Such As web. news. news. document. chating</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>mobile</rdf:li>
               <rdf:li> game</rdf:li>
               <rdf:li> social</rdf:li>
               <rdf:li> facebook</rdf:li>
               <rdf:li> twitter</rdf:li>
               <rdf:li> document</rdf:li>
               <rdf:li> blog</rdf:li>
               <rdf:li> article</rdf:li>
               <rdf:li> news</rdf:li>
               <rdf:li> web</rdf:li>
               <rdf:li> chat</rdf:li>
               <rdf:li> conversation</rdf:li>
               <rdf:li> chating</rdf:li>
               <rdf:li> support</rdf:li>
               <rdf:li> document</rdf:li>
               <rdf:li> news</rdf:li>
               <rdf:li> article</rdf:li>
               <rdf:li> web</rdf:li>
               <rdf:li> report</rdf:li>
               <rdf:li> video</rdf:li>
               <rdf:li> record</rdf:li>
               <rdf:li> blog</rdf:li>
               <rdf:li> youtube</rdf:li>
               <rdf:li> tutorial</rdf:li>
               <rdf:li> mobile</rdf:li>
               <rdf:li> app</rdf:li>
               <rdf:li> network</rdf:li>
               <rdf:li> dot</rdf:li>
               <rdf:li> record</rdf:li>
               <rdf:li> network</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> group</rdf:li>
               <rdf:li> people</rdf:li>
               <rdf:li> team</rdf:li>
               <rdf:li> blog</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T20:36:28+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T20:36:29+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T20:36:29+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;foJp7R5YJLiddTqbWG4EJuFW3ecAyxrS3LO6w7lgBVa47Luvju/zJjspi9sk1yNVZ0B9MV0tF9T0&#xA;1IoDI5XgtRtXc7Vx2XdHMfPS/pSVDC4a6C6XbuAOMClgzOyr0YceI3PvvQK7o3Rx5lOoltRkH1L6&#xA;nA4j4IG+tSDjMnJT0i9HkPH1D/KMCU7xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVimted/LsM+p6bqNpPLDYER3EjRobd5hbC9WFWLgBjHSnPivLauShIxNg0WvLCM4mMhYQE&#xA;3nL8s9HnFxH6KSwMyzywRqTAeEn2iNzUxPH8HL4tvHLJZ8khRJIaMejwY5cUYRBHkvH/ACrGS9t7&#xA;K3sLW4uriZIBEkKhkMkckiu4fieNImFRXfbJfmcv84uXxKE3mX8tNTvoZLqyjmvb28urBnlhUuJN&#xA;PSszSGp+BUC0PuuVCUh1b8esywHDGRARU3mr8tbe2tLWKS2mXnFHb2kSryjF3di25lW48EWYnnXp&#xA;TxoDj5tNDKbnES96jWZASeI2VWbzl+W1jaufrlqIpBCzxxKWLCRkWI8VBJ/vlYf5LBuhGVjQ4QDH&#xA;gjR57dyJavISCZGwv0nzn5CmEk0Nzb2k9ukjzRyFFkjSMsGJ4lhuqlgAa0+Ro49Dhxy4owAPuRLU&#xA;zkKMiQyHS9W0/VbQXmnzCe2LMgkAYDlGxVx8QB+FgQcyWpF4q7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FWM6h+X2iahf6jd3Uty66k3qT2okAhEotRaCVVC15CIbciQDvSuNopjmj&#xA;/k7bxTagNWu/rFpdyyzJFCqxt6kxmBcuFDgKs/wpVgDv3Iw2jhTvTPyy0Gw1oa0Li7udR9X12mne&#xA;Il3/AHhq5SNC28zdemwFFAGNp4VGT8pPKb3Fzcg3MdzdeoXmjl4srTCVXZCB8LET0r/kJ4btrwrb&#xA;X8ofKEFpeWjLNNb6h6Au4nMao6290bxV4RxxqqtIxDBQPh2FMbXhDaflJ5VWWWYmd7iZIVNy/ovO&#xA;HtjGYZFnaIy8k9BNuXFqVZSSSW14ULqv5P6LNoV3p9jPNHPcTG5WWZgwEphlgNeKjYx3D08DQ70o&#xA;W14WTeT9CuNC8vW2lzzpO9uZOLRxrGoR5GdUoioDxDULUBY7nc4CkBOcVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;XRAFwDuMBSieCfyj7sil3BP5R92Ku4J/KPuxVbIihDQD7sIVRiALgEVGEoRHBP5R92RSgLzW/L9j&#xA;Otve39pa3D04wzTRxua9KKxBw0UI5ViZQyhSpFQRQgg4ErZVURkgAHCEKcIBfcV2wlVfgn8o+7Ip&#xA;dwT+UfdiruCfyj7sVWTKoSoAGEIU4ACxqK7YSoUNU1rQNJWNtVv7XT1mJETXUscIcr1C+oVrSvbB&#xA;uqXf488gf9TFpX/SZbf8140VsJzaXFjeW0d1aSxXFtMOUU8TK8bqe6stQR8sUrp1UIKADfEIK2AA&#xA;k1FfnhKh1zcWNqoe5ligRjQNIyoCfCrUwJVEMDxrInFo2AZXWhBB3BBHbArUTW8qCSIpIh6OtGBp&#xA;7jG0mJBorZ1UAUAHywhiVHJIdirsVXxf3gwFKnrF19UszcNKsMUZBllkdY0VenxMxAG+MatSxbXf&#xA;NnPVLPTVWH6tM0LSScxICWdg1Sp4BI1Tk3I9xmw02ACBne4v8fHo6zWZJSmMdbGvx7h1R/l+DT9O&#xA;1S7S1vpL+fUTHLIkt2sioIEWJjBDUlE6Fvf6MxMp4jZ2c7DDgiI3dMlk/u2+WUhuUYf7wYSgJX5x&#xA;v7+10lIdOk9G/wBRuYLG3uCAfRM7hXlANQTHHyZQepAxiFKVRn8ttAWTTJ30+Gcit2LyWE3EzEfb&#xA;naY+pIzdath3KLDtDittF8yW9hpb/wDOv63bTXdnaKwaK3nt2j5fVxWixTJNy4LsCtR9rE7hQy6b&#xA;+7P+ffIhkpQfb+jCUBD31nLLqdhcKnJIC/NttuQAHXf7sMTsVI3eU63e2l151uLrXbIX1ulmlvbs&#xA;9o9wisk8jUHpxyUajZaYbbNd96zyj5f0z/lY2m6xo8FysXqz/WYltJ4baBGtJVU8nijVavQUruTk&#xA;ZWBukc3s0/8Ad5UGwqdv9o/LCUBhH5maJper6po1vqNot7FHDeOkMjyoocyWycmMTRtRQ5PXImRA&#xA;JDdgxxnMRly3+5AWn5W+Q5dOWf8AQsZcyyRgie8VWRGIRgrTVHICtMnimZc11WGMJUO4Mz8q2Mem&#xA;abDpVugSzs04QCpZgKk0JJ364zAaIptcfYHzyISVtv1bEqGIfmfpnlvVdPtLTXpriC3jl9WJ7YqG&#xA;L8WWhrHNtQntiJiIsluw6aeY8MBZ+H6Us0g+VE8s3PlLRJpo1njcGSQu0nJlCs55Kg3puooOwoMi&#xA;THJYB3cuOmzaUxyyh6YnvH6E5/LrTotOtr23WX1DJMJGVI/SiWiBKKnJ+vGpNd8Rg8MNes1v5iQN&#xA;VQrc2f0MquPsj55IOEVDJIdirsVXxf3gwFLBPzz5/wCD7YKaV1G2DfL48OPmiXJhWr+brDS7m7gu&#xA;omja0leI82CEhAWV6EdHXcexzLtqpGaTMbnzn5Jv41aNLmS+ordSixABgdqhhvleU7Mo83tcn923&#xA;yzGDaow/3gwlASTzzGbjT7SygYRalPdxNpc7Cqx3UB9aNnUfEUPp8XoPsk4xUsW1rRrO+1K4udT0&#xA;20e8kiiDBoo5SkoVeY9RgCyjcDJ44m7v0spyx8AAHr6lM9LkEPm/TI7tCqrpxttHihC+mokCyXEk&#xA;nxLxJ9BURVU0AO/xUAl1YBm0392f8++QDJSg+39GEoCU+bPMGqaLBBPZ6fFfxyv6cnqXP1YqxFVp&#xA;WOQGtD3GRUmmLz6hrgasvkm35SDlX9Ibnkeu0GWccu9jt3Ms8oQ00WC5azWykulEpiWX1/gb4krJ&#xA;wjrs3hkZSJ5sohN5/wC7wBJU7f7R+WEoCSa2rt5t0VUFWNrf0FSP2rbuCDjFSk+rfmN5D0bVH03X&#xA;NVgt7qHeSENPIyk7gHhzAPtkjLuRSL/LHzRo2veXkaxvReXNuzpdtRuYPMsoJcAn4GXIGW9M+A8N&#xA;9GV3H2B88QxK236tiVDD/wAxINNu2tra61GGxdR6i+qygkfEuwZkwSxccaunN0Ou/LTMq4rFc6Yz&#xA;Y/o8arcXl9rdpNyQxIwkiUurLStA3w8emOLAYz4iXI1naOOeAY4RrqfL9dsz8mS6UZLiKxu4rk8Q&#xA;ziORHI3pvxJy/KbdRBklx9kfPKQyKhkkOxV2Kr4v7wYClfeWVne2z215ClxbyU5xSKGU0NRUHwIr&#xA;kUtfUbP/AHyn3DJcRRQWrpunrcx3Qt4xcxKyRTcRyVXpzCnty4iuAkrSvJ/dt8sQlRh/vBhKAvmt&#xA;Lad4XmjDtA3qQlt+L0I5D3ocilTk03T5HLyW0bu27Mygk/ScPEUUENL5b0WXVbTVnt/9OsUMdrIH&#xA;kVUVgQR6YYRn7R6rjZWkfN/dn/PviEqUH2/owlAXXljZ3sXo3cKTxVDcHAYVHehyKSEF/hfy7/1b&#xA;rf8A5FrjaOEJjFFHDEkUShI41Coi7AKooAPlilqf+7whSp2/2j8sJQEDrnlrT9Zkt5bmS5gmteYh&#xA;mtLma1kAl481LQshIPAbHACpCUy/ltoczBpb3VpGAoC+qXzGn0y42tJ/o+j6fpGnxWFhF6VvCvFQ&#xA;SWY+7OxLMT4k4Eoi4+wPnhCCtt+rYlQleveS/K/mCaKfWNPS7mhUpHIxdSFJrSqMtRXxxEiFISv/&#xA;AJVJ+XX/AFZY/wDkZN/zXh4yvCE10Dyd5Z8vvNJo9glo84CyupZiQu4FXLU69sBkSoCaXH2R88Qp&#xA;UMkh2KuxV2KW+beJ+/ArubeJ+/FXc28T9+KuLMepOKtAkdMKt828T9+BXc28T9+Ku5t4n78VcWY9&#xA;ScVaBI6YVb5t4n78Cu5t4n78VdzbxP34q4sx6knFXAkdDTCrubeJ+/ArubeJ+/FXc28T9+KuLE9T&#xA;XCrgSOhpirubeJ+/ArubeJ+/FXc28T9+KuJJ6muFWsUOxV2Kr4v7wYClT1XWNI0i2F1ql3DZW7MI&#xA;1lnYIpcgkKCe9AcASlH/ACsbyD/1frH/AJHJ/XDwlFhOtM1PTNUs0vdOuIru0ckJPCwdCVPFhUeB&#xA;GBKvIBwO2IVRh/vBhKAiaDwyKVKW5tIpYYZZY45bglYI2YBpGVSxCA7sQoqadsVVaDwxVZMB6Z2w&#xA;hVKAfH9GEoC+ae1gAaeRIgTQF2Cgn6cABS0LuyIqJoyD0PJf640UWFUcSARQg7gjAlZMBw6YQgrI&#xA;AOR+WEqFeg8MilSNzaAkGVAR1FR2w0UWq0HhgSpTgcBt3whBatwCWwlQrUHhkUoNdX0htUbSluoT&#xA;qSJ6rWYYeqE2+Ir1/aGFUZQeGBVK4AoNsIQVDJIdirsVXxf3gwFLHvP2kadq6aFp+owC5s59UQSw&#xA;sSA1Lacj7JB6jGJUpdJ+VvkFElaLQofTiYqQWua1qtKANuPiO4w8Raz5Mi8r6PpWi6edN0xJI7RZ&#xA;JZ445AwCCWViUBI6A1pXemRLOJCbyf3bfLEMlGH+8GEoCD8yz+YINJeTQUtpNRDxhI7wuIirOFfd&#xA;CCDQ7YxAvdZXWzC7qfVdd1HTtWj0JZJ9BuJleO6vEjmecwmKeK29OOWMiNm+0XSrL9OE5IxIBNWx&#xA;ETLcDkn/AJV13zFrF8129rFb+WZ7cS6a8rVvpGLCjyKhMaIyk0U/EO/gGQHxWJJ9zJpv7s/598iG&#xA;alB9v6MJQEi8/wDNdC9SOGGaZJoRH9Yi9ZEDzIkknAbnhGzHbfDDmiTHNK1q7eJI5zCSLiSKIxxG&#xA;INArgRN6bVKEr2y4RNMLZnpeuW93qupaTGhWXShbiVj0IuI/UWnyAzGbUyn/ALvCFKnb/aPywlAY&#xA;z+YnnVfKdppt3I0a291ex21w0hoFiYMzspqPiAXDCNokaYX5j852EPnC10Uaifrst3DHJaxrx4iY&#xA;VRi5b4qhxUD+GCUSSN3Mw6jHCBBhciOd/opmPkvzwPMWva/YRNG9to8yQRyRkMWJ5Bi1CR9qM0wy&#xA;jQDhgssuPsD55EJK236tiVDE/PE41C/0zQrK4vFvhdwT3sVl68QW0cOrSS3EQCx8PtoC3xMoFCDh&#xA;ClRXyrp3FZBd6gl4Z2mOtidfrjO8aQty+D0+BSJV48KCmwrk6Y2r/l9ei2S70G+nuv0tDc3cyWt5&#xA;67lbVZ/TjMM8w/fx8SjcuR3btsBCTIMsuPsj54ApUMkh2KuxVfF/eDAUpJ51vLayOh3d1IIraDU0&#xA;aWVjRVH1acCpOw3IGAKUIPOXlZbh5k1i1VmZiN4yRy49/U/yMlwtXDvaZ+U9aTWLW5urdFjsorma&#xA;3twp5CQRyH98G22evT8ciWyI+SdSf3bfLEMlGH+8GEoCX+axq76UYdIuoLTUJJIzHPcqXjCq4Zqg&#xA;eIGGHNEmCano95o+r6bp0HmS4tW8wzymf1YY3lacQ85p7dojDGplKqKemwDNWmXRntyBcfJiuQPF&#xA;Ie4sm8saNqmh6p9R+vrN5ejthDptjKq/WoGDCiNJGqhowg25VbxJ65VLcN8diyqb+7P+ffIBmpQf&#xA;b+jCUBDa5Z/W7UQ14itS1K0p9IxhKiiQSSPyyySK/qV4kH+7Pb/ZZYcrHhVfLum3lv5w8z3ksRS2&#xA;vBp/1eQjZvStyr0+ROUW3GNAHvZJP/d5IMSp2/2j8sJQGM+eI/OrzWa+Wbizi2f6yt4G36cCrBWH&#xA;jXDEBEmBfpL83DaNe+rpn1Vb79Gmbht631gWvKvH7HrHhXJWGNFmnk6D8wo9YkHmS6sXtBE3CK0D&#xA;FzJyFKtxUAAVyMgK2ZBmVx9gfPIhJW2/VsSoYn57tPRvdI1aw097jU4byFbie0C/WPqqh2MRBaPm&#xA;kjfu/iPFeXLthigoKHXtSbzpd6CLHmlrpi6klorr6rTFowYPUJ9OnxkV/HJ3taK3R35d6evo3uqX&#xA;1i0Os3N1dA3dyFF1JbPOZE5LVjEo2XgDT4QfDISSGWXH2R88ASVDJIdirsVXxf3gwFKJyKUq1Tyr&#xA;5f1W5FzqFklxOqhA7FgeIJIGxHjhBIRSjZeSvK1ldR3Vrp8cVxCeUcgLkg+O5OPEVpOZP7tvliEq&#xA;MP8AeDCUBVlhilAEiBwOlRXADSVotLUGMiFOURLRHiKqzAqSp7Eg0xtactpbK4dYlDDcEAVx4iil&#xA;0392f8++ISpQfb+jCUBEUrkUpbc+WfL91O9xcWEMs0hq8jICSfE4qvsvL+i2M/r2dlFBNQr6iKAa&#xA;HqK4qjJ/7vCFKnb/AGj8sJQG7uztry2ltbmMSwTo0cqHurChG2+RSxr/AJVV+X3p+l+hYfT/AJeU&#xA;njX+bxw8RRQZLZ2VrZWsVraxiK3gQRxRr0VVFAN8CV1x9gfPCEFbb9WxKhdLbQSsGkQMwFK4gkLS&#xA;j+itN+tG7+qx/WzF6BuOI9QxcuXDn9rjy3pjZWlaK2giYtGgUkUJGJJK01cfZHzxClQySHYq7FXY&#xA;q3ybxOKXcm8TiruTeJxV1T44q1ihvk3icUu5N4nFXcm8TirqnxxVrFW+TeJxV3JvE4q7k3icVdUn&#xA;virWKt8m8TiruTeJxV3JvE4q4knqcVaqR0xVvk3icVdybxOKu5N4nFXEk9TirWKHYq7FV8X94MBS&#xA;icilSnu7W3MQnmSIzOIoQ7Bebt0Va9SadMlGBPIcmMpgVZ5quRZLZf7tsIVRh/vBhKAiMilxYAEk&#xA;0A6nwxVYs8DEBZFJPQAgnDRW3Tf3ZxCqUH2/owlARGRSw9fze/LdiQuuREjqAkpp/wAJkuAo4gmu&#xA;g+dvK2v3MltpF+l3PEnqSIqutEqFr8ar3OAxIUFN5/sYhJWW/wBo/LCUBXyKVFr20WT02mUP0Ir3&#xA;yg6rGJcJkLbBikRdK2XtancfYHzwhBW2/VsSoUtQ1fStOCNqF7BZiSojNxKkQYjrx5kVpXAlB/4x&#xA;8o/9XvT/APpKh/5qxVG2GqaZqMbSafeQXkaHi728iSgHrQlCaHFVW46DCEFQySHYq7FV8X94MBS6&#xA;/vrKziRrudbdJnWCN2PGskmyqPfDjhKR2F1uwyTjEbmr2eJ63+ZXmHUdSMWihNT03R5v0jFc2ah2&#xA;NpASrG5eeOT4j4xqvEfzdrb5nlbARFAH1V3s8/Lvz/a+YNPE2o31qusPIkMllbswjUyKZIgqSVId&#xA;kB5fERUUrkTAkbDkniEZWT9W1fqZvJ/dt8sqDcow/wB4MJQFd2KgEKWqQKD3775FLDB+ZHlaTzcf&#xA;K9vIHlnWT1r0GsK3Cj+69zxDVINAduvQzPDHilyCBuaCexwtDqKRheSgj4+nUV6ZYTYY9U0m/uz/&#xA;AJ98rDNSg+39GEoCIyKXnXna6uLCygbQ7S1lufrMUU6tHEzD1GEca8XaIcXmZEduVVU1A7iwAtZL&#xA;LdCWxJMkEcKS8AJfRA2JoSOQCkiuRkCGQTWf+7wBkVO3+0flhKA1dfWAkhi/323Hx5UOU578OXD9&#xA;VFlD6xfJ4FqUHn0alrDQi5N22sWh0915GP6pSbjQ/Z9MKRz7V65z0TioXX0m/fs7Y294043Btrfn&#xA;9nga1+Z4/hTN3ob8GPFz/FfY6zP/AHhrkibj7A+eZYaitt+rYlQ89/N2TVJ44tPtvLseqxel60eo&#xA;vLGjW0wfaiyA1HwAsOjDY5KMLQZUxF9ekEZT/AOlrORxDG4gpz41+z196VyXhjvRxFmH5SyajbxP&#xA;ps3l6PSoUh9SW/WVJGuJg9G5hAP5mI7DoMjKFJEreg3H2R88iElQySHYq7FV8X94MBSrSorp8SCQ&#xA;qQyK1PtLup36GvfACshs8a83flXdtrEF8t9HBDq94lq9khW19G3lJZoVMUcizfEKgkL716i+IJvh&#xA;3rdoM6AMvSZbPQPIvk8+WtN+oTmK8mRhJ+kFhSFnIX00UqCzfu4/h5FqnK5HbYtgBuiNh1ZNJ/dt&#xA;8sgGxRh/vBhKAxP817DzxfeXBb+U7mK2nZybsvJ6UkkQU/uY24kDmep5L8+uGFXuiTzHyP8Ak/c3&#xA;UVtqkusvpd5bShjbyWretHLGwYAlnVTv3FRk5HpTEB79G0Mh5KVdh1YDvlW7Nub+7P8An3xCVKD7&#xA;f0YSgKk83pKppXkwXrTrgAtSWHeYPLkl6bZ7L00cXttcXpkJ+OGGZZXVaA/FVAcmJnkwpPdCtrK2&#xA;nuIbZCpUD1TQ0qRUCvTocEpE82UQms/93kQyKnb/AGj8sJQFt5CZDG3JVCNUljTGJUh4trXmjzbH&#xA;+bK2UGhXT2aOIFtVuCLeZGLMLksEMSgo4Jr9mlCajbAl2XA2e+V8vsbxq5Dbye0wQ0upJgylGFBx&#xA;NadMzydqaOqrcfYHzwBStt+rYlQxLzze6PKZdLvNQsLf1oDHLHcXcMEqh60ISSvzFRTLcdUxlzef&#xA;z+Sfy1ZVEeqWCkxtFKw1K1BZGj9L09w4Cqv2eNOpw0EWWf8AkK40S2CaVYahZ3KwxN6SRXsd3MRz&#xA;5EtxPI9d2ORnVJjzZfcfZHzysMioZJDsVdiq+L+8GApRORS4gGlRWm4+eKuxVbJ/dt8sIVQh/vBh&#xA;KAicil2KuxVZN/dn/PvhCqUH2/owlAV3RHADqGANRUV38cjaXcE/lH3Yq2FUdABXrTFVk/8Ad4Qp&#xA;U7f7R+WEoCs6I4o6hh1oRXIpWfVbatfSSvjxGGyilyRxpXgoWvWgA/VgtK24+wPnhCCtt+rYlQrY&#xA;EuxV2KqVx9kfPCEFQySHYq7FXYpbo3gcCuo3gcVdRvA4q4hu9cVaFe2FW6N4HArqN4HFXUbwOKuI&#xA;bvXFXCvbCrqN4HArqN4HFXUbwOKuIPfCrhXtirqN4HArqN4HFXUbwOKuNe+FXAHtirqN4HArqN4H&#xA;FXUbwOKuNe+FWsUOxV2Kr4v7wYClE5FKCGs6YzMq3CllJDAAkgjY9snwFHEFRNSspHVEkqzGgHFu&#xA;v3YDArYV5f7tsASow/3gwlARGRS7FVA3tqLkWxkHrn9ih8K0r0rTemT8OXDxVs1eNHi4b9SpN/dn&#xA;IhtUoPt/RhKAqTXEMJUSNx57Lsf4YALW1QEEAg1B6EYEqX1qD1hCHBkPQCp6e42w0UW3P9jEJKy3&#xA;+0flhKAqySJFG8jmiICzHrQAVPTIsogk0Eq/xb5dMjRi9UugDOAr7A+Pw+2Q8SPe5f8AJ+ar4fuT&#xA;SCaOeGOaI8opVDo1CKqwqDQ79MmC4somJIPMNXH2B88IYFbb9WxKhWwJQUet6RI8iR3cUjxELKiM&#xA;GKEtxowH2d/HFbRuKqVx0GEIKhkkOxV2Kr4v7wYClXkljjALmgYhR1O56dMACWFar5ourHVpbIaH&#xA;f3ECKCt7bxo8bkipVeTp0r+vIZJEVRA96xHkV/lXzVJrGrT2j6ZPZi24sJJRQg1A4SL0Rz9pQGaq&#xA;77dMlEkxBsH3ckHnTMpP7tvlhCVGH+8GEoCy/iL+kfT9RVY8lAB6ig2OMSpQrrJYxXE0aemXUKnK&#xA;hoxrvQHt4ZXnziEbO+7PFiMjQ2SjyhY6ks88us3UdxeVjaJVlWRuQiCyOeAUUJPwimwzO1OqxyAj&#xA;j5ftdbpdHkjIzy8/2V/Yymb+7P8An3zEDsFKD7f0YSgJD521PWLV9HtNLnjtZ9RuzA9xLF64VVhk&#xA;k2QsnUp44xClAJq3mFYHHozvIpIRuLLUDvx/VmqJy/0nLHB5LvLuqeYl82Jpmo3UdzaXOnSX0KfV&#xA;/RliZZoowjtyYueMhqSBvmzh9Avm4pPqLMJ/7vCFKnb/AGj8sJQGD/nZo97f+T/rNrcz236NnS5u&#xA;DbkhzDQpJQBkrwDcqV7YYc0S5PHovKplsJr5fNt36EQDK1TQg+NZ9vuy6g1vT/yH0e7ttK1PU5L6&#xA;4vbS/mSKze5JqUtuQd1UtJQM8hXr+zlWRsi9NuPsD55AJK236tiVCVearzV7a0tv0VNFDcyXUCSt&#xA;NEZlEDOFkbiHi+yDU79PA7gxFqS88078t9QsvOknmJfNRNvJdSXL6YLfihWRmYRs4m3C8uvHDwlF&#xA;vQvKuoajPYONXuIZL/61dJGIk9EGFJ5FhIQvJ9qJA43rxIrUgsRKNJBTe4+yPngClQySHYq7FV8X&#xA;94MBSqXSBo+RJAjPM0HInjvQAYAVLBdT1XWXvZGsNRs0syQY4p7eZnHwgFSymn2virT298JjEjcI&#xA;BI5JhoCaxNrrXR1MXOlGOn1L0kT05yQfhYRq5QLWnJicdgF6stk/u2+WAMlGH+8GEoCnq2paPp1j&#xA;Jc6vd29lY/Yknu5Eii+PYKWkKr8XTAAl4Z5A1PTtS/MjW30Djb6HPpttLHaW7iSCKdli9QUQ8PUB&#xA;qD3zG7Sj+7HfbkaI+s+56F5dsZY/NnqG0VI1MtJqmu6kVpTvmv0n94HL1P0FnU392f8APvm5DrFK&#xA;D7f0YSgMA/OLV9a0saHe6bpct+bO5ecui+ooYxNEEZFIc1EhO3hkoC0SLD4/zM8y3MYuLnSDBOah&#xA;oDY3rVodqlajf55Z4TDiTL8vfOPmjXfPsN3qOhTWsYspbMyem0KIHkSbm3qsS28XH4fHISjQTE7v&#xA;Yp/7vKw2FTt/tH5YSgKGoQ+tIIZI2ltZkaOePcoUcFWDAexxHJS+e7ryLcWuj6hBFcXDW3o32ocv&#xA;qzGMfot5Y1gMglABm+19n9nvTKpaysohXd9vX3Mhg9HFb3vQ9Lj0mC10y1V1s7KBYIzuFbiN2I6c&#xA;mNScuPJgEzuPsD55EJK236tiVDzj8w5dX8v3U2sRfo8W+qX0FurXiSMRS0+Es6MvFQ8TAV6VrUb5&#xA;ZjPRjIMTPnfXmQymfy4TsSDI3LcE9PW9st3YMw/KkjXln1y9gsnm065ktbKa2WbkrGJDKyvLI/ws&#xA;JeNAN6V8MqyyPJnAPRLj7I+eVhkVDJIdirsVXxf3gwFKJyKXYq7FVsn923ywhVCH+8GEoCJyKXYq&#xA;7FVk392f8++EKpQfb+jCUBEZFLsVdiqyf+7whSp2/wBo/LCUBXyKXYq7FVO4+wPnhCCtt+pxKhUk&#xA;iilXjIiuoNQGAIr9OBKn9Rsv+WeP/gF/piqpHFFEvGNFRSakKABX6MVWXH2R88IQVDJIdirsVbAJ&#xA;O3XFLfGTwP44Fdxk8D+OKu4yeB/HFXFXA3BpirQBJ23OFW+MngfxwK7jJ4H8cVdxk8D+OKtFWA3B&#xA;A98VcASdhU+2FW+MngfxwK7jJ4H8cVdxk8D+OKtEMOoI+eKuAJ6Cvywq3xk8D+OBXcZPA/jiruMn&#xA;gfxxVohh1BHzxVwDHoCflirfGTwP44q7jJ4H8cVdxk8D+OKtEMOoI+eKtYUOxV2Kr4v7wYClE5FK&#xA;yKaOWJZUP7thUMQRt8jTCQqHh1fTJr1rGK5R7tF5NCD8XHbf8cjYuuracE+Djr096Jl/u2yQalGH&#xA;+8GEoCtLLHFGZJGCooqWPTbIhKGOracFLGdKBA53H2W6ZLhKLCrDeW00jxxSK7pTkAa0qK4CFtfN&#xA;/dnEJUoPt/RhKAuuryztEEl1PHbox4h5XVAT1pViMilBN5i04ahb2S+pI10vOG4jQvAQaj+9Wq9V&#xA;yByAGjzZiBItFW2p6bdSGO1u4Z5FFWSKRXIFaVIUnJsFWf7GEKVlv9o/LCUBWd1RS7mijck5FKh+&#xA;kbL/AH8uS4Siwviu7aVuEcgZutBgMSFtu4+wPniFK236tiVCqzKqlmNANycCUHBrWkXD8Le7imcC&#xA;pWNgxp40FcNItVj1GylujapKGnVeTJQ7D50p3wJtfcdBhCCoZJDsVdiq+L+8GApVppY4YmlkYIii&#xA;rM3QYAEsI8yeYdSjcaTcXEdlquoLNHpcMalwXVSFmk2f4A24qKe2XREejWSUT5I067gtLO91yeK7&#xA;1Yq8Avo04LIWdmAUKqDZBTpkMkRfm2wzSEOC/STy82Xyf3bfLIBCjD/eDCUBrUGjW3/eEBSaHlQD&#xA;evjgCl5H5js9ck1/V5Yzqsls7xDT47C5hitvRS1jBUBpUIZpy3VaCld65fHk0EG3oHko3C6LpUd+&#xA;4bVBZQC/5MrSGdYlEnNgTyPKtTlU+bbBkU392f8APvkQzUoPt/RhKAx3XLRLvzlYxPbpdBNOuXSK&#xA;UKyg/WLcEgNtWmGKCjZrbWYblV0+0t47SLj6KAKvEHdxQU6nLYwwEAy+pxMk9SJEQrgS7U9NtrTz&#xA;L5clt7OK1D6jJEHiRELJ+jbxip470LIpofAeGVdHL6srn/u8iGRU7f7R+WEoDyj87vPHmfy7rvl2&#xA;y0i8Fvaags/1yIxRSCTgU47urMtOR+yRgltCUhzAcjSYxPNCEvplIA/Njb+efMi6ZHeDVIDO8rRt&#xA;Z+knqBVAIfZSOJrTemar89l4b4h8nsR2HpvEMPDlVXxWa93N6B+VWtahq9rLc3ziSZJpI1YKF+ER&#xA;ow2UDuxzP0uaWTGTLved7a0ePT5xHGKHDf2ln1x9gfPLg6grbfq2JUMO8wX3ngeebTTLP0/8PXNp&#xA;JPPIYweIiorqWry5l3TjSgoe/HJACkG3lel+TvP1teJN9ZvLUp8SyxW7SNUGoHElAR88sMgwp7zo&#xA;h42Nmk9XvXgUzTMgR2YD4iwHQ17dsqIbAjbj7I+eAKVDJIdirsVXxf3gwFK6+s0u7cwuSoJB5ClQ&#xA;Qa7eGCJpSGPR6XezyPp8sRSJFdIb7iOaJUGiuQPhYqKqtPagArcZAbsaPJPbO2ubYpAGQ2cUKRxg&#xA;A+pzXYk9qUyokH3sgiZP7tvlgCVGH+8GEoCXebILCXRpG1HUW0uyiIae6QQbBvgAJnjmVd32KgNX&#xA;ocANKRb5/wDPWr2tr598qWmi+Zp7rQg9st/do0FI1+shZDN6USRyUiFT6yvXvUZLjK8Iex+UR5Wl&#xA;1mSTSPMr6pc8TLNaUsivEKI6gQ28TIBUbIwBO5rvgMyVEWZzf3Z/z74AlSg+39GEoDz/APNvyxqm&#xA;r3OlXVibqGO1S4F7eWjKWSIhWp6RMfMll/34PpwwNIkHl8uhcdN1K9Tzdel7OdktbYwXAeeCMqHk&#xA;+3QE/HxHsPHJ8Xkxpm3kXyRqVp5y0zVEvr3WNHgE7R3s9IIllMTwhliZ5ncUdl34EE16dYylskDd&#xA;6/P/AHeQDMqdv9o/LCUB5f8AnV5Dm803+kyxwamxso5QsunRWsoBkZdmM91aspHDsDhjOhVLuCCD&#xA;RDzuX8hvMtzBx0u51SG84M4XU44IIfh/YaSC6uCHf9mikeJXBEwJowHyDd+az/z5/wCmP63sv5T+&#xA;Qbjyf5eNtd3b3l5dst1MJQKwSPEivErBn5AFeo64yI6CgwlOUjciZHzZlcfYHzwBgVtv1bEqFHVL&#xA;qS3gHC3luOZ4kRDkR8xiFKVxXlxK4jNlcxcqgSNG1Aad8KE0trN1kjmZj8KceB+Z3xMtlAV7j7I+&#xA;eAJKhkkOxV2Kr4jSQYClE5FLsVdiq2T+7b5YQqhCf3gwlARORS7FXYqsm/uz/n3whVKA/H9GEoCI&#xA;yKXYq7FVk/8Ad4QpU7c/GflhKAr5FLsVdiqncfYHzwhBW253IxKhWwJdirsVUrj7I+eEIKhkkOxV&#xA;2KrZZEijeWRuMcYLOx6AAVJwgWaCJSEQSeQSr/GHlr/q4xfef6Zkfk8v80uB/K2m/nh3+MPLX/Vx&#xA;i+8/0x/J5f5pX+VtN/PDv8YeWv8Aq4xfef6Y/k8v80r/ACtpv54VLbzPoNzOkEF9HJNIaIgJqT92&#xA;RlpckRZjszx9pYJyEYzBJR11dW9pbyXNw4ighUvJI3RVG5JymMSTQc5Jf8feT/8Aq7Qfef6Zf+Ty&#xA;/wA0pou/x95P/wCrtB95/pj+Ty/zStF3+PvJ/wD1doPvP9MfyeX+aVooiw83+W9Qu0s7PUIp7mWv&#xA;pxKTU8QWPbwFcjPTZIiyNkUmF7fWljayXd3KIbeIAySt0AJpv9JykC2WPHKcuGIslJ/8f+Tv+rtB&#xA;95/pk/Cl3OX/ACdn/mF3+P8Ayd/1doPvP9MfCl3L/J2f+YXf4/8AJ3/V2g+8/wBMfCl3L/J2f+YU&#xA;Vp3mvy7qdyLWxv4ri4ILCNCa0HU9MBxkcw1ZdHlxi5RICYXN1b2sJmuJBHEtAXPTfYZTlyxxx4pG&#xA;g1Y8cpmoiyg/8SaJ/wAtsf3nMT+U9P8Azw5H5DP/ADS7/Emif8tsf3nH+U9P/PC/kM/80u/xJon/&#xA;AC2x/ecf5T0/88L+Qz/zSrWmradeSGK2uFlkA5FV60BAr+OXYdZiymoSBLXl0uTGLkKCvcXUFtH6&#xA;k7iNK05HxOTzZ4Yo8UzQa8eOUzURZQ36c0r/AJak+85i/wAq6b+eG38nl/ml36c0r/lqT7zj/Kum&#xA;/nhfyeX+aXfpzSv+WpPvOP8AKum/nhfyeX+aVa21CzumKwTLIVFWA7DL8GsxZSRCQlTDJgnD6hSv&#xA;mS0uxV2KtMqupVgGVhRlO4IPY4gqQCKKE/Q2kf8ALDb/APIpP6ZZ40/5x+bj/lMP8yPyDv0NpH/L&#xA;Db/8ik/pj40/5x+a/lMP8yPyDv0NpH/LDb/8ik/pj40/5x+a/lMP8yPyC+PS9MidZIrSFJF3V1jQ&#xA;EH2IGA5ZnYkso6bFE2IxB9wV5YopY2ilRZI3HF0YBlIPYg9cgDXJvQX+HtA/6ttr/wAiI/8AmnLP&#xA;Gn/OPzW3f4e0D/q22v8AyIj/AOacfGn/ADj81t3+HtA/6ttr/wAiI/8AmnHxp/zj81tfb6PpFvKs&#xA;1vY28My14yRxIrCooaEAHocByyIokraJnggniaGeNZYn2eNwGU99wdsgCmMiDY2KC/w9oH/VstP+&#xA;REf/ADTkuM97b+Zy/wA6XzLv8PaB/wBWy0/5ER/8048Z71/M5f50vmXf4e0D/q2Wn/IiP/mnHjPe&#xA;v5nL/Ol8yq22kaVay+rbWUEEoFBJHEiNQ9RVQDgMiWMs05CjIke9EyxRSoUlRZEPVWAI+45CUBIU&#xA;RYYRkYmwaKh+jNO/5ZYf+Ra/0yn8ri/mx+QbPzGT+dL5l36M07/llh/5Fr/TH8ri/mx+QX8xk/nS&#xA;+Zd+jNO/5ZYf+Ra/0x/K4v5sfkF/MZP50vmVSGztIWLQwRxsRQsiqpp4bDJwwwibjED3BjLLOQok&#xA;n4r5IopF4yIrr1owBFfpyU8cZipAEebGMiORpS+o2X/LPF/wC/0yr8ph/mR+QZ+NP+cfm76jZf8A&#xA;LPF/wC/0x/KYf5kfkF8af84/N31Gy/5Z4v8AgF/pj+Uw/wAyPyC+NP8AnH5r47e3iJMUSRk9Sqgf&#xA;qycMMIfTED3BjKcpczaplrB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:1D48713ED777ED1181BCD970F5CC96A3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1D48713ED777ED1181BCD970F5CC96A3</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:11315398-cedc-f14f-a03b-09795382c29d</stRef:instanceID>
            <stRef:documentID>xmp.did:11315398-cedc-f14f-a03b-09795382c29d</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:61d2bfda-0026-184d-b200-f49f8153a0d3</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:31:18+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:11315398-cedc-f14f-a03b-09795382c29d</stEvt:instanceID>
                  <stEvt:when>2022-09-05T15:07:46+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D48713ED777ED1181BCD970F5CC96A3</stEvt:instanceID>
                  <stEvt:when>2022-12-09T20:36:29+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
276.261 77.4736 mo
276.261 73.3774 274.345 71.3296 270.515 71.3296 cv
268.092 71.3296 li
268.092 83.7466 li
270.082 83.7466 li
274.201 83.7466 276.261 81.6558 276.261 77.4736 cv
cp
279.21 77.3799 mo
279.21 80.2046 278.426 82.3638 276.858 83.8579 cv
275.29 85.3521 273.031 86.0991 270.082 86.0991 cv
265.295 86.0991 li
265.295 68.9888 li
270.585 68.9888 li
273.308 68.9888 275.426 69.7222 276.94 71.189 cv
278.453 72.6558 279.21 74.7197 279.21 77.3799 cv
cp
f
284.384 86.0991 mo
281.634 86.0991 li
281.634 73.1553 li
284.384 73.1553 li
284.384 86.0991 li
cp
281.47 69.7261 mo
281.47 69.2344 281.604 68.8564 281.874 68.5908 cv
282.143 68.3257 282.527 68.1929 283.026 68.1929 cv
283.51 68.1929 283.887 68.3257 284.156 68.5908 cv
284.425 68.8564 284.56 69.2344 284.56 69.7261 cv
284.56 70.1943 284.425 70.563 284.156 70.832 cv
283.887 71.1011 283.51 71.2358 283.026 71.2358 cv
282.527 71.2358 282.143 71.1011 281.874 70.832 cv
281.604 70.563 281.47 70.1943 281.47 69.7261 cv
cp
f
289.3 77.3452 mo
289.3 78.1567 289.509 78.7808 289.927 79.2178 cv
290.344 79.6548 290.943 79.873 291.723 79.873 cv
293.315 79.873 294.111 79.0225 294.111 77.3218 cv
294.111 76.479 293.914 75.8296 293.52 75.373 cv
293.125 74.9165 292.527 74.6885 291.723 74.6885 cv
290.927 74.6885 290.325 74.9146 289.915 75.3672 cv
289.505 75.8198 289.3 76.479 289.3 77.3452 cv
cp
288.119 88.1123 mo
288.119 88.7051 288.386 89.1611 288.92 89.4814 cv
289.455 89.8013 290.206 89.9614 291.173 89.9614 cv
292.671 89.9614 293.787 89.7466 294.52 89.3174 cv
295.253 88.8882 295.62 88.3188 295.62 87.6089 cv
295.62 87.0469 295.419 86.647 295.018 86.4092 cv
294.616 86.1714 293.869 86.0522 292.776 86.0522 cv
290.693 86.0522 li
289.905 86.0522 289.279 86.2378 288.815 86.6084 cv
288.351 86.9785 288.119 87.48 288.119 88.1123 cv
cp
298.289 73.1553 mo
298.289 74.665 li
296.077 75.0747 li
296.28 75.3477 296.447 75.6831 296.58 76.0811 cv
296.712 76.479 296.779 76.9004 296.779 77.3452 cv
296.779 78.6792 296.318 79.7285 295.398 80.4932 cv
294.477 81.2578 293.209 81.6401 291.594 81.6401 cv
291.181 81.6401 290.806 81.6089 290.471 81.5464 cv
289.878 81.9136 289.582 82.3423 289.582 82.834 cv
289.582 83.1304 289.72 83.353 289.997 83.501 cv
290.274 83.6494 290.783 83.7231 291.524 83.7231 cv
293.783 83.7231 li
295.211 83.7231 296.295 84.0278 297.037 84.6362 cv
297.777 85.2446 298.148 86.1226 298.148 87.2695 cv
298.148 88.7363 297.543 89.8677 296.334 90.6636 cv
295.125 91.4595 293.377 91.8569 291.091 91.8569 cv
289.328 91.8569 287.982 91.5449 287.054 90.9209 cv
286.125 90.2964 285.661 89.4072 285.661 88.2524 cv
285.661 87.4565 285.913 86.7876 286.416 86.2456 cv
286.919 85.7031 287.623 85.3267 288.528 85.1162 cv
288.161 84.96 287.859 84.7085 287.621 84.3613 cv
287.383 84.0142 287.264 83.6494 287.264 83.2671 cv
287.264 82.7832 287.4 82.3735 287.674 82.0381 cv
287.947 81.7026 288.353 81.3711 288.891 81.0435 cv
288.22 80.7549 287.676 80.2847 287.258 79.6328 cv
286.841 78.9814 286.632 78.2188 286.632 77.3452 cv
286.632 75.9404 287.075 74.8521 287.96 74.0796 cv
288.846 73.3071 290.108 72.9214 291.747 72.9214 cv
292.113 72.9214 292.498 72.9468 292.899 72.9971 cv
293.301 73.0479 293.604 73.1006 293.806 73.1553 cv
298.289 73.1553 li
cp
f
302.479 86.0991 mo
299.729 86.0991 li
299.729 73.1553 li
302.479 73.1553 li
302.479 86.0991 li
cp
299.565 69.7261 mo
299.565 69.2344 299.7 68.8564 299.969 68.5908 cv
300.238 68.3257 300.622 68.1929 301.122 68.1929 cv
301.605 68.1929 301.982 68.3257 302.251 68.5908 cv
302.52 68.8564 302.655 69.2344 302.655 69.7261 cv
302.655 70.1943 302.52 70.563 302.251 70.832 cv
301.982 71.1011 301.605 71.2358 301.122 71.2358 cv
300.622 71.2358 300.238 71.1011 299.969 70.832 cv
299.7 70.563 299.565 70.1943 299.565 69.7261 cv
cp
f
310.275 84.1094 mo
310.946 84.1094 311.617 84.0044 312.288 83.7935 cv
312.288 85.8652 li
311.983 85.998 311.591 86.1089 311.111 86.1987 cv
310.632 86.2881 310.134 86.333 309.619 86.333 cv
307.013 86.333 305.71 84.96 305.71 82.2134 cv
305.71 75.2383 li
303.943 75.2383 li
303.943 74.0215 li
305.839 73.0146 li
306.775 70.2764 li
308.473 70.2764 li
308.473 73.1553 li
312.159 73.1553 li
312.159 75.2383 li
308.473 75.2383 li
308.473 82.167 li
308.473 82.8301 308.638 83.3193 308.97 83.6357 cv
309.301 83.9517 309.736 84.1094 310.275 84.1094 cv
cp
f
317.918 84.2266 mo
318.917 84.2266 319.718 83.9478 320.323 83.3896 cv
320.928 82.832 321.23 82.0498 321.23 81.0435 cv
321.23 79.9199 li
319.568 79.9897 li
318.273 80.0366 317.331 80.2534 316.742 80.6396 cv
316.152 81.0259 315.858 81.6167 315.858 82.4126 cv
315.858 82.9902 316.03 83.4365 316.373 83.7524 cv
316.716 84.0684 317.231 84.2266 317.918 84.2266 cv
cp
322.014 86.0991 mo
321.464 84.2969 li
321.371 84.2969 li
320.746 85.085 320.118 85.6211 319.486 85.9063 cv
318.854 86.1909 318.042 86.333 317.052 86.333 cv
315.78 86.333 314.787 85.9897 314.073 85.3032 cv
313.359 84.6167 313.002 83.6455 313.002 82.3892 cv
313.002 81.0552 313.498 80.0483 314.489 79.3696 cv
315.479 78.6909 316.989 78.3203 319.018 78.2578 cv
321.253 78.1875 li
321.253 77.4971 li
321.253 76.6704 321.06 76.0518 320.674 75.6421 cv
320.288 75.2324 319.689 75.0278 318.877 75.0278 cv
318.214 75.0278 317.579 75.1255 316.97 75.3203 cv
316.361 75.5156 315.776 75.7456 315.214 76.0107 cv
314.325 74.0444 li
315.027 73.6782 315.795 73.3989 316.63 73.208 cv
317.465 73.0166 318.253 72.9214 318.995 72.9214 cv
320.641 72.9214 321.883 73.2803 322.722 73.998 cv
323.561 74.7158 323.98 75.8433 323.98 77.3799 cv
323.98 86.0991 li
322.014 86.0991 li
cp
f
329.61 86.0991 mo
326.86 86.0991 li
326.86 67.8887 li
329.61 67.8887 li
329.61 86.0991 li
cp
f
345.541 86.0991 mo
340.578 71.8096 li
340.485 71.8096 li
340.617 73.9316 340.684 75.9214 340.684 77.7778 cv
340.684 86.0991 li
338.144 86.0991 li
338.144 68.9888 li
342.088 68.9888 li
346.839 82.5996 li
346.91 82.5996 li
351.802 68.9888 li
355.757 68.9888 li
355.757 86.0991 li
353.066 86.0991 li
353.066 77.6377 li
353.066 76.7871 353.087 75.6792 353.13 74.314 cv
353.173 72.9487 353.21 72.1216 353.241 71.8325 cv
353.147 71.8325 li
348.01 86.0991 li
345.541 86.0991 li
cp
f
363.015 84.2266 mo
364.013 84.2266 364.815 83.9478 365.419 83.3896 cv
366.024 82.832 366.327 82.0498 366.327 81.0435 cv
366.327 79.9199 li
364.665 79.9897 li
363.37 80.0366 362.427 80.2534 361.839 80.6396 cv
361.249 81.0259 360.954 81.6167 360.954 82.4126 cv
360.954 82.9902 361.126 83.4365 361.47 83.7524 cv
361.813 84.0684 362.328 84.2266 363.015 84.2266 cv
cp
367.11 86.0991 mo
366.561 84.2969 li
366.468 84.2969 li
365.843 85.085 365.215 85.6211 364.583 85.9063 cv
363.95 86.1909 363.14 86.333 362.148 86.333 cv
360.877 86.333 359.884 85.9897 359.17 85.3032 cv
358.456 84.6167 358.099 83.6455 358.099 82.3892 cv
358.099 81.0552 358.595 80.0483 359.585 79.3696 cv
360.576 78.6909 362.086 78.3203 364.114 78.2578 cv
366.351 78.1875 li
366.351 77.4971 li
366.351 76.6704 366.157 76.0518 365.771 75.6421 cv
365.385 75.2324 364.786 75.0278 363.974 75.0278 cv
363.312 75.0278 362.675 75.1255 362.066 75.3203 cv
361.458 75.5156 360.873 75.7456 360.312 76.0107 cv
359.422 74.0444 li
360.124 73.6782 360.892 73.3989 361.728 73.208 cv
362.562 73.0166 363.351 72.9214 364.091 72.9214 cv
365.737 72.9214 366.979 73.2803 367.819 73.998 cv
368.657 74.7158 369.077 75.8433 369.077 77.3799 cv
369.077 86.0991 li
367.11 86.0991 li
cp
f
378.522 72.9214 mo
379.076 72.9214 379.532 72.9604 379.892 73.0381 cv
379.622 75.6011 li
379.232 75.5078 378.827 75.4609 378.405 75.4609 cv
377.306 75.4609 376.414 75.8198 375.731 76.5376 cv
375.048 77.2554 374.707 78.1875 374.707 79.3345 cv
374.707 86.0991 li
371.957 86.0991 li
371.957 73.1553 li
374.11 73.1553 li
374.474 75.4375 li
374.614 75.4375 li
375.042 74.665 375.603 74.0527 376.293 73.6001 cv
376.983 73.1475 377.727 72.9214 378.522 72.9214 cv
cp
f
383.989 79.2642 mo
385.545 77.3218 li
389.454 73.1553 li
392.626 73.1553 li
387.417 78.7144 li
392.953 86.0991 li
389.724 86.0991 li
385.568 80.4229 li
384.059 81.6636 li
384.059 86.0991 li
381.332 86.0991 li
381.332 67.8887 li
384.059 67.8887 li
384.059 76.7715 li
383.919 79.2642 li
383.989 79.2642 li
cp
f
399.228 75.0044 mo
398.354 75.0044 397.653 75.2813 397.126 75.8354 cv
396.601 76.3892 396.286 77.1968 396.185 78.2578 cv
402.06 78.2578 li
402.044 77.189 401.786 76.3794 401.287 75.8296 cv
400.788 75.2793 400.101 75.0044 399.228 75.0044 cv
cp
399.73 86.333 mo
397.718 86.333 396.144 85.7461 395.009 84.5718 cv
393.873 83.3975 393.306 81.7808 393.306 79.7207 cv
393.306 77.6064 393.832 75.9448 394.886 74.7354 cv
395.938 73.5259 397.386 72.9214 399.228 72.9214 cv
400.937 72.9214 402.286 73.4399 403.276 74.4775 cv
404.268 75.5156 404.763 76.9434 404.763 78.7612 cv
404.763 80.2476 li
396.138 80.2476 li
396.177 81.5039 396.517 82.4692 397.155 83.144 cv
397.796 83.8188 398.696 84.1563 399.859 84.1563 cv
400.624 84.1563 401.336 84.0845 401.995 83.9399 cv
402.654 83.7954 403.362 83.5557 404.12 83.2202 cv
404.12 85.4556 li
403.448 85.7754 402.77 86.0015 402.083 86.1343 cv
401.396 86.2666 400.612 86.333 399.73 86.333 cv
cp
f
411.751 84.1094 mo
412.422 84.1094 413.093 84.0044 413.764 83.7935 cv
413.764 85.8652 li
413.46 85.998 413.067 86.1089 412.587 86.1987 cv
412.108 86.2881 411.61 86.333 411.095 86.333 cv
408.489 86.333 407.187 84.96 407.187 82.2134 cv
407.187 75.2383 li
405.419 75.2383 li
405.419 74.0215 li
407.315 73.0146 li
408.251 70.2764 li
409.948 70.2764 li
409.948 73.1553 li
413.636 73.1553 li
413.636 75.2383 li
409.948 75.2383 li
409.948 82.167 li
409.948 82.8301 410.114 83.3193 410.446 83.6357 cv
410.777 83.9517 411.212 84.1094 411.751 84.1094 cv
cp
f
418.142 86.0991 mo
415.392 86.0991 li
415.392 73.1553 li
418.142 73.1553 li
418.142 86.0991 li
cp
415.228 69.7261 mo
415.228 69.2344 415.362 68.8564 415.632 68.5908 cv
415.9 68.3257 416.284 68.1929 416.784 68.1929 cv
417.269 68.1929 417.645 68.3257 417.913 68.5908 cv
418.183 68.8564 418.317 69.2344 418.317 69.7261 cv
418.317 70.1943 418.183 70.563 417.913 70.832 cv
417.645 71.1011 417.269 71.2358 416.784 71.2358 cv
416.284 71.2358 415.9 71.1011 415.632 70.832 cv
415.362 70.563 415.228 70.1943 415.228 69.7261 cv
cp
f
432.503 86.0991 mo
429.741 86.0991 li
429.741 78.1406 li
429.741 77.1421 429.54 76.397 429.138 75.9053 cv
428.736 75.4141 428.099 75.168 427.225 75.168 cv
426.062 75.168 425.212 75.5117 424.673 76.1982 cv
424.136 76.8848 423.866 78.0356 423.866 79.6504 cv
423.866 86.0991 li
421.116 86.0991 li
421.116 73.1553 li
423.269 73.1553 li
423.655 74.8521 li
423.796 74.8521 li
424.186 74.2358 424.739 73.7598 425.458 73.4243 cv
426.175 73.0889 426.972 72.9214 427.845 72.9214 cv
430.95 72.9214 432.503 74.501 432.503 77.6611 cv
432.503 86.0991 li
cp
f
437.313 77.3452 mo
437.313 78.1567 437.522 78.7808 437.94 79.2178 cv
438.356 79.6548 438.956 79.873 439.736 79.873 cv
441.328 79.873 442.124 79.0225 442.124 77.3218 cv
442.124 76.479 441.927 75.8296 441.532 75.373 cv
441.139 74.9165 440.54 74.6885 439.736 74.6885 cv
438.94 74.6885 438.338 74.9146 437.929 75.3672 cv
437.519 75.8198 437.313 76.479 437.313 77.3452 cv
cp
436.132 88.1123 mo
436.132 88.7051 436.399 89.1611 436.933 89.4814 cv
437.468 89.8013 438.219 89.9614 439.187 89.9614 cv
440.685 89.9614 441.8 89.7466 442.533 89.3174 cv
443.267 88.8882 443.634 88.3188 443.634 87.6089 cv
443.634 87.0469 443.433 86.647 443.03 86.4092 cv
442.629 86.1714 441.882 86.0522 440.79 86.0522 cv
438.706 86.0522 li
437.919 86.0522 437.292 86.2378 436.828 86.6084 cv
436.364 86.9785 436.132 87.48 436.132 88.1123 cv
cp
446.302 73.1553 mo
446.302 74.665 li
444.09 75.0747 li
444.293 75.3477 444.46 75.6831 444.593 76.0811 cv
444.726 76.479 444.792 76.9004 444.792 77.3452 cv
444.792 78.6792 444.331 79.7285 443.411 80.4932 cv
442.49 81.2578 441.223 81.6401 439.607 81.6401 cv
439.194 81.6401 438.819 81.6089 438.483 81.5464 cv
437.892 81.9136 437.595 82.3423 437.595 82.834 cv
437.595 83.1304 437.733 83.353 438.011 83.501 cv
438.287 83.6494 438.796 83.7231 439.537 83.7231 cv
441.796 83.7231 li
443.224 83.7231 444.308 84.0278 445.05 84.6362 cv
445.79 85.2446 446.161 86.1226 446.161 87.2695 cv
446.161 88.7363 445.557 89.8677 444.348 90.6636 cv
443.138 91.4595 441.39 91.8569 439.104 91.8569 cv
437.341 91.8569 435.995 91.5449 435.067 90.9209 cv
434.138 90.2964 433.674 89.4072 433.674 88.2524 cv
433.674 87.4565 433.926 86.7876 434.429 86.2456 cv
434.933 85.7031 435.636 85.3267 436.542 85.1162 cv
436.175 84.96 435.872 84.7085 435.634 84.3613 cv
435.396 84.0142 435.277 83.6494 435.277 83.2671 cv
435.277 82.7832 435.413 82.3735 435.687 82.0381 cv
435.96 81.7026 436.366 81.3711 436.904 81.0435 cv
436.233 80.7549 435.688 80.2847 435.271 79.6328 cv
434.854 78.9814 434.646 78.2188 434.646 77.3452 cv
434.646 75.9404 435.088 74.8521 435.974 74.0796 cv
436.858 73.3071 438.121 72.9214 439.76 72.9214 cv
440.126 72.9214 440.511 72.9468 440.913 72.9971 cv
441.314 73.0479 441.616 73.1006 441.819 73.1553 cv
446.302 73.1553 li
cp
f
556.341 642.341 mo
657.5 642.341 li
657.5 743.5 li
556.341 743.5 li
556.341 642.341 li
cp
1 1 1 rgb
f
632.918 665.203 mo
632.817 665.203 632.716 665.203 632.615 665.203 cv
632.716 665.203 li
632.312 665.203 li
632.21 665.203 632.21 665.203 632.109 665.203 cv
625.837 665.203 li
592.859 665.203 li
592.758 665.203 li
590.735 665.203 589.116 666.821 589.116 668.845 cv
589.116 686.648 589.116 697.068 589.116 712.748 cv
589.116 712.748 li
589.116 712.748 li
582.643 712.748 li
582.643 717.198 585.576 719.627 589.116 719.627 cv
590.33 719.627 617.644 719.627 619.565 719.627 cv
622.803 719.323 625.938 717.098 626.039 712.849 cv
626.039 672.183 li
632.716 672.183 li
637.167 672.183 637.369 665.507 632.918 665.203 cv
cp
.92549 .941176 .945098 rgb
f
618.149 719.627 mo
589.016 719.627 li
585.475 719.627 582.541 717.3 582.541 712.748 cv
589.016 712.748 li
589.016 712.748 li
611.877 712.748 li
611.877 712.849 611.877 712.849 611.877 712.95 cv
611.979 717.098 615.014 719.323 618.149 719.627 cv
cp
.745098 .764706 .780392 rgb
f
632.918 665.203 mo
637.369 665.507 637.167 672.183 632.615 672.183 cv
625.938 672.183 li
625.938 668.44 628.974 665.304 632.615 665.203 cv
632.716 665.203 632.817 665.203 632.918 665.203 cv
cp
f
619.667 705.666 mo
622.195 705.666 li
622.195 708.195 li
619.667 708.195 li
619.667 705.666 li
cp
.843137 .870588 .929412 rgb
f
619.667 700.608 mo
622.195 700.608 li
622.195 703.138 li
619.667 703.138 li
619.667 700.608 li
cp
f
617.138 708.195 mo
619.667 708.195 li
619.667 710.725 li
617.138 710.725 li
617.138 708.195 li
cp
f
617.138 703.138 mo
619.667 703.138 li
619.667 705.666 li
617.138 705.666 li
617.138 703.138 li
cp
f
636.155 710.725 mo
629.782 710.725 li
629.074 710.725 628.468 710.117 628.468 709.409 cv
628.468 708.701 629.074 708.095 629.782 708.095 cv
636.155 708.095 li
636.863 708.095 637.471 708.701 637.471 709.409 cv
637.369 710.219 636.863 710.725 636.155 710.725 cv
cp
f
636.155 706.981 mo
629.782 706.981 li
629.074 706.981 628.468 706.375 628.468 705.666 cv
628.468 704.958 629.074 704.352 629.782 704.352 cv
636.155 704.352 li
636.863 704.352 637.471 704.958 637.471 705.666 cv
637.471 706.375 636.863 706.981 636.155 706.981 cv
cp
f
636.155 703.138 mo
629.782 703.138 li
629.074 703.138 628.468 702.53 628.468 701.822 cv
628.468 701.114 629.074 700.508 629.782 700.508 cv
636.155 700.508 li
636.863 700.508 637.471 701.114 637.471 701.822 cv
637.471 702.53 636.863 703.138 636.155 703.138 cv
cp
f
636.155 699.395 mo
631.098 699.395 li
630.39 699.395 629.782 698.788 629.782 698.08 cv
629.782 697.371 630.39 696.765 631.098 696.765 cv
636.155 696.765 li
636.863 696.765 637.471 697.371 637.471 698.08 cv
637.471 698.788 636.863 699.395 636.155 699.395 cv
cp
f
636.155 695.551 mo
631.098 695.551 li
630.39 695.551 629.782 694.943 629.782 694.235 cv
629.782 693.527 630.39 692.921 631.098 692.921 cv
636.155 692.921 li
636.863 692.921 637.471 693.527 637.471 694.235 cv
637.471 694.943 636.863 695.551 636.155 695.551 cv
cp
f
636.155 691.808 mo
631.098 691.808 li
630.39 691.808 629.782 691.201 629.782 690.492 cv
629.782 689.784 630.39 689.178 631.098 689.178 cv
636.155 689.178 li
636.863 689.178 637.471 689.784 637.471 690.492 cv
637.369 691.201 636.863 691.808 636.155 691.808 cv
cp
f
588.004 683.411 mo
587.802 683.411 587.498 683.311 587.296 683.209 cv
585.778 682.197 584.059 681.691 582.339 681.691 cv
580.619 681.691 578.899 682.197 577.382 683.209 cv
576.775 683.614 575.966 683.411 575.662 682.805 cv
575.258 682.197 575.46 681.389 576.067 681.085 cv
577.989 679.871 580.113 679.163 582.44 679.163 cv
584.666 679.163 586.891 679.871 588.813 681.085 cv
589.42 681.489 589.521 682.299 589.218 682.805 cv
588.813 683.209 588.408 683.411 588.004 683.411 cv
cp
.192157 .227451 .321569 rgb
f
586.386 686.851 mo
586.183 686.851 585.88 686.75 585.677 686.648 cv
584.666 686.042 583.452 685.637 582.339 685.637 cv
581.227 685.637 580.013 685.94 579.001 686.648 cv
578.394 687.054 577.584 686.851 577.281 686.244 cv
576.876 685.637 577.078 684.828 577.686 684.524 cv
579.102 683.614 580.721 683.108 582.339 683.108 cv
583.957 683.108 585.677 683.614 587.094 684.524 cv
587.7 684.929 587.902 685.637 587.498 686.244 cv
587.194 686.548 586.79 686.851 586.386 686.851 cv
cp
f
584.666 690.492 mo
584.463 690.492 584.261 690.392 584.059 690.29 cv
583.452 689.987 582.946 689.784 582.339 689.784 cv
581.732 689.784 581.125 689.987 580.619 690.29 cv
580.012 690.594 579.203 690.392 578.899 689.784 cv
578.596 689.178 578.798 688.368 579.405 688.064 cv
580.315 687.559 581.327 687.256 582.339 687.256 cv
583.351 687.256 584.362 687.559 585.374 688.064 cv
585.98 688.368 586.183 689.178 585.88 689.784 cv
585.576 690.29 585.172 690.492 584.666 690.492 cv
cp
f
582.339 695.551 mo
581.125 695.551 580.113 694.539 580.113 693.325 cv
580.113 692.111 581.125 691.1 582.339 691.1 cv
583.553 691.1 584.564 692.111 584.564 693.325 cv
584.564 694.539 583.553 695.551 582.339 695.551 cv
cp
f
609.551 672.79 mo
594.377 672.79 li
593.669 672.79 593.062 672.183 593.062 671.475 cv
593.062 670.767 593.669 670.16 594.377 670.16 cv
609.551 670.16 li
610.259 670.16 610.865 670.767 610.865 671.475 cv
610.865 672.284 610.259 672.79 609.551 672.79 cv
cp
.341176 .376471 .435294 rgb
f
614.608 676.634 mo
594.377 676.634 li
593.669 676.634 593.062 676.027 593.062 675.318 cv
593.062 674.61 593.669 674.004 594.377 674.004 cv
614.608 674.004 li
615.316 674.004 615.924 674.61 615.924 675.318 cv
615.924 676.027 615.316 676.634 614.608 676.634 cv
cp
f
620.981 680.377 mo
594.377 680.377 li
593.669 680.377 593.062 679.77 593.062 679.062 cv
593.062 678.354 593.669 677.747 594.377 677.747 cv
620.981 677.747 li
621.689 677.747 622.297 678.354 622.297 679.062 cv
622.195 679.871 621.689 680.377 620.981 680.377 cv
cp
f
620.981 684.221 mo
594.377 684.221 li
593.669 684.221 593.062 683.614 593.062 682.906 cv
593.062 682.197 593.669 681.591 594.377 681.591 cv
620.981 681.591 li
621.689 681.591 622.297 682.197 622.297 682.906 cv
622.195 683.614 621.689 684.221 620.981 684.221 cv
cp
f
609.551 687.964 mo
594.377 687.964 li
593.669 687.964 593.062 687.356 593.062 686.648 cv
593.062 685.94 593.669 685.334 594.377 685.334 cv
609.551 685.334 li
610.259 685.334 610.865 685.94 610.865 686.648 cv
610.865 687.458 610.259 687.964 609.551 687.964 cv
cp
f
620.981 691.808 mo
594.377 691.808 li
593.669 691.808 593.062 691.201 593.062 690.492 cv
593.062 689.784 593.669 689.178 594.377 689.178 cv
620.981 689.178 li
621.689 689.178 622.297 689.784 622.297 690.492 cv
622.195 691.201 621.689 691.808 620.981 691.808 cv
cp
f
428.881 642.341 mo
530.04 642.341 li
530.04 743.5 li
428.881 743.5 li
428.881 642.341 li
cp
1 1 1 rgb
f
481.483 716.49 mo
475.11 716.49 li
474.402 716.49 473.795 715.884 473.795 715.176 cv
473.795 714.468 474.402 713.86 475.11 713.86 cv
481.483 713.86 li
482.191 713.86 482.799 714.468 482.799 715.176 cv
482.799 715.884 482.191 716.49 481.483 716.49 cv
cp
.235294 .231373 .239216 rgb
f
472.683 716.49 mo
451.136 716.49 li
450.428 716.49 449.82 715.884 449.82 715.176 cv
449.82 714.468 450.428 713.86 451.136 713.86 cv
472.683 713.86 li
473.391 713.86 473.998 714.468 473.998 715.176 cv
473.896 715.884 473.29 716.49 472.683 716.49 cv
cp
f
460.038 678.556 mo
500.501 678.556 li
500.501 700.103 li
460.038 700.103 li
460.038 678.556 li
cp
.901961 .298039 .258824 rgb
f
500.501 700.002 mo
500.501 708.903 li
492.914 708.903 li
492.914 716.49 li
479.865 708.903 li
451.136 708.903 li
451.136 678.556 li
460.038 678.556 li
460.038 700.002 li
500.501 700.002 li
cp
.192157 .227451 .321569 rgb
f
508.088 667.125 mo
508.088 700.002 li
500.501 700.002 li
500.501 678.556 li
460.038 678.556 li
460.038 667.125 li
508.088 667.125 li
cp
.843137 .870588 .929412 rgb
f
481.686 689.278 mo
473.896 693.729 li
473.896 684.828 li
481.686 689.278 li
cp
.92549 .941176 .945098 rgb
f
473.896 717.704 mo
472.48 717.704 471.367 716.592 471.367 715.176 cv
471.367 713.76 472.48 712.646 473.896 712.646 cv
475.313 712.646 476.426 713.76 476.426 715.176 cv
476.426 716.592 475.313 717.704 473.896 717.704 cv
cp
.501961 .686275 .321569 rgb
f
301.42 642.341 mo
402.579 642.341 li
402.579 743.5 li
301.42 743.5 li
301.42 642.341 li
cp
1 1 1 rgb
f
323.675 699.395 mo
323.675 704.554 li
323.675 706.172 324.991 707.589 326.71 707.589 cv
330.554 707.589 374.659 707.589 376.379 707.589 cv
377.998 707.589 379.414 706.273 379.414 704.554 cv
379.414 699.395 li
376.379 699.395 326.609 699.395 323.675 699.395 cv
cp
.341176 .376471 .435294 rgb
f
351.393 676.128 mo
348.156 676.128 346.437 671.374 346.437 668.541 cv
346.639 668.237 li
347.043 668.44 347.448 668.541 347.954 668.541 cv
356.552 668.541 li
356.552 668.541 li
356.35 671.475 354.63 676.128 351.393 676.128 cv
cp
1 .847059 .658824 rgb
f
356.451 666.923 mo
356.451 668.541 li
347.853 668.541 li
347.347 668.541 346.942 668.44 346.538 668.237 cv
345.526 667.731 344.818 666.721 344.818 665.507 cv
344.818 663.888 li
353.416 663.888 li
355.136 663.989 356.451 665.304 356.451 666.923 cv
cp
.635294 .52549 .443137 rgb
f
350.28 701.924 mo
350.988 701.924 351.595 702.53 351.595 703.238 cv
351.595 703.947 350.988 704.554 350.28 704.554 cv
349.572 704.554 348.965 703.947 348.965 703.238 cv
348.965 702.53 349.572 701.924 350.28 701.924 cv
cp
.254902 .290196 .337255 rgb
f
360.093 720.841 mo
359.587 720.841 359.081 720.537 358.879 719.93 cv
355.237 707.791 li
355.035 707.083 355.439 706.375 356.047 706.172 cv
356.755 705.97 357.463 706.375 357.665 706.981 cv
361.307 719.121 li
361.509 719.829 361.104 720.537 360.497 720.739 cv
360.295 720.841 360.194 720.841 360.093 720.841 cv
cp
.223529 .254902 .298039 rgb
f
340.67 720.841 mo
340.569 720.841 340.468 720.841 340.266 720.739 cv
339.558 720.537 339.254 719.829 339.456 719.121 cv
343.098 706.981 li
343.3 706.273 344.008 705.97 344.717 706.172 cv
345.425 706.375 345.728 707.083 345.526 707.791 cv
341.884 719.93 li
341.682 720.537 341.176 720.841 340.67 720.841 cv
cp
f
366.162 720.841 mo
334.601 720.841 li
333.893 720.841 333.286 720.233 333.286 719.525 cv
333.286 718.817 333.893 718.21 334.601 718.21 cv
366.162 718.21 li
366.87 718.21 367.478 718.817 367.478 719.525 cv
367.376 720.335 366.87 720.841 366.162 720.841 cv
cp
.196078 .223529 .266667 rgb
f
335.106 717.098 mo
323.675 717.098 li
322.967 717.098 322.36 716.49 322.36 715.782 cv
322.36 715.074 322.967 714.468 323.675 714.468 cv
335.106 714.468 li
335.814 714.468 336.421 715.074 336.421 715.782 cv
336.32 716.49 335.713 717.098 335.106 717.098 cv
cp
.341176 .376471 .435294 rgb
f
328.733 713.254 mo
323.675 713.254 li
322.967 713.254 322.36 712.646 322.36 711.938 cv
322.36 711.23 322.967 710.623 323.675 710.623 cv
328.733 710.623 li
329.441 710.623 330.048 711.23 330.048 711.938 cv
330.048 712.748 329.441 713.254 328.733 713.254 cv
cp
f
379.313 717.098 mo
367.983 717.098 li
367.275 717.098 366.668 716.49 366.668 715.782 cv
366.668 715.074 367.275 714.468 367.983 714.468 cv
379.313 714.468 li
380.021 714.468 380.628 715.074 380.628 715.782 cv
380.628 716.49 380.021 717.098 379.313 717.098 cv
cp
f
379.313 713.254 mo
374.255 713.254 li
373.547 713.254 372.939 712.646 372.939 711.938 cv
372.939 711.23 373.547 710.623 374.255 710.623 cv
379.313 710.623 li
380.021 710.623 380.628 711.23 380.628 711.938 cv
380.628 712.748 380.021 713.254 379.313 713.254 cv
cp
f
376.278 708.701 mo
326.71 708.701 li
324.384 708.701 322.461 706.779 322.461 704.452 cv
322.461 674.51 li
322.461 672.183 324.384 670.261 326.71 670.261 cv
340.165 670.261 li
340.873 670.261 341.479 670.868 341.479 671.576 cv
341.479 672.284 340.873 672.891 340.165 672.891 cv
326.71 672.891 li
325.8 672.891 324.991 673.7 324.991 674.61 cv
324.991 704.554 li
324.991 705.464 325.8 706.273 326.71 706.273 cv
376.278 706.273 li
377.188 706.273 377.998 705.464 377.998 704.554 cv
377.998 674.51 li
377.998 673.6 377.188 672.79 376.278 672.79 cv
362.925 672.79 li
362.217 672.79 361.61 672.183 361.61 671.475 cv
361.61 670.767 362.217 670.16 362.925 670.16 cv
376.278 670.16 li
378.604 670.16 380.526 672.082 380.526 674.408 cv
380.526 704.352 li
380.628 706.779 378.706 708.701 376.278 708.701 cv
cp
.254902 .290196 .337255 rgb
f
332.578 679.163 mo
328.733 679.163 li
328.025 679.163 327.418 678.556 327.418 677.848 cv
327.418 677.14 328.025 676.533 328.733 676.533 cv
332.578 676.533 li
333.286 676.533 333.893 677.14 333.893 677.848 cv
333.792 678.556 333.185 679.163 332.578 679.163 cv
cp
.843137 .870588 .929412 rgb
f
333.792 682.906 mo
328.733 682.906 li
328.025 682.906 327.418 682.299 327.418 681.591 cv
327.418 680.883 328.025 680.275 328.733 680.275 cv
333.792 680.275 li
334.5 680.275 335.106 680.883 335.106 681.591 cv
335.106 682.4 334.5 682.906 333.792 682.906 cv
cp
f
335.106 686.75 mo
328.733 686.75 li
328.025 686.75 327.418 686.143 327.418 685.435 cv
327.418 684.727 328.025 684.12 328.733 684.12 cv
335.106 684.12 li
335.814 684.12 336.421 684.727 336.421 685.435 cv
336.32 686.143 335.713 686.75 335.106 686.75 cv
cp
f
336.32 690.492 mo
328.733 690.492 li
328.025 690.492 327.418 689.886 327.418 689.178 cv
327.418 688.47 328.025 687.862 328.733 687.862 cv
336.32 687.862 li
337.028 687.862 337.635 688.47 337.635 689.178 cv
337.635 689.987 337.028 690.492 336.32 690.492 cv
cp
f
374.255 679.163 mo
370.411 679.163 li
369.703 679.163 369.096 678.556 369.096 677.848 cv
369.096 677.14 369.703 676.533 370.411 676.533 cv
374.255 676.533 li
374.963 676.533 375.57 677.14 375.57 677.848 cv
375.57 678.556 374.963 679.163 374.255 679.163 cv
cp
f
374.255 682.906 mo
369.197 682.906 li
368.489 682.906 367.882 682.299 367.882 681.591 cv
367.882 680.883 368.489 680.275 369.197 680.275 cv
374.255 680.275 li
374.963 680.275 375.57 680.883 375.57 681.591 cv
375.57 682.4 374.963 682.906 374.255 682.906 cv
cp
f
374.255 686.75 mo
367.882 686.75 li
367.174 686.75 366.566 686.143 366.566 685.435 cv
366.566 684.727 367.174 684.12 367.882 684.12 cv
374.255 684.12 li
374.963 684.12 375.57 684.727 375.57 685.435 cv
375.57 686.143 374.963 686.75 374.255 686.75 cv
cp
f
374.255 690.492 mo
366.668 690.492 li
365.96 690.492 365.353 689.886 365.353 689.178 cv
365.353 688.47 365.96 687.862 366.668 687.862 cv
374.255 687.862 li
374.963 687.862 375.57 688.47 375.57 689.178 cv
375.57 689.987 374.963 690.492 374.255 690.492 cv
cp
f
347.65 688.976 mo
341.378 688.976 li
341.378 684.524 li
341.378 682.4 342.693 680.579 344.615 679.871 cv
345.728 679.467 li
347.145 678.961 li
351.292 681.995 li
355.439 678.961 li
357.969 679.871 li
359.891 680.579 361.205 682.4 361.205 684.524 cv
361.205 688.976 li
354.934 688.976 li
347.65 688.976 li
cp
.52549 .862745 .992157 rgb
f
354.934 685.738 mo
354.226 685.738 353.619 686.345 353.619 687.054 cv
353.619 688.976 li
354.934 688.976 li
356.249 688.976 li
356.249 687.054 li
356.147 686.345 355.642 685.738 354.934 685.738 cv
cp
.435294 .74902 .847059 rgb
f
348.864 688.976 mo
348.864 687.054 li
348.864 686.345 348.257 685.738 347.549 685.738 cv
346.841 685.738 346.234 686.345 346.234 687.054 cv
346.234 688.976 li
347.549 688.976 li
348.864 688.976 li
cp
f
173.96 642.341 mo
275.119 642.341 li
275.119 743.5 li
173.96 743.5 li
173.96 642.341 li
cp
1 1 1 rgb
f
241.13 706.375 mo
240.422 706.375 239.814 705.768 239.814 705.06 cv
239.814 700.002 li
239.814 699.293 240.422 698.687 241.13 698.687 cv
241.838 698.687 242.445 699.293 242.445 700.002 cv
242.445 705.06 li
242.344 705.768 241.838 706.375 241.13 706.375 cv
cp
.254902 .290196 .337255 rgb
f
206.938 706.375 mo
206.23 706.375 205.623 705.768 205.623 705.06 cv
205.623 700.002 li
205.623 699.293 206.23 698.687 206.938 698.687 cv
207.646 698.687 208.253 699.293 208.253 700.002 cv
208.253 705.06 li
208.253 705.768 207.646 706.375 206.938 706.375 cv
cp
f
249.931 703.846 mo
247.503 703.846 199.958 703.846 198.036 703.846 cv
197.328 703.846 196.721 704.452 196.721 705.16 cv
196.721 705.869 197.328 706.476 198.036 706.476 cv
200.262 706.476 245.884 706.476 249.931 706.476 cv
250.639 706.476 251.246 705.869 251.246 705.16 cv
251.246 704.452 250.639 703.846 249.931 703.846 cv
cp
.341176 .376471 .435294 rgb
f
218.369 716.49 mo
218.369 712.646 li
218.369 708.903 li
218.369 705.06 li
218.369 700.002 li
228.485 700.002 li
228.485 705.06 li
228.485 708.903 li
228.485 712.646 li
228.485 716.49 li
228.485 720.233 li
218.369 720.233 li
218.369 716.49 li
cp
.235294 .231373 .239216 rgb
f
198.137 667.125 mo
198.137 696.259 li
198.137 700.002 li
214.222 700.002 233.239 700.002 250.032 700.002 cv
250.032 696.157 li
250.032 667.125 li
239.511 667.125 210.479 667.125 198.137 667.125 cv
cp
.92549 .941176 .945098 rgb
f
249.931 696.259 mo
249.931 700.002 li
233.239 700.002 214.222 700.002 198.036 700.002 cv
198.036 696.157 li
249.931 696.157 li
249.931 696.259 li
cp
.686275 .72549 .823529 rgb
f
213.311 676.027 mo
234.858 676.027 li
234.858 691.201 li
213.311 691.201 li
213.311 676.027 li
cp
.184314 .290196 .372549 rgb
f
229.396 682.703 mo
229.092 681.895 228.485 681.389 227.473 681.389 cv
226.36 681.389 li
226.36 685.94 li
227.575 685.94 li
228.485 685.94 229.193 685.435 229.497 684.524 cv
229.598 683.917 229.598 683.209 229.396 682.703 cv
cp
231.418 683.614 mo
231.418 686.042 229.8 687.458 227.575 687.458 cv
224.742 687.458 li
224.742 679.77 li
227.575 679.77 li
228.182 679.77 228.789 679.871 229.294 680.073 cv
229.8 680.275 230.205 680.579 230.508 680.883 cv
231.115 681.591 231.418 682.603 231.418 683.614 cv
cp
1 1 1 rgb
f
216.649 687.458 mo
219.482 679.77 li
221.1 679.77 li
223.933 687.458 li
222.112 687.458 li
221.505 685.738 li
219.077 685.738 li
218.47 687.458 li
216.649 687.458 li
cp
220.291 681.793 mo
219.38 684.524 li
221.202 684.524 li
220.291 681.793 li
cp
f
206.938 672.183 mo
206.23 672.183 205.623 671.576 205.623 670.868 cv
205.623 664.596 li
205.623 663.888 206.23 663.281 206.938 663.281 cv
207.646 663.281 208.253 663.888 208.253 664.596 cv
208.253 670.969 li
208.253 671.576 207.646 672.183 206.938 672.183 cv
cp
.843137 .870588 .929412 rgb
f
218.369 672.183 mo
217.661 672.183 217.054 671.576 217.054 670.868 cv
217.054 664.596 li
217.054 663.888 217.661 663.281 218.369 663.281 cv
219.077 663.281 219.684 663.888 219.684 664.596 cv
219.684 670.969 li
219.583 671.576 219.077 672.183 218.369 672.183 cv
cp
f
229.699 672.183 mo
228.991 672.183 228.384 671.576 228.384 670.868 cv
228.384 664.596 li
228.384 663.888 228.991 663.281 229.699 663.281 cv
230.407 663.281 231.014 663.888 231.014 664.596 cv
231.014 670.969 li
231.014 671.576 230.407 672.183 229.699 672.183 cv
cp
f
241.13 672.183 mo
240.422 672.183 239.814 671.576 239.814 670.868 cv
239.814 664.596 li
239.814 663.888 240.422 663.281 241.13 663.281 cv
241.838 663.281 242.445 663.888 242.445 664.596 cv
242.445 670.969 li
242.344 671.576 241.838 672.183 241.13 672.183 cv
cp
f
247.402 721.549 mo
201.88 721.549 li
201.172 721.549 200.565 720.941 200.565 720.233 cv
200.565 719.525 201.172 718.918 201.88 718.918 cv
247.402 718.918 li
248.11 718.918 248.717 719.525 248.717 720.233 cv
248.717 720.941 248.11 721.549 247.402 721.549 cv
cp
.14902 .14902 .14902 rgb
f
224.641 716.49 mo
224.641 717.198 225.248 717.806 225.956 717.806 cv
228.485 717.806 li
228.485 716.49 li
228.485 715.176 li
225.956 715.176 li
225.248 715.176 224.641 715.782 224.641 716.49 cv
cp
.196078 .192157 .2 rgb
f
224.641 712.646 mo
224.641 713.354 225.248 713.962 225.956 713.962 cv
228.485 713.962 li
228.485 712.646 li
228.485 711.331 li
225.956 711.331 li
225.248 711.433 224.641 711.938 224.641 712.646 cv
cp
f
224.641 708.903 mo
224.641 709.611 225.248 710.219 225.956 710.219 cv
228.485 710.219 li
228.485 708.903 li
228.485 707.589 li
225.956 707.589 li
225.248 707.589 224.641 708.195 224.641 708.903 cv
cp
f
222.112 716.49 mo
222.112 715.782 221.505 715.176 220.797 715.176 cv
218.268 715.176 li
218.268 716.49 li
218.268 717.806 li
220.797 717.806 li
221.606 717.704 222.112 717.098 222.112 716.49 cv
cp
f
222.112 712.646 mo
222.112 711.938 221.505 711.331 220.797 711.331 cv
218.268 711.331 li
218.268 712.646 li
218.268 713.962 li
220.797 713.962 li
221.606 713.962 222.112 713.354 222.112 712.646 cv
cp
f
222.112 708.903 mo
222.112 708.195 221.505 707.589 220.797 707.589 cv
218.268 707.589 li
218.268 708.903 li
218.268 710.117 li
220.797 710.117 li
221.606 710.117 222.112 709.511 222.112 708.903 cv
cp
f
209.467 672.183 mo
204.409 672.183 li
203.701 672.183 203.094 671.576 203.094 670.868 cv
203.094 670.16 203.701 669.553 204.409 669.553 cv
209.467 669.553 li
210.175 669.553 210.782 670.16 210.782 670.868 cv
210.782 671.576 210.175 672.183 209.467 672.183 cv
cp
.686275 .72549 .823529 rgb
f
220.898 672.183 mo
215.84 672.183 li
215.132 672.183 214.525 671.576 214.525 670.868 cv
214.525 670.16 215.132 669.553 215.84 669.553 cv
220.898 669.553 li
221.606 669.553 222.213 670.16 222.213 670.868 cv
222.112 671.576 221.606 672.183 220.898 672.183 cv
cp
f
232.228 672.183 mo
227.17 672.183 li
226.462 672.183 225.855 671.576 225.855 670.868 cv
225.855 670.16 226.462 669.553 227.17 669.553 cv
232.228 669.553 li
232.936 669.553 233.543 670.16 233.543 670.868 cv
233.543 671.576 232.936 672.183 232.228 672.183 cv
cp
f
243.659 672.183 mo
238.601 672.183 li
237.893 672.183 237.286 671.576 237.286 670.868 cv
237.286 670.16 237.893 669.553 238.601 669.553 cv
243.659 669.553 li
244.367 669.553 244.974 670.16 244.974 670.868 cv
244.873 671.576 244.367 672.183 243.659 672.183 cv
cp
f
46.5 642.341 mo
147.659 642.341 li
147.659 743.5 li
46.5 743.5 li
46.5 642.341 li
cp
1 1 1 rgb
f
109.522 667.529 mo
109.522 667.529 li
110.028 667.429 110.028 667.429 109.522 667.529 cv
cp
.843137 .870588 .929412 rgb
f
99.3052 700.305 mo
109.826 697.169 117.716 688.47 119.739 677.747 cv
115.693 675.42 111.849 671.576 109.522 667.529 cv
101.53 669.047 94.854 673.7 90.7065 679.973 cv
90.7065 679.973 li
89.0879 682.4 87.874 685.03 86.9634 687.964 cv
f
119.84 667.429 mo
120.447 670.868 120.346 674.308 119.739 677.747 cv
115.693 675.42 111.849 671.576 109.522 667.529 cv
112.86 666.923 116.3 666.821 119.84 667.429 cv
cp
.937255 .447059 .478431 rgb
f
115.187 705.565 mo
117.312 705.565 119.031 707.285 119.031 709.409 cv
119.031 711.534 117.312 713.254 115.187 713.254 cv
113.063 713.254 111.343 711.534 111.343 709.409 cv
111.444 707.184 113.063 705.565 115.187 705.565 cv
cp
.686275 .72549 .823529 rgb
f
121.56 691.605 mo
122.976 691.605 124.089 692.718 124.089 694.135 cv
124.089 695.551 122.976 696.663 121.56 696.663 cv
120.144 696.663 119.031 695.551 119.031 694.135 cv
119.031 692.718 120.144 691.605 121.56 691.605 cv
cp
f
79.7813 665.102 mo
81.1973 665.102 82.3101 666.215 82.3101 667.631 cv
82.3101 669.047 81.1973 670.16 79.7813 670.16 cv
78.3652 670.16 77.2524 669.047 77.2524 667.631 cv
77.2524 666.215 78.3652 665.102 79.7813 665.102 cv
cp
f
107.296 696.563 mo
103.958 710.32 li
94.854 704.756 li
99.3052 700.305 li
102.239 699.496 104.97 698.08 107.296 696.563 cv
cp
f
109.219 678.05 mo
106.892 675.724 103.048 675.724 100.721 678.05 cv
98.3945 680.377 98.3945 684.221 100.721 686.548 cv
103.048 688.874 106.892 688.874 109.219 686.548 cv
111.545 684.12 111.545 680.377 109.219 678.05 cv
cp
.341176 .376471 .435294 rgb
f
106.588 680.681 mo
106.184 680.275 105.577 680.073 105.071 680.073 cv
104.464 680.073 103.958 680.275 103.554 680.681 cv
102.643 681.591 102.643 682.906 103.554 683.816 cv
103.958 684.221 104.565 684.423 105.071 684.423 cv
105.678 684.423 106.184 684.221 106.588 683.816 cv
107.397 683.007 107.397 681.591 106.588 680.681 cv
cp
.254902 .290196 .337255 rgb
f
82.917 718.918 mo
82.6138 718.918 82.3101 718.817 82.0068 718.514 cv
81.501 718.008 81.501 717.198 82.0068 716.693 cv
91.7178 706.981 li
92.2236 706.476 93.0332 706.476 93.5391 706.981 cv
94.0449 707.487 94.0449 708.297 93.5391 708.803 cv
83.8276 718.514 li
83.5244 718.716 83.2207 718.918 82.917 718.918 cv
cp
.686275 .72549 .823529 rgb
f
81.0962 713.557 mo
80.793 713.557 80.4893 713.456 80.186 713.152 cv
79.6802 712.646 79.6802 711.837 80.186 711.331 cv
86.3564 705.16 li
86.8623 704.655 87.6719 704.655 88.1777 705.16 cv
88.6831 705.666 88.6831 706.476 88.1777 706.981 cv
82.0068 713.152 li
81.7031 713.354 81.3999 713.557 81.0962 713.557 cv
cp
f
77.5557 708.095 mo
77.2524 708.095 76.9487 707.993 76.6455 707.689 cv
76.1396 707.184 76.1396 706.375 76.6455 705.869 cv
82.8159 699.698 li
83.3218 699.192 84.1309 699.192 84.6367 699.698 cv
85.1426 700.204 85.1426 701.014 84.6367 701.519 cv
78.4663 707.689 li
78.1626 707.993 77.8594 708.095 77.5557 708.095 cv
cp
f
89.189 719.728 mo
88.8857 719.728 88.582 719.627 88.2788 719.323 cv
87.7729 718.817 87.7729 718.008 88.2788 717.502 cv
94.4492 711.331 li
94.9551 710.825 95.7642 710.825 96.27 711.331 cv
96.7759 711.837 96.7759 712.646 96.27 713.152 cv
89.9985 719.424 li
89.7959 719.627 89.4927 719.728 89.189 719.728 cv
cp
f
71.2837 707.285 mo
70.9805 707.285 70.6768 707.184 70.3735 706.881 cv
69.8677 706.375 69.8677 705.565 70.3735 705.06 cv
78.3652 697.169 li
78.8711 696.663 79.6802 696.663 80.186 697.169 cv
80.6919 697.675 80.6919 698.484 80.186 698.99 cv
72.1943 706.881 li
71.8911 707.083 71.5874 707.285 71.2837 707.285 cv
cp
f
69.4629 700.608 mo
68.9575 700.103 68.9575 699.293 69.4629 698.788 cv
75.6338 692.617 li
76.1396 692.111 76.9487 692.111 77.4546 692.617 cv
77.9604 693.123 77.9604 693.932 77.4546 694.438 cv
71.2837 700.608 li
70.7783 701.114 69.9688 701.114 69.4629 700.608 cv
cp
f
90.7065 679.973 mo
89.3916 681.995 88.2788 684.12 87.4692 686.345 cv
87.3682 686.75 87.166 687.256 86.9634 687.964 cv
82.5127 692.415 li
76.9487 683.311 li
90.7065 679.973 li
cp
f
93.5391 689.987 mo
89.29 694.235 li
88.7842 694.741 88.481 695.551 88.481 696.259 cv
88.481 697.877 89.7959 699.192 91.4146 699.192 cv
92.2236 699.192 92.9321 698.889 93.4375 698.383 cv
97.6865 694.135 li
98.7993 693.021 98.7993 691.201 97.6865 689.987 cv
96.4727 688.874 94.6519 688.773 93.5391 689.987 cv
cp
.341176 .376471 .435294 rgb
f
109.522 667.529 mo
109.522 667.529 li
110.028 667.429 110.028 667.429 109.522 667.529 cv
cp
.686275 .72549 .823529 rgb
f
103.453 692.516 mo
102.947 693.021 102.947 693.831 103.453 694.337 cv
106.285 697.169 li
106.993 696.765 107.701 696.259 108.409 695.753 cv
105.172 692.516 li
104.768 692.01 103.958 692.01 103.453 692.516 cv
cp
f
93.4375 681.287 mo
93.7412 681.287 94.0449 681.186 94.3481 680.883 cv
94.854 680.377 94.854 679.567 94.3481 679.062 cv
92.7295 677.443 li
92.2236 678.05 91.6167 678.758 91.2124 679.467 cv
92.6284 680.883 li
92.7295 681.085 93.0332 681.287 93.4375 681.287 cv
cp
f
556.341 514.881 mo
657.5 514.881 li
657.5 616.04 li
556.341 616.04 li
556.341 514.881 li
cp
1 1 1 rgb
f
624.725 564.854 mo
624.017 564.854 623.409 564.246 623.409 563.538 cv
623.409 550.994 li
623.409 550.286 624.017 549.68 624.725 549.68 cv
625.433 549.68 626.039 550.286 626.039 550.994 cv
626.039 563.64 li
626.039 564.348 625.433 564.854 624.725 564.854 cv
cp
.254902 .290196 .337255 rgb
f
627.254 554.737 mo
618.352 554.737 li
617.644 554.737 617.036 554.131 617.036 553.422 cv
617.036 552.714 617.644 552.107 618.352 552.107 cv
627.254 552.107 li
627.962 552.107 628.568 552.714 628.568 553.422 cv
628.568 554.231 627.962 554.737 627.254 554.737 cv
cp
.341176 .376471 .435294 rgb
f
588.105 564.854 mo
587.396 564.854 586.79 564.246 586.79 563.538 cv
586.79 550.994 li
586.79 550.286 587.396 549.68 588.105 549.68 cv
588.813 549.68 589.42 550.286 589.42 550.994 cv
589.42 563.64 li
589.319 564.348 588.813 564.854 588.105 564.854 cv
cp
.254902 .290196 .337255 rgb
f
594.377 554.737 mo
585.475 554.737 li
584.767 554.737 584.16 554.131 584.16 553.422 cv
584.16 552.714 584.767 552.107 585.475 552.107 cv
594.377 552.107 li
595.085 552.107 595.691 552.714 595.691 553.422 cv
595.691 554.231 595.085 554.737 594.377 554.737 cv
cp
.341176 .376471 .435294 rgb
f
613.395 535.922 mo
594.377 535.922 li
594.377 537.54 594.377 562.729 594.377 563.74 cv
618.352 563.74 li
618.352 562.729 618.452 542.093 618.452 540.979 cv
613.395 535.922 li
cp
.92549 .941176 .945098 rgb
f
618.453 540.979 mo
613.395 540.979 li
613.395 535.922 li
618.453 540.979 li
cp
.745098 .764706 .780392 rgb
f
607.021 543.509 mo
598.12 543.509 li
597.411 543.509 596.805 542.901 596.805 542.193 cv
596.805 541.485 597.411 540.879 598.12 540.879 cv
607.021 540.879 li
607.729 540.879 608.337 541.485 608.337 542.193 cv
608.337 543.003 607.729 543.509 607.021 543.509 cv
cp
.235294 .231373 .239216 rgb
f
613.395 547.353 mo
598.221 547.353 li
597.513 547.353 596.906 546.746 596.906 546.038 cv
596.906 545.329 597.513 544.723 598.221 544.723 cv
613.395 544.723 li
614.103 544.723 614.71 545.329 614.71 546.038 cv
614.608 546.746 614.103 547.353 613.395 547.353 cv
cp
f
613.395 551.096 mo
598.221 551.096 li
597.513 551.096 596.906 550.488 596.906 549.78 cv
596.906 549.072 597.513 548.466 598.221 548.466 cv
613.395 548.466 li
614.103 548.466 614.71 549.072 614.71 549.78 cv
614.608 550.59 614.103 551.096 613.395 551.096 cv
cp
f
613.395 554.939 mo
598.221 554.939 li
597.513 554.939 596.906 554.333 596.906 553.625 cv
596.906 552.916 597.513 552.31 598.221 552.31 cv
613.395 552.31 li
614.103 552.31 614.71 552.916 614.71 553.625 cv
614.608 554.333 614.103 554.939 613.395 554.939 cv
cp
f
576.674 585.085 mo
575.966 585.085 575.359 584.479 575.359 583.77 cv
575.359 569.911 li
575.359 569.203 575.966 568.596 576.674 568.596 cv
580.518 568.596 li
581.227 568.596 581.833 569.203 581.833 569.911 cv
581.833 570.619 581.227 571.227 580.518 571.227 cv
577.989 571.227 li
577.989 583.871 li
577.989 584.579 577.382 585.085 576.674 585.085 cv
cp
.341176 .376471 .435294 rgb
f
636.155 571.227 mo
632.312 571.227 li
631.604 571.227 630.996 570.619 630.996 569.911 cv
630.996 569.203 631.604 568.596 632.312 568.596 cv
636.155 568.596 li
636.863 568.596 637.471 569.203 637.471 569.911 cv
637.471 570.619 636.863 571.227 636.155 571.227 cv
cp
.254902 .290196 .337255 rgb
f
636.155 573.755 mo
635.447 573.755 634.841 573.148 634.841 572.44 cv
634.841 567.382 li
634.841 566.674 635.447 566.067 636.155 566.067 cv
636.863 566.067 637.471 566.674 637.471 567.382 cv
637.471 572.44 li
637.369 573.148 636.863 573.755 636.155 573.755 cv
cp
.341176 .376471 .435294 rgb
f
584.261 580.027 mo
628.568 580.027 li
628.568 593.987 li
584.261 593.987 li
584.261 580.027 li
cp
f
622.195 583.871 mo
624.725 583.871 li
624.725 586.4 li
622.195 586.4 li
622.195 583.871 li
cp
.843137 .870588 .929412 rgb
f
618.453 587.614 mo
620.981 587.614 li
620.981 590.143 li
618.453 590.143 li
618.453 587.614 li
cp
f
618.453 583.871 mo
620.981 583.871 li
620.981 586.4 li
618.453 586.4 li
618.453 583.871 li
cp
f
614.608 587.614 mo
617.138 587.614 li
617.138 590.143 li
614.608 590.143 li
614.608 587.614 li
cp
f
614.608 583.871 mo
617.138 583.871 li
617.138 586.4 li
614.608 586.4 li
614.608 583.871 li
cp
f
610.865 587.614 mo
613.395 587.614 li
613.395 590.143 li
610.865 590.143 li
610.865 587.614 li
cp
f
610.865 583.871 mo
613.395 583.871 li
613.395 586.4 li
610.865 586.4 li
610.865 583.871 li
cp
f
607.021 587.614 mo
609.551 587.614 li
609.551 590.143 li
607.021 590.143 li
607.021 587.614 li
cp
f
607.021 583.871 mo
609.551 583.871 li
609.551 586.4 li
607.021 586.4 li
607.021 583.871 li
cp
f
603.278 587.614 mo
605.808 587.614 li
605.808 590.143 li
603.278 590.143 li
603.278 587.614 li
cp
f
603.278 583.871 mo
605.808 583.871 li
605.808 586.4 li
603.278 586.4 li
603.278 583.871 li
cp
f
599.435 587.614 mo
601.964 587.614 li
601.964 590.143 li
599.435 590.143 li
599.435 587.614 li
cp
f
599.435 583.871 mo
601.964 583.871 li
601.964 586.4 li
599.435 586.4 li
599.435 583.871 li
cp
f
595.691 587.614 mo
598.221 587.614 li
598.221 590.143 li
595.691 590.143 li
595.691 587.614 li
cp
f
595.691 583.871 mo
598.221 583.871 li
598.221 586.4 li
595.691 586.4 li
595.691 583.871 li
cp
f
591.848 587.614 mo
594.377 587.614 li
594.377 590.143 li
591.848 590.143 li
591.848 587.614 li
cp
f
591.848 583.871 mo
594.377 583.871 li
594.377 586.4 li
591.848 586.4 li
591.848 583.871 li
cp
f
580.518 563.64 mo
580.518 567.079 580.518 574.261 580.518 576.284 cv
582.137 576.284 631.198 576.284 632.412 576.284 cv
632.412 572.946 632.412 565.662 632.412 563.64 cv
629.782 563.64 582.946 563.64 580.518 563.64 cv
cp
f
591.848 567.382 mo
594.377 567.382 li
594.377 569.911 li
591.848 569.911 li
591.848 567.382 li
cp
.686275 .72549 .823529 rgb
f
588.105 583.871 mo
590.634 583.871 li
590.634 586.4 li
588.105 586.4 li
588.105 583.871 li
cp
.843137 .870588 .929412 rgb
f
588.105 567.382 mo
590.634 567.382 li
590.634 569.911 li
588.105 569.911 li
588.105 567.382 li
cp
.686275 .72549 .823529 rgb
f
584.261 567.382 mo
586.79 567.382 li
586.79 569.911 li
584.261 569.911 li
584.261 567.382 li
cp
f
632.312 581.342 mo
580.518 581.342 li
579.81 581.342 579.203 580.735 579.203 580.027 cv
579.203 579.319 579.81 578.712 580.518 578.712 cv
632.412 578.712 li
633.121 578.712 633.728 579.319 633.728 580.027 cv
633.627 580.735 633.02 581.342 632.312 581.342 cv
cp
.254902 .290196 .337255 rgb
f
598.221 568.697 mo
598.221 569.405 598.828 570.013 599.536 570.013 cv
632.412 570.013 li
632.412 569.102 632.412 568.293 632.412 567.483 cv
599.435 567.483 li
598.727 567.382 598.221 567.989 598.221 568.697 cv
cp
.686275 .72549 .823529 rgb
f
620.981 571.227 mo
620.273 571.227 619.667 571.833 619.667 572.541 cv
619.667 573.249 620.273 573.856 620.981 573.856 cv
632.412 573.856 li
632.412 573.047 632.412 572.238 632.412 571.327 cv
620.981 571.327 li
620.981 571.227 li
cp
f
428.881 514.881 mo
530.04 514.881 li
530.04 616.04 li
428.881 616.04 li
428.881 514.881 li
cp
1 1 1 rgb
f
489.07 593.178 mo
488.362 593.178 487.755 592.571 487.755 591.862 cv
487.755 580.533 li
470.053 580.533 li
470.053 591.964 li
470.053 592.672 469.445 593.279 468.737 593.279 cv
468.029 593.279 467.423 592.672 467.423 591.964 cv
467.423 579.218 li
467.423 578.51 468.029 577.902 468.737 577.902 cv
488.969 577.902 li
489.678 577.902 490.284 578.51 490.284 579.218 cv
490.284 591.862 li
490.284 592.571 489.778 593.178 489.07 593.178 cv
cp
.254902 .290196 .337255 rgb
f
454.979 544.115 mo
503.03 544.115 li
503.03 551.702 li
454.979 551.702 li
454.979 544.115 li
cp
f
454.979 551.702 mo
467.625 580.735 li
478.954 580.735 li
490.386 580.735 li
503.03 551.702 li
454.979 551.702 li
cp
.341176 .376471 .435294 rgb
f
478.954 580.735 mo
475.414 580.735 472.581 583.567 472.581 587.108 cv
472.581 590.648 475.414 593.481 478.954 593.481 cv
482.495 593.481 485.327 590.648 485.327 587.108 cv
485.327 583.567 482.495 580.735 478.954 580.735 cv
cp
.988235 .847059 .517647 rgb
f
492.914 555.445 mo
495.443 555.445 li
495.443 557.975 li
492.914 557.975 li
492.914 555.445 li
cp
.843137 .870588 .929412 rgb
f
490.386 536.528 mo
492.914 536.528 li
492.914 541.587 li
490.386 541.587 li
490.386 536.528 li
cp
.937255 .447059 .478431 rgb
f
489.07 559.289 mo
491.6 559.289 li
491.6 561.818 li
489.07 561.818 li
489.07 559.289 li
cp
.843137 .870588 .929412 rgb
f
489.07 555.445 mo
491.6 555.445 li
491.6 557.975 li
489.07 557.975 li
489.07 555.445 li
cp
f
486.541 537.742 mo
489.07 537.742 li
489.07 541.587 li
486.541 541.587 li
486.541 537.742 li
cp
.937255 .447059 .478431 rgb
f
485.327 563.032 mo
487.856 563.032 li
487.856 565.562 li
485.327 565.562 li
485.327 563.032 li
cp
.843137 .870588 .929412 rgb
f
485.327 559.289 mo
487.856 559.289 li
487.856 561.818 li
485.327 561.818 li
485.327 559.289 li
cp
f
485.327 555.445 mo
487.856 555.445 li
487.856 557.975 li
485.327 557.975 li
485.327 555.445 li
cp
f
482.799 536.528 mo
485.327 536.528 li
485.327 541.587 li
482.799 541.587 li
482.799 536.528 li
cp
.937255 .447059 .478431 rgb
f
481.483 566.877 mo
484.013 566.877 li
484.013 569.405 li
481.483 569.405 li
481.483 566.877 li
cp
.843137 .870588 .929412 rgb
f
481.483 563.032 mo
484.013 563.032 li
484.013 565.562 li
481.483 565.562 li
481.483 563.032 li
cp
f
481.483 559.289 mo
484.013 559.289 li
484.013 561.818 li
481.483 561.818 li
481.483 559.289 li
cp
f
481.483 555.445 mo
484.013 555.445 li
484.013 557.975 li
481.483 557.975 li
481.483 555.445 li
cp
f
478.954 537.742 mo
481.483 537.742 li
481.483 541.587 li
478.954 541.587 li
478.954 537.742 li
cp
.937255 .447059 .478431 rgb
f
477.74 574.464 mo
480.27 574.464 li
480.27 576.992 li
477.74 576.992 li
477.74 574.464 li
cp
.843137 .870588 .929412 rgb
f
477.74 570.619 mo
480.27 570.619 li
480.27 573.148 li
477.74 573.148 li
477.74 570.619 li
cp
f
477.74 566.877 mo
480.27 566.877 li
480.27 569.405 li
477.74 569.405 li
477.74 566.877 li
cp
f
477.74 563.032 mo
480.27 563.032 li
480.27 565.562 li
477.74 565.562 li
477.74 563.032 li
cp
f
477.74 559.289 mo
480.27 559.289 li
480.27 561.818 li
477.74 561.818 li
477.74 559.289 li
cp
f
477.74 555.445 mo
480.27 555.445 li
480.27 557.975 li
477.74 557.975 li
477.74 555.445 li
cp
f
478.854 585.187 mo
478.448 585.187 478.246 585.389 478.246 585.692 cv
478.246 585.793 478.246 585.995 478.348 585.995 cv
478.448 586.097 478.55 586.197 478.752 586.197 cv
478.854 585.187 li
478.854 585.187 li
cp
479.865 588.423 mo
479.865 588.322 479.764 588.12 479.662 588.12 cv
479.562 588.019 479.359 587.917 479.157 587.917 cv
479.157 588.929 li
479.662 588.828 479.865 588.626 479.865 588.423 cv
cp
481.382 588.221 mo
481.382 588.524 481.281 588.828 481.18 589.03 cv
481.079 589.232 480.877 589.435 480.674 589.536 cv
480.27 589.84 479.764 589.94 479.258 590.042 cv
479.258 591.054 li
478.651 591.054 li
478.651 590.042 li
477.943 589.94 477.134 589.738 476.426 589.334 cv
477.032 588.12 li
477.134 588.221 477.943 588.727 478.752 588.828 cv
478.752 587.715 li
478.55 587.614 478.044 587.513 477.64 587.311 cv
477.234 587.108 476.932 586.906 476.83 586.501 cv
476.729 586.097 476.729 585.591 476.932 585.085 cv
477.234 584.377 477.943 583.973 478.752 583.973 cv
478.752 583.163 li
479.359 583.163 li
479.359 583.973 li
479.764 583.973 480.067 584.073 480.371 584.175 cv
480.674 584.275 480.978 584.479 481.18 584.579 cv
480.573 585.692 li
480.472 585.591 479.764 585.187 479.258 585.085 cv
479.258 586.197 li
479.359 586.197 479.764 586.299 480.27 586.501 cv
481.079 587.007 481.382 587.513 481.382 588.221 cv
cp
.235294 .231373 .239216 rgb
f
475.212 536.528 mo
477.74 536.528 li
477.74 541.587 li
475.212 541.587 li
475.212 536.528 li
cp
.937255 .447059 .478431 rgb
f
473.896 566.877 mo
476.426 566.877 li
476.426 569.405 li
473.896 569.405 li
473.896 566.877 li
cp
.843137 .870588 .929412 rgb
f
473.896 563.032 mo
476.426 563.032 li
476.426 565.562 li
473.896 565.562 li
473.896 563.032 li
cp
f
473.896 559.289 mo
476.426 559.289 li
476.426 561.818 li
473.896 561.818 li
473.896 559.289 li
cp
f
473.896 555.445 mo
476.426 555.445 li
476.426 557.975 li
473.896 557.975 li
473.896 555.445 li
cp
f
471.367 537.742 mo
473.896 537.742 li
473.896 541.587 li
471.367 541.587 li
471.367 537.742 li
cp
.937255 .447059 .478431 rgb
f
470.153 563.032 mo
472.683 563.032 li
472.683 565.562 li
470.153 565.562 li
470.153 563.032 li
cp
.843137 .870588 .929412 rgb
f
470.153 559.289 mo
472.683 559.289 li
472.683 561.818 li
470.153 561.818 li
470.153 559.289 li
cp
f
470.153 555.445 mo
472.683 555.445 li
472.683 557.975 li
470.153 557.975 li
470.153 555.445 li
cp
f
467.625 537.742 mo
470.153 537.742 li
470.153 541.587 li
467.625 541.587 li
467.625 537.742 li
cp
.937255 .447059 .478431 rgb
f
466.31 559.289 mo
468.839 559.289 li
468.839 561.818 li
466.31 561.818 li
466.31 559.289 li
cp
.843137 .870588 .929412 rgb
f
466.31 555.445 mo
468.839 555.445 li
468.839 557.975 li
466.31 557.975 li
466.31 555.445 li
cp
f
463.78 536.528 mo
466.31 536.528 li
466.31 541.587 li
463.78 541.587 li
463.78 536.528 li
cp
.937255 .447059 .478431 rgb
f
462.566 555.445 mo
465.096 555.445 li
465.096 557.975 li
462.566 557.975 li
462.566 555.445 li
cp
.843137 .870588 .929412 rgb
f
506.773 589.637 mo
496.657 589.637 li
495.949 589.637 495.342 589.03 495.342 588.322 cv
495.342 587.614 495.949 587.007 496.657 587.007 cv
506.773 587.007 li
507.481 587.007 508.088 587.614 508.088 588.322 cv
508.088 589.03 507.481 589.637 506.773 589.637 cv
cp
f
506.773 585.793 mo
497.871 585.793 li
497.163 585.793 496.556 585.187 496.556 584.479 cv
496.556 583.77 497.163 583.163 497.871 583.163 cv
506.773 583.163 li
507.481 583.163 508.088 583.77 508.088 584.479 cv
508.088 585.287 507.481 585.793 506.773 585.793 cv
cp
f
506.773 582.05 mo
499.187 582.05 li
498.479 582.05 497.871 581.443 497.871 580.735 cv
497.871 580.027 498.479 579.42 499.187 579.42 cv
506.773 579.42 li
507.481 579.42 508.088 580.027 508.088 580.735 cv
508.088 581.443 507.481 582.05 506.773 582.05 cv
cp
f
506.773 578.206 mo
500.4 578.206 li
499.692 578.206 499.085 577.6 499.085 576.892 cv
499.085 576.183 499.692 575.576 500.4 575.576 cv
506.773 575.576 li
507.481 575.576 508.088 576.183 508.088 576.892 cv
508.088 577.6 507.481 578.206 506.773 578.206 cv
cp
f
506.773 574.464 mo
501.715 574.464 li
501.007 574.464 500.4 573.856 500.4 573.148 cv
500.4 572.44 501.007 571.833 501.715 571.833 cv
506.773 571.833 li
507.481 571.833 508.088 572.44 508.088 573.148 cv
508.088 573.856 507.481 574.464 506.773 574.464 cv
cp
f
461.252 589.637 mo
451.136 589.637 li
450.428 589.637 449.82 589.03 449.82 588.322 cv
449.82 587.614 450.428 587.007 451.136 587.007 cv
461.252 587.007 li
461.96 587.007 462.566 587.614 462.566 588.322 cv
462.566 589.03 461.96 589.637 461.252 589.637 cv
cp
f
460.038 585.793 mo
451.136 585.793 li
450.428 585.793 449.82 585.187 449.82 584.479 cv
449.82 583.77 450.428 583.163 451.136 583.163 cv
460.038 583.163 li
460.746 583.163 461.353 583.77 461.353 584.479 cv
461.252 585.287 460.645 585.793 460.038 585.793 cv
cp
f
458.723 582.05 mo
451.136 582.05 li
450.428 582.05 449.82 581.443 449.82 580.735 cv
449.82 580.027 450.428 579.42 451.136 579.42 cv
458.723 579.42 li
459.431 579.42 460.038 580.027 460.038 580.735 cv
460.038 581.443 459.431 582.05 458.723 582.05 cv
cp
f
457.509 578.206 mo
451.136 578.206 li
450.428 578.206 449.82 577.6 449.82 576.892 cv
449.82 576.183 450.428 575.576 451.136 575.576 cv
457.509 575.576 li
458.217 575.576 458.824 576.183 458.824 576.892 cv
458.824 577.6 458.115 578.206 457.509 578.206 cv
cp
f
456.193 574.464 mo
451.136 574.464 li
450.428 574.464 449.82 573.856 449.82 573.148 cv
449.82 572.44 450.428 571.833 451.136 571.833 cv
456.193 571.833 li
456.901 571.833 457.509 572.44 457.509 573.148 cv
457.509 573.856 456.901 574.464 456.193 574.464 cv
cp
f
301.42 514.881 mo
402.579 514.881 li
402.579 616.04 li
301.42 616.04 li
301.42 514.881 li
cp
1 1 1 rgb
f
374.862 550.388 mo
373.345 550.388 329.644 550.388 327.924 550.388 cv
326.609 550.388 325.497 551.399 325.497 552.815 cv
325.497 582.354 li
325.497 582.556 325.598 582.657 325.8 582.657 cv
326.609 582.657 374.053 582.657 377.29 582.657 cv
377.29 552.815 li
377.29 551.5 376.177 550.388 374.862 550.388 cv
cp
.341176 .376471 .435294 rgb
f
330.757 555.445 mo
372.231 555.445 li
372.231 578.206 li
330.757 578.206 li
330.757 555.445 li
cp
.92549 .941176 .945098 rgb
f
337.433 546.645 mo
337.433 549.376 337.433 562.122 337.433 564.348 cv
364.645 564.348 li
364.645 562.324 364.645 548.364 364.645 546.645 cv
337.433 546.645 li
cp
.94902 .870588 .72549 rgb
f
321.956 582.657 mo
321.956 587.412 li
337.534 592.166 li
365.556 592.166 li
381.134 587.412 li
381.134 582.657 li
374.761 582.657 330.048 582.657 321.956 582.657 cv
cp
.254902 .290196 .337255 rgb
f
342.997 582.657 mo
359.891 582.657 li
359.891 586.501 li
342.997 586.501 li
342.997 582.657 li
cp
.686275 .72549 .823529 rgb
f
358.271 569.405 mo
360.801 569.405 li
360.801 571.935 li
358.271 571.935 li
358.271 569.405 li
cp
.745098 .764706 .780392 rgb
f
354.529 573.148 mo
357.058 573.148 li
357.058 575.678 li
354.529 575.678 li
354.529 573.148 li
cp
f
354.529 569.405 mo
357.058 569.405 li
357.058 571.935 li
354.529 571.935 li
354.529 569.405 li
cp
f
350.685 573.148 mo
353.214 573.148 li
353.214 575.678 li
350.685 575.678 li
350.685 573.148 li
cp
f
350.685 569.405 mo
353.214 569.405 li
353.214 571.935 li
350.685 571.935 li
350.685 569.405 li
cp
f
346.942 573.148 mo
349.471 573.148 li
349.471 575.678 li
346.942 575.678 li
346.942 573.148 li
cp
f
346.942 569.405 mo
349.471 569.405 li
349.471 571.935 li
346.942 571.935 li
346.942 569.405 li
cp
f
343.098 569.405 mo
345.627 569.405 li
345.627 571.935 li
343.098 571.935 li
343.098 569.405 li
cp
f
364.645 564.348 mo
337.433 564.348 li
337.433 562.628 337.433 548.87 337.433 546.645 cv
350.887 558.075 li
364.645 546.645 li
364.645 549.376 364.645 562.122 364.645 564.348 cv
cp
.839216 .768627 .588235 rgb
f
344.312 557.367 mo
343.806 556.861 342.997 556.861 342.491 557.367 cv
337.332 562.526 li
337.332 563.438 337.332 564.044 337.332 564.348 cv
339.153 564.348 li
344.312 559.188 li
344.818 558.683 344.818 557.873 344.312 557.367 cv
cp
.705882 .65098 .501961 rgb
f
364.645 562.526 mo
359.485 557.367 li
358.98 556.861 358.171 556.861 357.665 557.367 cv
357.159 557.873 357.159 558.683 357.665 559.188 cv
362.824 564.348 li
364.645 564.348 li
364.645 563.943 364.645 563.336 364.645 562.526 cv
cp
f
377.29 593.38 mo
326.71 593.38 li
326.002 593.38 325.395 592.773 325.395 592.065 cv
325.395 591.356 326.002 590.75 326.71 590.75 cv
377.29 590.75 li
377.998 590.75 378.604 591.356 378.604 592.065 cv
378.504 592.874 377.998 593.38 377.29 593.38 cv
cp
.686275 .72549 .823529 rgb
f
338.04 542.801 mo
324.181 542.801 li
323.473 542.801 322.866 542.193 322.866 541.485 cv
322.866 540.777 323.473 540.171 324.181 540.171 cv
338.04 540.171 li
338.748 540.171 339.355 540.777 339.355 541.485 cv
339.355 542.295 338.748 542.801 338.04 542.801 cv
cp
.843137 .870588 .929412 rgb
f
331.768 539.058 mo
324.181 539.058 li
323.473 539.058 322.866 538.451 322.866 537.742 cv
322.866 537.034 323.473 536.428 324.181 536.428 cv
331.768 536.428 li
332.476 536.428 333.083 537.034 333.083 537.742 cv
333.083 538.451 332.476 539.058 331.768 539.058 cv
cp
f
379.818 542.801 mo
365.858 542.801 li
365.15 542.801 364.544 542.193 364.544 541.485 cv
364.544 540.777 365.15 540.171 365.858 540.171 cv
379.818 540.171 li
380.526 540.171 381.134 540.777 381.134 541.485 cv
381.032 542.295 380.526 542.801 379.818 542.801 cv
cp
f
379.818 539.058 mo
372.231 539.058 li
371.523 539.058 370.917 538.451 370.917 537.742 cv
370.917 537.034 371.523 536.428 372.231 536.428 cv
379.818 536.428 li
380.526 536.428 381.134 537.034 381.134 537.742 cv
381.134 538.451 380.526 539.058 379.818 539.058 cv
cp
f
173.96 514.881 mo
275.119 514.881 li
275.119 616.04 li
173.96 616.04 li
173.96 514.881 li
cp
1 1 1 rgb
f
251.246 576.386 mo
251.246 574.666 249.83 573.249 248.11 573.249 cv
249.02 573.249 249.729 572.946 250.335 572.339 cv
250.942 571.732 251.246 571.024 251.246 570.113 cv
251.246 568.394 249.83 566.978 248.11 566.978 cv
238.601 566.978 li
234.656 566.978 li
234.15 566.978 li
234.049 566.978 233.947 566.978 233.947 566.978 cv
233.947 566.978 233.947 566.978 233.846 566.978 cv
233.745 566.978 233.745 566.978 233.644 566.978 cv
233.543 566.978 li
233.442 566.978 233.442 566.978 233.341 566.978 cv
233.341 566.978 233.341 566.978 233.239 566.978 cv
233.138 566.978 233.138 566.978 233.037 566.877 cv
233.037 566.877 233.037 566.877 232.936 566.877 cv
232.835 566.877 li
232.733 566.877 li
232.632 566.877 li
232.531 566.877 li
232.531 566.877 232.43 566.877 232.43 566.775 cv
232.329 566.674 li
232.329 566.674 li
232.228 566.573 li
232.228 566.573 li
232.126 566.472 li
232.126 566.472 li
232.025 566.371 231.924 566.27 231.924 566.067 cv
231.924 566.067 li
231.924 566.067 231.924 565.966 231.823 565.966 cv
231.823 565.966 li
231.722 565.764 231.621 565.46 231.621 565.157 cv
231.621 564.348 231.621 563.74 231.621 563.134 cv
231.621 558.278 li
231.621 556.053 229.8 554.333 227.676 554.333 cv
225.349 554.333 li
225.349 563.234 li
225.349 565.359 223.629 570.821 221.505 570.821 cv
221.505 592.368 li
238.601 592.368 li
248.11 592.368 li
249.02 592.368 249.729 592.065 250.335 591.458 cv
250.942 590.852 251.246 590.143 251.246 589.232 cv
251.246 587.513 249.83 586.097 248.11 586.097 cv
249.02 586.097 249.729 585.793 250.335 585.187 cv
250.942 584.579 251.246 583.871 251.246 582.961 cv
251.246 581.241 249.83 579.825 248.11 579.825 cv
249.02 579.825 249.729 579.521 250.335 578.914 cv
250.841 578.105 251.246 577.296 251.246 576.386 cv
cp
1 .847059 .658824 rgb
f
208.961 593.481 mo
208.253 593.481 207.646 592.874 207.646 592.166 cv
207.646 583.264 li
207.646 582.556 208.253 581.949 208.961 581.949 cv
209.669 581.949 210.276 582.556 210.276 583.264 cv
210.276 592.166 li
210.276 592.874 209.669 593.481 208.961 593.481 cv
cp
.192157 .227451 .321569 rgb
f
215.233 570.721 mo
221.606 570.721 li
221.606 592.268 li
215.233 592.268 li
215.233 570.721 li
cp
f
219.583 542.901 mo
219.583 560.604 li
206.129 560.604 li
199.351 565.662 li
199.351 560.604 li
195.608 560.604 li
195.608 542.901 li
219.583 542.901 li
cp
.843137 .870588 .929412 rgb
f
245.783 536.428 mo
242.04 536.428 239.106 539.463 239.106 543.104 cv
239.106 546.746 242.142 549.78 245.783 549.78 cv
249.526 549.78 252.459 546.746 252.459 543.104 cv
252.459 539.463 249.526 536.428 245.783 536.428 cv
cp
.52549 .862745 .992157 rgb
f
241.737 548.566 mo
241.737 548.566 241.737 548.466 241.737 548.566 cv
240.624 547.758 239.208 547.252 237.69 547.252 cv
233.947 547.252 231.014 550.286 231.014 553.928 cv
231.014 556.153 232.126 558.177 233.846 559.391 cv
236.173 561.11 239.309 561.11 241.737 559.391 cv
243.457 558.177 244.569 556.153 244.569 553.928 cv
244.468 551.702 243.355 549.78 241.737 548.566 cv
cp
.207843 .596078 .858824 rgb
f
248.312 573.249 mo
250.032 573.249 251.448 574.666 251.448 576.386 cv
251.448 578.105 250.032 579.521 248.312 579.521 cv
238.803 579.521 li
237.083 579.521 235.667 578.105 235.667 576.386 cv
235.667 574.666 237.083 573.249 238.803 573.249 cv
248.312 573.249 li
cp
.917647 .741176 .54902 rgb
f
248.312 585.895 mo
250.032 585.895 251.448 587.311 251.448 589.03 cv
251.448 590.75 250.032 592.166 248.312 592.166 cv
238.803 592.166 li
237.083 592.166 235.667 590.75 235.667 589.03 cv
235.667 588.12 235.971 587.412 236.578 586.805 cv
237.185 586.197 237.893 585.895 238.803 585.895 cv
248.312 585.895 li
cp
f
248.312 579.622 mo
250.032 579.622 251.448 581.039 251.448 582.759 cv
251.448 584.479 250.032 585.895 248.312 585.895 cv
238.803 585.895 li
237.083 585.895 235.667 584.479 235.667 582.759 cv
235.667 581.039 237.083 579.622 238.803 579.622 cv
248.312 579.622 li
cp
.756863 .615686 .454902 rgb
f
248.312 566.978 mo
250.032 566.978 251.448 568.394 251.448 570.113 cv
251.448 571.833 250.032 573.249 248.312 573.249 cv
238.803 573.249 li
237.083 573.249 235.667 571.833 235.667 570.113 cv
235.667 568.394 237.083 566.978 238.803 566.978 cv
248.312 566.978 li
cp
f
246.086 544.621 mo
246.086 544.824 246.086 544.925 246.188 544.925 cv
246.289 544.925 246.39 545.026 246.491 545.026 cv
246.693 545.026 246.997 544.925 247.098 544.824 cv
247.402 546.038 li
247.3 546.139 247.098 546.24 246.795 546.24 cv
246.491 546.341 246.289 546.341 245.985 546.341 cv
245.176 546.341 244.67 545.937 244.67 545.026 cv
244.67 542.497 li
244.063 542.497 li
244.063 541.385 li
244.67 541.385 li
244.67 539.867 li
246.188 539.867 li
246.188 541.385 li
247.199 541.385 li
247.199 542.497 li
246.188 542.497 li
246.188 544.621 li
246.086 544.621 li
cp
1 1 1 rgb
f
237.994 552.815 mo
239.106 552.815 li
239.106 553.928 li
237.994 553.928 li
237.994 557.267 li
236.477 557.267 li
236.477 553.928 li
235.87 553.928 li
235.87 552.815 li
236.477 552.815 li
236.477 552.512 236.477 552.107 236.578 551.602 cv
236.982 550.388 238.196 550.186 239.41 550.691 cv
239.106 551.804 li
239.005 551.804 238.904 551.702 238.803 551.702 cv
238.196 551.602 237.893 551.702 237.893 552.31 cv
237.994 552.815 li
237.994 552.815 li
cp
f
215.941 593.481 mo
200.16 593.481 li
199.452 593.481 198.845 592.874 198.845 592.166 cv
198.845 591.458 199.452 590.852 200.16 590.852 cv
214.727 590.852 li
214.727 572.035 li
206.533 572.035 li
205.825 572.035 205.218 571.429 205.218 570.721 cv
205.218 570.013 205.825 569.405 206.533 569.405 cv
216.042 569.405 li
216.75 569.405 217.357 570.013 217.357 570.721 cv
217.357 592.268 li
217.256 592.874 216.649 593.481 215.941 593.481 cv
cp
.137255 .168627 .247059 rgb
f
228.08 577.802 mo
227.473 578.206 227.372 579.016 227.777 579.521 cv
227.979 579.825 228.384 580.027 228.789 580.027 cv
229.092 580.027 229.294 579.926 229.497 579.825 cv
234.15 576.588 234.656 570.417 234.555 566.877 cv
234.049 566.877 li
232.936 566.877 232.228 566.371 231.924 565.562 cv
231.924 565.865 232.025 566.168 232.025 566.674 cv
232.126 569.102 232.025 575.07 228.08 577.802 cv
cp
.917647 .741176 .54902 rgb
f
208.253 549.274 mo
200.666 549.274 li
199.958 549.274 199.351 548.668 199.351 547.96 cv
199.351 547.252 199.958 546.645 200.666 546.645 cv
208.253 546.645 li
208.961 546.645 209.568 547.252 209.568 547.96 cv
209.568 548.668 208.961 549.274 208.253 549.274 cv
cp
1 1 1 rgb
f
214.525 553.018 mo
200.666 553.018 li
199.958 553.018 199.351 552.411 199.351 551.702 cv
199.351 550.994 199.958 550.388 200.666 550.388 cv
214.626 550.388 li
215.334 550.388 215.941 550.994 215.941 551.702 cv
215.84 552.411 215.233 553.018 214.525 553.018 cv
cp
f
214.525 556.861 mo
200.666 556.861 li
199.958 556.861 199.351 556.255 199.351 555.547 cv
199.351 554.839 199.958 554.231 200.666 554.231 cv
214.626 554.231 li
215.334 554.231 215.941 554.839 215.941 555.547 cv
215.84 556.255 215.233 556.861 214.525 556.861 cv
cp
f
46.5 514.881 mo
147.659 514.881 li
147.659 616.04 li
46.5 616.04 li
46.5 514.881 li
cp
f
78.8711 536.528 mo
124.393 536.528 li
124.393 544.115 li
78.8711 544.115 li
78.8711 536.528 li
cp
.843137 .870588 .929412 rgb
f
115.187 592.268 mo
115.895 592.976 116.806 593.38 117.817 593.481 cv
117.716 593.481 li
117.615 593.481 li
78.9722 593.481 li
76.7466 593.481 74.9258 591.762 74.9258 589.637 cv
74.9258 588.626 75.3301 587.614 76.1396 587.007 cv
76.8477 586.299 77.8594 585.895 78.9722 585.895 cv
117.514 585.895 li
117.615 585.895 117.716 585.895 117.716 585.895 cv
117.716 585.895 117.716 585.895 117.817 585.895 cv
115.693 585.995 114.074 587.614 114.074 589.637 cv
114.074 590.648 114.479 591.56 115.187 592.268 cv
cp
.745098 .764706 .780392 rgb
f
78.8711 544.115 mo
78.8711 585.895 li
78.9722 585.895 li
117.514 585.895 li
117.615 585.895 117.716 585.895 117.716 585.895 cv
117.716 585.895 117.716 585.895 117.817 585.895 cv
115.693 585.995 114.074 587.614 114.074 589.637 cv
114.074 590.648 114.479 591.56 115.187 592.268 cv
115.895 592.976 116.806 593.38 117.817 593.481 cv
119.638 593.481 121.256 592.672 122.369 591.458 cv
123.583 590.244 124.291 588.524 124.291 586.603 cv
124.291 544.115 li
78.8711 544.115 li
78.8711 544.115 li
cp
.92549 .941176 .945098 rgb
f
101.632 579.521 mo
104.161 579.521 li
104.161 582.05 li
101.632 582.05 li
101.632 579.521 li
cp
.192157 .227451 .321569 rgb
f
99.1025 576.992 mo
101.632 576.992 li
101.632 579.521 li
99.1025 579.521 li
99.1025 576.992 li
cp
f
96.5737 579.521 mo
99.1025 579.521 li
99.1025 582.05 li
96.5737 582.05 li
96.5737 579.521 li
cp
f
94.0449 576.992 mo
96.5737 576.992 li
96.5737 579.521 li
94.0449 579.521 li
94.0449 576.992 li
cp
f
91.5156 579.521 mo
94.0449 579.521 li
94.0449 582.05 li
91.5156 582.05 li
91.5156 579.521 li
cp
f
88.9868 576.992 mo
91.5156 576.992 li
91.5156 579.521 li
88.9868 579.521 li
88.9868 576.992 li
cp
f
88.9868 539.058 mo
91.5156 539.058 li
91.5156 541.587 li
88.9868 541.587 li
88.9868 539.058 li
cp
.686275 .72549 .823529 rgb
f
86.458 579.521 mo
88.9868 579.521 li
88.9868 582.05 li
86.458 582.05 li
86.458 579.521 li
cp
.192157 .227451 .321569 rgb
f
85.2437 539.058 mo
87.7729 539.058 li
87.7729 541.587 li
85.2437 541.587 li
85.2437 539.058 li
cp
.686275 .72549 .823529 rgb
f
83.9287 576.992 mo
86.458 576.992 li
86.458 579.521 li
83.9287 579.521 li
83.9287 576.992 li
cp
.192157 .227451 .321569 rgb
f
81.3999 539.058 mo
83.9287 539.058 li
83.9287 541.587 li
81.3999 541.587 li
81.3999 539.058 li
cp
.686275 .72549 .823529 rgb
f
118.121 578.206 mo
109.219 578.206 li
108.51 578.206 107.903 577.6 107.903 576.892 cv
107.903 576.183 108.51 575.576 109.219 575.576 cv
118.121 575.576 li
118.829 575.576 119.436 576.183 119.436 576.892 cv
119.436 577.6 118.728 578.206 118.121 578.206 cv
cp
.192157 .227451 .321569 rgb
f
118.121 582.05 mo
113.669 582.05 li
112.961 582.05 112.354 581.443 112.354 580.735 cv
112.354 580.027 112.961 579.42 113.669 579.42 cv
118.121 579.42 li
118.829 579.42 119.436 580.027 119.436 580.735 cv
119.334 581.443 118.728 582.05 118.121 582.05 cv
cp
f
73.813 579.521 mo
69.9688 579.521 li
69.2607 579.521 68.6538 578.914 68.6538 578.206 cv
68.6538 577.498 69.2607 576.892 69.9688 576.892 cv
73.813 576.892 li
74.521 576.892 75.1279 577.498 75.1279 578.206 cv
75.1279 578.914 74.521 579.521 73.813 579.521 cv
cp
.843137 .870588 .929412 rgb
f
73.813 575.678 mo
69.9688 575.678 li
69.2607 575.678 68.6538 575.07 68.6538 574.362 cv
68.6538 573.654 69.2607 573.047 69.9688 573.047 cv
73.813 573.047 li
74.521 573.047 75.1279 573.654 75.1279 574.362 cv
75.1279 575.07 74.521 575.678 73.813 575.678 cv
cp
f
73.813 571.935 mo
69.9688 571.935 li
69.2607 571.935 68.6538 571.327 68.6538 570.619 cv
68.6538 569.911 69.2607 569.305 69.9688 569.305 cv
73.813 569.305 li
74.521 569.305 75.1279 569.911 75.1279 570.619 cv
75.1279 571.327 74.521 571.935 73.813 571.935 cv
cp
f
73.813 568.091 mo
69.9688 568.091 li
69.2607 568.091 68.6538 567.483 68.6538 566.775 cv
68.6538 566.067 69.2607 565.46 69.9688 565.46 cv
73.813 565.46 li
74.521 565.46 75.1279 566.067 75.1279 566.775 cv
75.1279 567.483 74.521 568.091 73.813 568.091 cv
cp
f
73.813 564.348 mo
69.9688 564.348 li
69.2607 564.348 68.6538 563.74 68.6538 563.032 cv
68.6538 562.324 69.2607 561.718 69.9688 561.718 cv
73.813 561.718 li
74.521 561.718 75.1279 562.324 75.1279 563.032 cv
75.1279 563.74 74.521 564.348 73.813 564.348 cv
cp
f
87.7729 562.526 mo
87.0645 562.526 86.458 561.92 86.458 561.212 cv
86.458 557.367 li
86.458 556.659 87.0645 556.053 87.7729 556.053 cv
88.481 556.053 89.0879 556.659 89.0879 557.367 cv
89.0879 561.212 li
88.9868 562.021 88.3799 562.526 87.7729 562.526 cv
cp
.341176 .376471 .435294 rgb
f
91.5156 562.526 mo
90.8076 562.526 90.2007 561.92 90.2007 561.212 cv
90.2007 558.683 li
90.2007 557.975 90.8076 557.367 91.5156 557.367 cv
92.2236 557.367 92.8306 557.975 92.8306 558.683 cv
92.8306 561.212 li
92.8306 562.021 92.2236 562.526 91.5156 562.526 cv
cp
f
100.316 556.255 mo
99.6084 556.255 99.0015 555.647 99.0015 554.939 cv
99.0015 551.702 li
99.0015 550.994 99.6084 550.388 100.316 550.388 cv
101.025 550.388 101.632 550.994 101.632 551.702 cv
101.632 554.939 li
101.53 555.647 101.025 556.255 100.316 556.255 cv
cp
.988235 .847059 .517647 rgb
f
105.071 557.469 mo
104.869 557.469 104.667 557.367 104.464 557.267 cv
103.857 556.963 103.655 556.153 103.958 555.547 cv
105.577 552.714 li
105.88 552.107 106.689 551.905 107.296 552.208 cv
107.903 552.512 108.106 553.321 107.802 553.928 cv
106.184 556.861 li
105.88 557.267 105.476 557.469 105.071 557.469 cv
cp
f
95.4609 557.469 mo
95.0562 557.469 94.5503 557.267 94.3481 556.861 cv
92.7295 554.029 li
92.4263 553.422 92.6284 552.613 93.2354 552.31 cv
93.8423 552.006 94.6519 552.208 94.9551 552.815 cv
96.5737 555.647 li
96.877 556.255 96.6748 557.064 96.0679 557.367 cv
95.9668 557.469 95.7642 557.469 95.4609 557.469 cv
cp
f
100.316 571.429 mo
99.6084 571.429 99.0015 570.821 99.0015 570.113 cv
99.0015 566.877 li
99.0015 566.168 99.6084 565.562 100.316 565.562 cv
101.025 565.562 101.632 566.168 101.632 566.877 cv
101.632 570.113 li
101.53 570.821 101.025 571.429 100.316 571.429 cv
cp
f
93.8423 569.709 mo
93.6401 569.709 93.4375 569.607 93.2354 569.507 cv
92.6284 569.203 92.4263 568.394 92.7295 567.787 cv
94.3481 564.954 li
94.6519 564.348 95.4609 564.146 96.0679 564.448 cv
96.6748 564.752 96.877 565.562 96.5737 566.168 cv
94.9551 569.001 li
94.7529 569.507 94.3481 569.709 93.8423 569.709 cv
cp
f
106.689 569.709 mo
106.285 569.709 105.779 569.507 105.577 569.102 cv
103.958 566.27 li
103.655 565.662 103.857 564.854 104.464 564.55 cv
105.071 564.246 105.88 564.448 106.184 565.056 cv
107.802 567.888 li
108.106 568.495 107.903 569.305 107.296 569.607 cv
107.094 569.607 106.892 569.709 106.689 569.709 cv
cp
f
109.219 562.526 mo
85.2437 562.526 li
84.5356 562.526 83.9287 561.92 83.9287 561.212 cv
83.9287 560.504 84.5356 559.896 85.2437 559.896 cv
109.219 559.896 li
109.927 559.896 110.534 560.504 110.534 561.212 cv
110.534 562.021 109.927 562.526 109.219 562.526 cv
cp
.254902 .290196 .337255 rgb
f
111.748 557.469 mo
111.04 557.469 110.433 558.075 110.433 558.784 cv
110.433 563.842 li
110.433 564.55 111.04 565.157 111.748 565.157 cv
112.456 565.157 113.063 564.55 113.063 563.842 cv
113.063 563.842 113.063 563.74 113.063 563.64 cv
112.961 563.134 113.164 562.729 113.568 562.426 cv
113.973 562.122 114.479 562.122 114.883 562.426 cv
115.086 562.526 115.288 562.628 115.49 562.628 cv
116.199 562.628 116.806 562.021 116.806 561.313 cv
116.806 560.604 116.199 559.998 115.49 559.998 cv
115.288 559.998 115.086 560.099 114.883 560.2 cv
114.479 560.402 113.973 560.402 113.568 560.2 cv
113.164 559.896 112.961 559.492 113.063 558.986 cv
113.063 558.885 113.063 558.885 113.063 558.784 cv
113.063 558.075 112.456 557.469 111.748 557.469 cv
cp
111.748 567.585 mo
109.623 567.585 107.903 565.865 107.903 563.74 cv
107.903 558.683 li
107.903 556.559 109.623 554.839 111.748 554.839 cv
113.366 554.839 114.782 555.851 115.288 557.367 cv
115.389 557.367 115.389 557.367 115.49 557.367 cv
117.615 557.367 119.334 559.087 119.334 561.212 cv
119.334 563.336 117.615 565.056 115.49 565.056 cv
115.389 565.056 115.389 565.056 115.288 565.056 cv
114.782 566.573 113.366 567.585 111.748 567.585 cv
cp
.341176 .376471 .435294 rgb
f
556.341 387.42 mo
657.5 387.42 li
657.5 488.579 li
556.341 488.579 li
556.341 387.42 li
cp
1 1 1 rgb
f
578.596 432.841 mo
578.596 433.549 578.596 457.929 578.596 458.131 cv
634.233 458.131 li
634.233 457.929 634.233 433.549 634.233 432.841 cv
578.596 432.841 li
cp
.843137 .870588 .929412 rgb
f
624.017 416.857 mo
588.813 416.857 li
584.261 416.857 li
582.541 416.857 581.125 415.441 581.125 413.722 cv
581.125 412.812 581.529 412.104 582.035 411.496 cv
582.643 410.889 583.351 410.586 584.261 410.586 cv
628.568 410.586 li
630.288 410.586 631.704 412.002 631.704 413.722 cv
631.704 414.632 631.401 415.341 630.794 415.947 cv
630.188 416.555 629.479 416.857 628.568 416.857 cv
624.017 416.857 li
cp
.454902 .45098 .443137 rgb
f
619.06 426.974 mo
618.857 426.974 618.655 426.872 618.453 426.771 cv
617.846 426.468 617.644 425.658 617.947 425.052 cv
624.32 413.722 li
624.623 413.115 625.433 412.913 626.039 413.216 cv
626.646 413.52 626.849 414.329 626.545 414.936 cv
620.172 426.366 li
619.97 426.771 619.464 426.974 619.06 426.974 cv
cp
.356863 .352941 .341176 rgb
f
592.657 426.366 mo
586.284 414.936 li
585.98 414.329 586.183 413.52 586.79 413.216 cv
587.396 412.913 588.206 413.115 588.51 413.722 cv
594.883 425.152 li
595.187 425.76 594.983 426.569 594.377 426.872 cv
593.77 427.176 592.961 426.974 592.657 426.366 cv
cp
f
578.596 425.254 mo
578.596 432.841 li
634.233 432.841 li
634.233 425.254 li
628.468 425.254 584.767 425.254 578.596 425.254 cv
cp
.341176 .376471 .435294 rgb
f
624.421 437.898 mo
624.421 447.509 li
622.601 447.509 li
618.149 442.046 li
618.149 447.61 li
615.924 447.61 li
615.924 446.497 615.924 438.91 615.924 438 cv
617.644 438 li
622.095 443.665 li
622.095 438 li
624.421 438 li
624.421 437.898 li
cp
.235294 .231373 .239216 rgb
f
614.608 445.587 mo
614.608 447.61 li
607.831 447.61 li
607.831 437.898 li
614.406 437.898 li
614.406 439.922 li
610.057 439.922 li
610.057 441.743 li
613.799 441.743 li
613.799 443.563 li
610.057 443.563 li
610.057 445.587 li
614.608 445.587 li
cp
f
604.29 441.237 mo
604.29 440.326 603.784 439.922 603.278 439.922 cv
601.559 439.922 li
601.559 442.552 li
603.38 442.552 li
603.684 442.552 603.886 442.451 604.088 442.249 cv
604.29 441.945 604.29 441.642 604.29 441.237 cv
cp
606.415 442.451 mo
605.909 443.665 604.897 444.475 603.582 444.475 cv
601.66 444.475 li
601.66 447.61 li
599.435 447.61 li
599.435 438 li
603.582 438 li
604.088 438 604.492 438.102 604.897 438.304 cv
605.707 438.708 606.212 439.315 606.516 440.124 cv
606.516 440.428 606.617 441.642 606.415 442.451 cv
cp
f
594.275 440.124 mo
593.669 439.82 592.657 439.82 592.05 440.124 cv
591.747 440.326 591.443 440.529 591.241 440.832 cv
590.229 442.147 590.432 444.677 592.05 445.485 cv
592.758 445.789 593.669 445.789 594.275 445.485 cv
594.579 445.283 594.883 445.081 595.085 444.777 cv
596.097 443.463 595.995 440.934 594.275 440.124 cv
cp
595.187 447.205 mo
593.973 447.711 592.455 447.711 591.342 447.205 cv
588.308 445.789 587.6 441.743 589.926 439.315 cv
590.33 438.91 590.836 438.506 591.443 438.202 cv
592.657 437.696 594.175 437.696 595.287 438.202 cv
595.895 438.506 596.4 438.81 596.805 439.315 cv
598.929 441.945 598.221 445.789 595.187 447.205 cv
cp
f
588.712 427.783 mo
591.241 427.783 li
591.241 430.312 li
588.712 430.312 li
588.712 427.783 li
cp
.254902 .290196 .337255 rgb
f
584.969 427.783 mo
587.498 427.783 li
587.498 430.312 li
584.969 430.312 li
584.969 427.783 li
cp
f
581.125 427.783 mo
583.654 427.783 li
583.654 430.312 li
581.125 430.312 li
581.125 427.783 li
cp
f
596.299 453.072 mo
596.299 452.364 595.691 451.758 594.983 451.758 cv
578.596 451.758 li
578.596 452.668 578.596 453.478 578.596 454.286 cv
595.085 454.286 li
595.691 454.286 596.299 453.781 596.299 453.072 cv
cp
.686275 .72549 .823529 rgb
f
605.201 451.758 mo
604.492 451.758 603.886 452.364 603.886 453.072 cv
603.886 453.781 604.492 454.388 605.201 454.388 cv
634.233 454.388 li
634.233 453.578 634.233 452.77 634.233 451.858 cv
605.201 451.858 li
605.201 451.758 li
cp
f
635.549 464.402 mo
577.382 464.402 li
576.674 464.402 576.067 463.796 576.067 463.088 cv
576.067 462.379 576.674 461.772 577.382 461.772 cv
635.549 461.772 li
636.257 461.772 636.863 462.379 636.863 463.088 cv
636.763 463.896 636.155 464.402 635.549 464.402 cv
cp
.341176 .376471 .435294 rgb
f
428.881 387.42 mo
530.04 387.42 li
530.04 488.579 li
428.881 488.579 li
428.881 387.42 li
cp
1 1 1 rgb
f
479.056 408.461 mo
469.445 408.36 461.454 416.555 461.454 426.569 cv
461.454 431.02 463.072 435.168 465.602 438.304 cv
465.804 438.606 466.006 438.91 466.31 439.112 cv
469.041 442.855 470.761 447.61 471.165 452.162 cv
471.267 452.162 li
486.44 452.162 li
486.541 452.162 li
486.946 447.509 488.767 442.755 491.6 439.112 cv
491.802 438.81 492.004 438.606 492.206 438.304 cv
494.836 435.168 496.455 431.02 496.455 426.468 cv
496.455 416.555 488.666 408.461 479.056 408.461 cv
cp
.988235 .847059 .517647 rgb
f
481.787 436.482 mo
481.787 414.733 li
481.787 414.733 481.787 414.733 481.888 414.733 cv
482.394 414.835 482.899 415.239 483.102 415.745 cv
484.215 415.341 485.327 416.049 485.529 417.161 cv
486.643 417.061 487.553 418.071 487.553 419.185 cv
488.666 419.387 489.374 420.499 488.969 421.612 cv
489.98 422.118 490.284 423.433 489.678 424.344 cv
490.486 425.052 490.486 426.366 489.678 427.176 cv
490.284 428.086 489.98 429.401 488.969 429.907 cv
489.374 431.02 488.666 432.133 487.553 432.335 cv
487.654 433.447 486.744 434.358 485.529 434.358 cv
485.327 435.471 484.215 436.179 483.102 435.774 cv
482.799 435.977 482.394 436.382 481.787 436.482 cv
481.787 436.482 li
cp
.372549 .270588 .203922 rgb
f
474.807 435.572 mo
473.795 435.977 472.581 435.269 472.379 434.156 cv
471.267 434.257 470.356 433.245 470.356 432.133 cv
469.243 431.931 468.535 430.817 468.939 429.705 cv
467.928 429.199 467.625 427.884 468.231 426.974 cv
467.321 426.266 467.321 424.95 468.231 424.142 cv
467.625 423.23 467.928 421.916 468.939 421.41 cv
468.535 420.297 469.243 419.185 470.356 418.982 cv
470.255 417.869 471.165 416.959 472.379 416.959 cv
472.581 415.846 473.795 415.138 474.807 415.543 cv
475.01 415.037 475.414 414.733 476.021 414.531 cv
476.021 414.531 476.021 414.531 476.122 414.531 cv
476.122 436.382 li
476.122 436.382 476.122 436.382 476.021 436.382 cv
475.515 436.382 475.11 435.977 474.807 435.572 cv
cp
f
479.46 446.093 mo
481.989 446.093 li
481.989 452.466 li
479.46 452.466 li
479.46 446.093 li
cp
.235294 .231373 .239216 rgb
f
479.46 442.35 mo
481.989 442.35 li
481.989 444.879 li
479.46 444.879 li
479.46 442.35 li
cp
f
475.616 446.093 mo
478.146 446.093 li
478.146 452.466 li
475.616 452.466 li
475.616 446.093 li
cp
f
475.616 442.35 mo
478.146 442.35 li
478.146 444.879 li
475.616 444.879 li
475.616 442.35 li
cp
f
505.762 433.347 mo
505.56 433.347 505.256 433.245 505.054 433.145 cv
504.446 432.739 504.244 432.031 504.648 431.425 cv
505.66 429.705 506.268 427.884 506.268 425.962 cv
506.268 424.142 505.66 422.118 504.648 420.499 cv
504.244 419.893 504.446 419.083 505.054 418.779 cv
505.66 418.375 506.47 418.577 506.773 419.185 cv
508.088 421.309 508.797 423.636 508.797 425.962 cv
508.797 428.39 508.088 430.717 506.773 432.841 cv
506.571 433.145 506.166 433.347 505.762 433.347 cv
cp
.847059 .94902 .945098 rgb
f
502.221 430.817 mo
502.019 430.817 501.816 430.717 501.614 430.615 cv
501.007 430.312 500.805 429.503 501.108 428.896 cv
501.614 427.985 501.918 426.974 501.918 425.861 cv
501.918 424.85 501.614 423.838 501.108 422.928 cv
500.805 422.32 501.007 421.511 501.614 421.208 cv
502.221 420.904 503.03 421.106 503.334 421.713 cv
504.042 423.028 504.446 424.444 504.446 425.962 cv
504.446 427.479 504.042 428.896 503.334 430.211 cv
503.03 430.514 502.626 430.817 502.221 430.817 cv
cp
f
452.147 433.347 mo
451.742 433.347 451.338 433.145 451.034 432.739 cv
449.72 430.615 449.012 428.289 449.012 425.962 cv
449.012 423.534 449.72 421.208 451.034 419.083 cv
451.439 418.477 452.147 418.274 452.754 418.679 cv
453.361 419.083 453.563 419.791 453.159 420.398 cv
452.147 422.118 451.54 423.938 451.54 425.861 cv
451.54 427.682 452.147 429.705 453.159 431.323 cv
453.563 431.931 453.361 432.739 452.754 433.043 cv
452.653 433.245 452.451 433.347 452.147 433.347 cv
cp
f
455.688 430.817 mo
455.283 430.817 454.777 430.615 454.575 430.211 cv
453.867 428.896 453.462 427.479 453.462 426.063 cv
453.462 424.546 453.867 423.13 454.575 421.814 cv
454.879 421.208 455.688 421.005 456.295 421.309 cv
456.901 421.612 457.104 422.422 456.801 423.028 cv
456.295 423.938 455.991 424.95 455.991 426.063 cv
455.991 427.075 456.295 428.086 456.801 428.997 cv
457.104 429.604 456.901 430.413 456.295 430.717 cv
456.093 430.717 455.891 430.817 455.688 430.817 cv
cp
f
504.75 453.882 mo
497.163 453.882 li
496.455 453.882 495.848 453.275 495.848 452.566 cv
495.848 451.858 496.455 451.252 497.163 451.252 cv
504.75 451.252 li
505.458 451.252 506.065 451.858 506.065 452.566 cv
505.964 453.376 505.458 453.882 504.75 453.882 cv
cp
.843137 .870588 .929412 rgb
f
504.75 450.139 mo
497.163 450.139 li
496.455 450.139 495.848 449.532 495.848 448.824 cv
495.848 448.116 496.455 447.509 497.163 447.509 cv
504.75 447.509 li
505.458 447.509 506.065 448.116 506.065 448.824 cv
506.065 449.532 505.458 450.139 504.75 450.139 cv
cp
f
504.75 446.295 mo
497.163 446.295 li
496.455 446.295 495.848 445.688 495.848 444.98 cv
495.848 444.271 496.455 443.665 497.163 443.665 cv
504.75 443.665 li
505.458 443.665 506.065 444.271 506.065 444.98 cv
506.065 445.688 505.458 446.295 504.75 446.295 cv
cp
f
504.75 442.552 mo
497.163 442.552 li
496.455 442.552 495.848 441.945 495.848 441.237 cv
495.848 440.529 496.455 439.922 497.163 439.922 cv
504.75 439.922 li
505.458 439.922 506.065 440.529 506.065 441.237 cv
506.065 441.945 505.458 442.552 504.75 442.552 cv
cp
f
461.758 453.882 mo
454.171 453.882 li
453.462 453.882 452.855 453.275 452.855 452.566 cv
452.855 451.858 453.462 451.252 454.171 451.252 cv
461.758 451.252 li
462.466 451.252 463.072 451.858 463.072 452.566 cv
462.972 453.376 462.466 453.882 461.758 453.882 cv
cp
f
461.758 450.139 mo
454.171 450.139 li
453.462 450.139 452.855 449.532 452.855 448.824 cv
452.855 448.116 453.462 447.509 454.171 447.509 cv
461.758 447.509 li
462.466 447.509 463.072 448.116 463.072 448.824 cv
463.072 449.532 462.466 450.139 461.758 450.139 cv
cp
f
461.758 446.295 mo
454.171 446.295 li
453.462 446.295 452.855 445.688 452.855 444.98 cv
452.855 444.271 453.462 443.665 454.171 443.665 cv
461.758 443.665 li
462.466 443.665 463.072 444.271 463.072 444.98 cv
463.072 445.688 462.466 446.295 461.758 446.295 cv
cp
f
461.758 442.552 mo
454.171 442.552 li
453.462 442.552 452.855 441.945 452.855 441.237 cv
452.855 440.529 453.462 440.023 454.171 440.023 cv
461.758 440.023 li
462.466 440.023 463.072 440.63 463.072 441.338 cv
463.072 442.046 462.466 442.552 461.758 442.552 cv
cp
f
485.833 457.726 mo
485.833 460.559 li
485.833 463.29 483.709 465.313 480.978 465.313 cv
476.526 465.313 li
473.896 465.313 471.671 463.29 471.671 460.559 cv
471.671 457.726 li
470.356 457.726 li
469.647 457.726 469.041 457.423 468.535 456.917 cv
468.029 456.411 467.827 455.703 467.827 454.995 cv
467.827 453.478 468.939 452.364 470.356 452.364 cv
486.541 452.364 li
487.148 452.364 li
487.856 452.364 488.463 452.668 488.969 453.174 cv
489.475 453.68 489.678 454.286 489.678 455.096 cv
489.678 456.512 488.564 457.929 487.148 457.929 cv
485.833 457.929 li
485.833 457.726 li
cp
.254902 .290196 .337255 rgb
f
500.906 466.526 mo
456.699 466.526 li
455.991 466.526 455.385 465.92 455.385 465.212 cv
455.385 464.504 455.991 463.896 456.699 463.896 cv
501.007 463.896 li
501.715 463.896 502.322 464.504 502.322 465.212 cv
502.221 466.021 501.614 466.526 500.906 466.526 cv
cp
.843137 .870588 .929412 rgb
f
301.42 387.42 mo
402.579 387.42 li
402.579 488.579 li
301.42 488.579 li
301.42 387.42 li
cp
1 1 1 rgb
f
336.32 407.753 mo
376.784 407.753 li
376.784 415.341 li
336.32 415.341 li
336.32 407.753 li
cp
.341176 .376471 .435294 rgb
f
336.32 415.341 mo
336.32 465.92 li
338.04 465.92 366.87 465.92 368.691 465.92 cv
371.827 462.784 373.648 460.963 376.784 457.827 cv
376.784 415.341 li
336.32 415.341 li
cp
.92549 .941176 .945098 rgb
f
367.983 457.827 mo
376.885 457.827 li
373.749 460.963 371.929 462.784 368.792 465.92 cv
368.084 465.92 li
368.084 457.827 li
367.983 457.827 li
cp
.745098 .764706 .780392 rgb
f
346.437 410.282 mo
348.965 410.282 li
348.965 412.812 li
346.437 412.812 li
346.437 410.282 li
cp
.254902 .290196 .337255 rgb
f
342.693 410.282 mo
345.222 410.282 li
345.222 412.812 li
342.693 412.812 li
342.693 410.282 li
cp
f
338.849 410.282 mo
341.378 410.282 li
341.378 412.812 li
338.849 412.812 li
338.849 410.282 li
cp
f
356.552 453.275 mo
352.708 453.275 li
352 453.275 351.393 452.668 351.393 451.96 cv
351.393 451.252 352 450.645 352.708 450.645 cv
356.552 450.645 li
357.261 450.645 357.867 451.252 357.867 451.96 cv
357.867 452.77 357.261 453.275 356.552 453.275 cv
cp
f
356.552 449.532 mo
354.023 449.532 li
353.315 449.532 352.708 448.925 352.708 448.217 cv
352.708 447.509 353.315 446.902 354.023 446.902 cv
356.552 446.902 li
357.261 446.902 357.867 447.509 357.867 448.217 cv
357.867 448.925 357.261 449.532 356.552 449.532 cv
cp
f
351.494 438.102 mo
341.378 438.102 li
340.67 438.102 340.063 437.494 340.063 436.786 cv
340.063 436.078 340.67 435.471 341.378 435.471 cv
351.494 435.471 li
352.202 435.471 352.809 436.078 352.809 436.786 cv
352.809 437.596 352.202 438.102 351.494 438.102 cv
cp
.686275 .72549 .823529 rgb
f
371.726 438.102 mo
361.61 438.102 li
360.902 438.102 360.295 437.494 360.295 436.786 cv
360.295 436.078 360.902 435.471 361.61 435.471 cv
371.726 435.471 li
372.434 435.471 373.041 436.078 373.041 436.786 cv
373.041 437.596 372.434 438.102 371.726 438.102 cv
cp
f
351.494 441.945 mo
341.378 441.945 li
340.67 441.945 340.063 441.338 340.063 440.63 cv
340.063 439.922 340.67 439.315 341.378 439.315 cv
351.494 439.315 li
352.202 439.315 352.809 439.922 352.809 440.63 cv
352.809 441.338 352.202 441.945 351.494 441.945 cv
cp
f
371.726 441.945 mo
361.61 441.945 li
360.902 441.945 360.295 441.338 360.295 440.63 cv
360.295 439.922 360.902 439.315 361.61 439.315 cv
371.726 439.315 li
372.434 439.315 373.041 439.922 373.041 440.63 cv
373.041 441.338 372.434 441.945 371.726 441.945 cv
cp
f
351.494 445.688 mo
341.378 445.688 li
340.67 445.688 340.063 445.081 340.063 444.373 cv
340.063 443.665 340.67 443.058 341.378 443.058 cv
351.494 443.058 li
352.202 443.058 352.809 443.665 352.809 444.373 cv
352.809 445.081 352.202 445.688 351.494 445.688 cv
cp
f
371.726 445.688 mo
361.61 445.688 li
360.902 445.688 360.295 445.081 360.295 444.373 cv
360.295 443.665 360.902 443.058 361.61 443.058 cv
371.726 443.058 li
372.434 443.058 373.041 443.665 373.041 444.373 cv
373.041 445.081 372.434 445.688 371.726 445.688 cv
cp
f
332.578 467.234 mo
327.52 467.234 li
326.812 467.234 326.205 466.628 326.205 465.92 cv
326.205 465.212 326.812 464.604 327.52 464.604 cv
332.578 464.604 li
333.286 464.604 333.893 465.212 333.893 465.92 cv
333.792 466.628 333.185 467.234 332.578 467.234 cv
cp
.843137 .870588 .929412 rgb
f
332.578 463.391 mo
327.52 463.391 li
326.812 463.391 326.205 462.784 326.205 462.076 cv
326.205 461.367 326.812 460.761 327.52 460.761 cv
332.578 460.761 li
333.286 460.761 333.893 461.367 333.893 462.076 cv
333.792 462.885 333.185 463.391 332.578 463.391 cv
cp
f
332.578 459.648 mo
327.52 459.648 li
326.812 459.648 326.205 459.041 326.205 458.333 cv
326.205 457.625 326.812 457.018 327.52 457.018 cv
332.578 457.018 li
333.286 457.018 333.893 457.625 333.893 458.333 cv
333.792 459.041 333.185 459.648 332.578 459.648 cv
cp
f
332.578 455.804 mo
327.52 455.804 li
326.812 455.804 326.205 455.197 326.205 454.489 cv
326.205 453.781 326.812 453.174 327.52 453.174 cv
332.578 453.174 li
333.286 453.174 333.893 453.781 333.893 454.489 cv
333.792 455.298 333.185 455.804 332.578 455.804 cv
cp
f
356.552 455.804 mo
355.844 455.804 355.237 455.197 355.237 454.489 cv
355.237 430.514 li
355.237 429.806 355.844 429.199 356.552 429.199 cv
357.261 429.199 357.867 429.806 357.867 430.514 cv
357.867 454.59 li
357.867 455.298 357.261 455.804 356.552 455.804 cv
cp
.341176 .376471 .435294 rgb
f
354.023 426.771 mo
353.315 426.771 352.708 427.378 352.708 428.086 cv
352.708 428.795 353.315 429.401 354.023 429.401 cv
359.081 429.401 li
359.789 429.401 360.396 428.795 360.396 428.086 cv
360.396 427.378 359.789 426.771 359.081 426.771 cv
359.081 426.771 358.98 426.771 358.879 426.771 cv
358.373 426.872 357.969 426.67 357.665 426.266 cv
357.361 425.861 357.361 425.355 357.665 424.95 cv
357.766 424.748 357.867 424.546 357.867 424.344 cv
357.867 423.636 357.261 423.028 356.552 423.028 cv
355.844 423.028 355.237 423.636 355.237 424.344 cv
355.237 424.546 355.338 424.748 355.439 424.95 cv
355.642 425.355 355.642 425.861 355.439 426.266 cv
355.136 426.67 354.731 426.872 354.226 426.771 cv
354.125 426.771 354.023 426.771 354.023 426.771 cv
cp
359.081 431.829 mo
354.023 431.829 li
351.899 431.829 350.179 430.109 350.179 427.985 cv
350.179 426.366 351.191 424.95 352.708 424.444 cv
352.708 424.344 352.708 424.344 352.708 424.242 cv
352.708 422.118 354.428 420.398 356.552 420.398 cv
358.677 420.398 360.396 422.118 360.396 424.242 cv
360.396 424.344 360.396 424.344 360.396 424.444 cv
361.914 424.95 362.925 426.366 362.925 427.985 cv
362.925 430.109 361.205 431.829 359.081 431.829 cv
cp
.254902 .290196 .337255 rgb
f
173.96 387.42 mo
275.119 387.42 li
275.119 488.579 li
173.96 488.579 li
173.96 387.42 li
cp
1 1 1 rgb
f
231.621 435.977 mo
231.924 436.584 232.025 437.292 232.025 437.898 cv
232.025 439.518 231.115 441.136 229.497 441.844 cv
228.89 442.147 li
225.045 434.156 li
225.652 433.853 li
227.878 432.841 230.609 433.751 231.621 435.977 cv
cp
.988235 .847059 .517647 rgb
f
201.172 454.286 mo
199.452 455.197 li
197.834 456.006 196.013 455.298 195.204 453.781 cv
195.001 453.376 194.9 452.87 194.9 452.364 cv
194.9 451.15 195.507 450.038 196.721 449.532 cv
198.441 448.723 li
201.172 454.286 li
cp
.254902 .290196 .337255 rgb
f
217.56 461.873 mo
213.008 464.099 li
203.499 456.006 li
207.95 453.781 li
217.56 461.873 li
cp
f
202.993 443.563 mo
207.95 453.781 li
203.499 456.006 li
202.285 456.613 li
201.172 454.286 li
198.441 448.622 li
197.328 446.396 li
202.993 443.563 li
cp
.192157 .227451 .321569 rgb
f
232.936 450.139 mo
207.95 453.781 li
202.993 443.563 li
221.303 426.266 li
225.146 434.156 li
228.991 442.147 li
232.936 450.139 li
cp
.341176 .376471 .435294 rgb
f
201.273 428.693 mo
202.689 428.693 203.802 429.806 203.802 431.223 cv
203.802 432.639 202.689 433.751 201.273 433.751 cv
199.857 433.751 198.744 432.639 198.744 431.223 cv
198.744 429.806 199.857 428.693 201.273 428.693 cv
cp
.843137 .870588 .929412 rgb
f
213.918 412.205 mo
216.041 412.205 217.762 413.925 217.762 416.049 cv
217.762 418.172 216.041 419.893 213.918 419.893 cv
211.795 419.893 210.074 418.172 210.074 416.049 cv
210.074 413.925 211.795 412.205 213.918 412.205 cv
cp
f
208.051 446.599 mo
207.545 446.599 207.141 446.295 206.938 445.891 cv
206.635 445.283 206.938 444.475 207.545 444.171 cv
209.771 443.058 li
210.377 442.755 211.187 443.058 211.49 443.665 cv
211.793 444.271 211.49 445.081 210.883 445.385 cv
208.658 446.497 li
208.456 446.599 208.253 446.599 208.051 446.599 cv
cp
.254902 .290196 .337255 rgb
f
209.771 450.038 mo
209.265 450.038 208.86 449.734 208.658 449.33 cv
208.354 448.723 208.658 447.914 209.265 447.61 cv
211.49 446.497 li
212.097 446.194 212.906 446.497 213.21 447.104 cv
213.513 447.711 213.21 448.521 212.603 448.824 cv
210.377 449.937 li
210.074 449.937 209.973 450.038 209.771 450.038 cv
cp
f
251.853 413.52 mo
230.407 413.52 li
229.699 413.52 229.092 412.913 229.092 412.205 cv
229.092 411.496 229.699 410.889 230.407 410.889 cv
251.853 410.889 li
252.561 410.889 253.167 411.496 253.167 412.205 cv
253.167 412.913 252.561 413.52 251.853 413.52 cv
cp
.843137 .870588 .929412 rgb
f
251.853 417.263 mo
230.407 417.263 li
229.699 417.263 229.092 416.655 229.092 415.947 cv
229.092 415.239 229.699 414.632 230.407 414.632 cv
251.853 414.632 li
252.561 414.632 253.167 415.239 253.167 415.947 cv
253.167 416.655 252.561 417.263 251.853 417.263 cv
cp
f
251.853 421.106 mo
230.407 421.106 li
229.699 421.106 229.092 420.499 229.092 419.791 cv
229.092 419.083 229.699 418.477 230.407 418.477 cv
251.853 418.477 li
252.561 418.477 253.167 419.083 253.167 419.791 cv
253.167 420.499 252.561 421.106 251.853 421.106 cv
cp
f
251.853 424.85 mo
230.407 424.85 li
229.699 424.85 229.092 424.242 229.092 423.534 cv
229.092 422.826 229.699 422.219 230.407 422.219 cv
251.853 422.219 li
252.561 422.219 253.167 422.826 253.167 423.534 cv
253.167 424.242 252.561 424.85 251.853 424.85 cv
cp
f
251.853 428.693 mo
240.523 428.693 li
239.814 428.693 239.208 428.086 239.208 427.378 cv
239.208 426.67 239.814 426.063 240.523 426.063 cv
251.853 426.063 li
252.561 426.063 253.167 426.67 253.167 427.378 cv
253.167 428.086 252.561 428.693 251.853 428.693 cv
cp
f
251.853 432.437 mo
240.523 432.437 li
239.814 432.437 239.208 431.829 239.208 431.121 cv
239.208 430.413 239.814 429.806 240.523 429.806 cv
251.853 429.806 li
252.561 429.806 253.167 430.413 253.167 431.121 cv
253.167 431.829 252.561 432.437 251.853 432.437 cv
cp
f
251.853 436.28 mo
240.523 436.28 li
239.814 436.28 239.208 435.673 239.208 434.965 cv
239.208 434.257 239.814 433.65 240.523 433.65 cv
251.853 433.65 li
252.561 433.65 253.167 434.257 253.167 434.965 cv
253.167 435.673 252.561 436.28 251.853 436.28 cv
cp
f
251.853 440.023 mo
240.523 440.023 li
239.814 440.023 239.208 439.416 239.208 438.708 cv
239.208 438 239.814 437.393 240.523 437.393 cv
251.853 437.393 li
252.561 437.393 253.167 438 253.167 438.708 cv
253.167 439.416 252.561 440.023 251.853 440.023 cv
cp
f
243.052 463.796 mo
198.744 463.796 li
198.036 463.796 197.429 463.188 197.429 462.48 cv
197.429 461.772 198.036 461.165 198.744 461.165 cv
243.052 461.165 li
243.76 461.165 244.367 461.772 244.367 462.48 cv
244.266 463.188 243.659 463.796 243.052 463.796 cv
cp
f
46.5 387.42 mo
147.659 387.42 li
147.659 488.579 li
46.5 488.579 li
46.5 387.42 li
cp
1 1 1 rgb
f
101.126 421.511 mo
97.0796 418.375 97.3828 418.577 97.2817 418.477 cv
96.877 418.173 96.27 418.274 95.8657 418.577 cv
92.0215 421.511 li
91.5156 421.916 91.4146 422.725 91.8193 423.332 cv
92.2236 423.838 93.0332 423.938 93.6401 423.534 cv
95.3599 422.219 li
95.3599 425.658 li
95.3599 426.366 95.9668 426.974 96.6748 426.974 cv
97.3828 426.974 97.9897 426.366 97.9897 425.658 cv
97.9897 422.219 li
99.7095 423.534 li
100.215 423.938 101.025 423.838 101.53 423.332 cv
101.733 422.826 101.632 422.017 101.126 421.511 cv
cp
.254902 .290196 .337255 rgb
f
104.363 425.558 mo
106.487 425.861 li
104.06 428.289 li
103.554 428.795 103.554 429.604 104.06 430.109 cv
104.565 430.615 105.375 430.615 105.88 430.109 cv
108.308 427.682 li
108.51 429.806 li
108.612 430.413 109.117 430.919 109.724 430.919 cv
110.534 430.919 111.04 430.211 110.938 429.503 cv
110.331 424.344 110.331 424.748 110.331 424.646 cv
110.23 424.242 109.927 423.938 109.623 423.838 cv
109.421 423.736 109.623 423.838 104.565 423.23 cv
103.857 423.13 103.25 423.636 103.149 424.344 cv
103.149 424.85 103.655 425.456 104.363 425.558 cv
cp
f
115.592 436.988 mo
115.49 436.786 115.592 436.988 112.456 432.942 cv
112.051 432.437 111.242 432.335 110.635 432.739 cv
110.129 433.145 110.028 433.953 110.433 434.561 cv
111.748 436.28 li
108.308 436.28 li
107.6 436.28 106.993 436.887 106.993 437.596 cv
106.993 438.304 107.6 438.91 108.308 438.91 cv
111.748 438.91 li
110.433 440.63 li
110.028 441.136 110.129 441.945 110.635 442.451 cv
111.141 442.855 111.95 442.755 112.456 442.249 cv
115.49 438.404 115.389 438.506 115.49 438.304 cv
115.49 438.202 115.592 438.102 115.592 438.102 cv
115.794 437.494 115.693 437.19 115.592 436.988 cv
cp
f
109.927 444.171 mo
109.219 444.069 108.612 444.575 108.51 445.283 cv
108.308 447.408 li
105.88 444.979 li
105.375 444.475 104.565 444.475 104.06 444.979 cv
103.554 445.485 103.554 446.295 104.06 446.801 cv
106.487 449.229 li
104.363 449.431 li
103.655 449.532 103.149 450.139 103.25 450.848 cv
103.352 451.556 103.958 452.062 104.667 451.96 cv
105.981 451.758 109.32 451.454 109.421 451.353 cv
109.927 451.252 110.331 450.848 110.433 450.342 cv
110.433 450.24 110.635 448.419 111.04 445.485 cv
111.141 444.879 110.635 444.271 109.927 444.171 cv
cp
f
99.5073 451.454 mo
97.7876 452.77 li
97.7876 449.33 li
97.7876 448.622 97.1807 448.015 96.4727 448.015 cv
95.7642 448.015 95.1572 448.622 95.1572 449.33 cv
95.1572 452.77 li
93.4375 451.454 li
92.9321 451.05 92.1226 451.15 91.6167 451.656 cv
91.2124 452.162 91.3135 452.972 91.8193 453.478 cv
95.562 456.411 li
95.9668 456.815 96.6748 456.815 97.0796 456.411 cv
100.822 453.478 li
101.328 453.072 101.429 452.264 101.025 451.656 cv
100.822 451.15 100.114 451.05 99.5073 451.454 cv
cp
f
88.7842 449.431 mo
86.6602 449.229 li
89.0879 446.801 li
89.5938 446.295 89.5938 445.485 89.0879 444.98 cv
88.582 444.475 87.7729 444.475 87.2671 444.98 cv
84.8394 447.408 li
84.5356 445.283 li
84.4346 444.575 83.8276 444.069 83.1196 444.171 cv
82.4116 444.271 81.9058 444.879 82.0068 445.587 cv
82.6138 450.342 li
82.7148 450.848 83.0186 451.252 83.5244 451.353 cv
83.7266 451.454 83.3218 451.353 88.481 451.96 cv
89.189 452.062 89.7959 451.556 89.897 450.848 cv
89.9985 450.139 89.4927 449.532 88.7842 449.431 cv
cp
f
82.6138 440.428 mo
81.2988 438.708 li
84.7383 438.708 li
85.4463 438.708 86.0532 438.102 86.0532 437.393 cv
86.0532 436.685 85.4463 436.078 84.7383 436.078 cv
81.2988 436.078 li
82.6138 434.358 li
83.0186 433.853 82.917 433.043 82.4116 432.537 cv
81.9058 432.133 81.0962 432.233 80.5908 432.739 cv
77.6572 436.482 li
77.3535 436.887 77.2524 437.393 77.5557 437.898 cv
77.6572 438 77.4546 437.696 80.5908 441.743 cv
80.9951 442.249 81.8047 442.35 82.4116 441.945 cv
82.917 441.743 83.0186 441.035 82.6138 440.428 cv
cp
f
83.3218 430.817 mo
83.9287 430.817 84.5356 430.312 84.5356 429.705 cv
84.8394 427.58 li
87.2671 430.009 li
87.7729 430.514 88.582 430.514 89.0879 430.009 cv
89.5938 429.503 89.5938 428.693 89.0879 428.188 cv
86.6602 425.76 li
88.7842 425.456 li
89.4927 425.355 89.9985 424.748 89.897 424.04 cv
89.7959 423.332 89.189 422.826 88.481 422.928 cv
83.4229 423.534 83.6255 423.534 83.4229 423.534 cv
83.0186 423.736 82.7148 424.04 82.6138 424.546 cv
82.6138 424.646 82.6138 424.546 82.0068 429.3 cv
82.0068 430.211 82.6138 430.817 83.3218 430.817 cv
cp
f
81.501 417.565 mo
82.8159 418.881 82.8159 421.106 81.501 422.422 cv
80.186 423.736 77.9604 423.736 76.6455 422.422 cv
75.3301 421.106 75.3301 418.881 76.6455 417.565 cv
77.9604 416.251 80.186 416.251 81.501 417.565 cv
cp
.52549 .862745 .992157 rgb
f
71.7896 434.055 mo
73.7119 434.055 75.229 435.572 75.229 437.494 cv
75.229 439.416 73.7119 440.934 71.7896 440.934 cv
69.8677 440.934 68.3501 439.416 68.3501 437.494 cv
68.3501 435.572 69.9688 434.055 71.7896 434.055 cv
cp
.207843 .596078 .858824 rgb
f
81.501 452.566 mo
82.8159 453.882 82.8159 456.107 81.501 457.423 cv
80.186 458.737 77.9604 458.737 76.6455 457.423 cv
75.3301 456.107 75.3301 453.882 76.6455 452.566 cv
77.9604 451.252 80.186 451.252 81.501 452.566 cv
cp
.52549 .862745 .992157 rgb
f
96.5737 458.839 mo
98.4956 458.839 100.013 460.356 100.013 462.278 cv
100.013 464.2 98.4956 465.718 96.5737 465.718 cv
94.6519 465.718 93.1343 464.2 93.1343 462.278 cv
93.1343 460.356 94.6519 458.839 96.5737 458.839 cv
cp
.207843 .596078 .858824 rgb
f
116.502 452.566 mo
117.817 453.882 117.817 456.107 116.502 457.423 cv
115.187 458.737 112.961 458.737 111.646 457.423 cv
110.331 456.107 110.331 453.882 111.646 452.566 cv
112.961 451.252 115.187 451.252 116.502 452.566 cv
cp
.52549 .862745 .992157 rgb
f
121.357 434.055 mo
123.28 434.055 124.797 435.572 124.797 437.494 cv
124.797 439.416 123.28 440.934 121.357 440.934 cv
119.436 440.934 117.918 439.416 117.918 437.494 cv
117.918 435.572 119.436 434.055 121.357 434.055 cv
cp
.207843 .596078 .858824 rgb
f
116.502 417.565 mo
117.817 418.881 117.817 421.106 116.502 422.422 cv
115.187 423.736 112.961 423.736 111.646 422.422 cv
110.331 421.106 110.331 418.881 111.646 417.565 cv
112.961 416.251 115.187 416.251 116.502 417.565 cv
cp
.52549 .862745 .992157 rgb
f
96.5737 409.271 mo
98.4956 409.271 100.013 410.788 100.013 412.71 cv
100.013 414.632 98.4956 416.149 96.5737 416.149 cv
94.6519 416.149 93.1343 414.632 93.1343 412.71 cv
93.1343 410.889 94.6519 409.271 96.5737 409.271 cv
cp
.207843 .596078 .858824 rgb
f
102.036 437.494 mo
102.036 434.459 99.6084 432.031 96.5737 432.031 cv
93.5391 432.031 91.1113 434.459 91.1113 437.494 cv
91.1113 440.529 93.5391 442.957 96.5737 442.957 cv
99.6084 442.957 102.036 440.529 102.036 437.494 cv
cp
96.5737 425.658 mo
103.048 425.658 108.409 430.919 108.409 437.494 cv
108.409 443.969 103.149 449.33 96.5737 449.33 cv
90.0996 449.33 84.7383 444.069 84.7383 437.494 cv
84.7383 431.02 90.0996 425.658 96.5737 425.658 cv
cp
.341176 .376471 .435294 rgb
f
556.341 259.96 mo
657.5 259.96 li
657.5 361.119 li
556.341 361.119 li
556.341 259.96 li
cp
1 1 1 rgb
f
606.01 296.377 mo
599.03 296.377 593.365 302.042 593.365 309.022 cv
593.365 316.002 599.03 321.667 606.01 321.667 cv
612.99 321.667 618.655 316.002 618.655 309.022 cv
618.655 302.042 612.99 296.377 606.01 296.377 cv
cp
.843137 .870588 .929412 rgb
f
612.282 309.022 mo
612.282 311.855 610.36 314.283 607.831 315.092 cv
607.224 315.294 606.617 315.396 606.01 315.396 cv
605.403 315.396 604.695 315.294 604.189 315.092 cv
601.559 314.283 599.738 311.855 599.738 309.022 cv
599.738 305.482 602.57 302.649 606.111 302.649 cv
609.449 302.75 612.282 305.482 612.282 309.022 cv
cp
.92549 .941176 .945098 rgb
f
602.268 321.06 mo
604.695 321.769 607.325 321.769 609.753 321.06 cv
609.753 335.931 li
609.753 336.942 609.349 337.853 608.641 338.561 cv
607.932 339.269 607.021 339.673 606.01 339.673 cv
603.987 339.673 602.268 337.954 602.268 335.931 cv
602.268 321.06 li
cp
.341176 .376471 .435294 rgb
f
623.511 331.581 mo
623.309 331.581 623.005 331.479 622.803 331.378 cv
616.024 327.028 li
615.418 326.624 615.216 325.916 615.62 325.309 cv
616.024 324.702 616.732 324.5 617.34 324.904 cv
623.309 328.647 li
625.635 326.32 li
621.893 320.352 li
621.589 319.947 621.589 319.442 621.893 319.037 cv
623.106 317.216 623.915 315.193 624.32 313.069 cv
624.421 312.563 624.826 312.259 625.23 312.158 cv
632.109 310.641 li
632.109 307.404 li
625.23 305.886 li
624.725 305.785 624.421 305.38 624.32 304.976 cv
623.814 302.852 623.005 300.829 621.893 299.008 cv
621.589 298.603 621.589 298.097 621.893 297.692 cv
625.635 291.724 li
623.309 289.397 li
617.34 293.141 li
616.936 293.444 616.43 293.444 616.024 293.141 cv
614.204 292.027 612.181 291.117 610.057 290.611 cv
609.551 290.51 609.247 290.105 609.146 289.701 cv
607.629 282.822 li
604.392 282.822 li
602.874 289.701 li
602.773 290.207 602.368 290.51 601.964 290.611 cv
599.84 291.117 597.816 291.926 595.995 293.141 cv
595.591 293.444 595.085 293.444 594.681 293.141 cv
588.712 289.397 li
586.386 291.724 li
590.128 297.692 li
590.432 298.097 590.432 298.603 590.128 299.008 cv
588.914 300.829 588.105 302.852 587.7 304.976 cv
587.6 305.482 587.194 305.785 586.79 305.886 cv
579.911 307.404 li
579.911 310.641 li
586.79 312.158 li
587.296 312.259 587.6 312.664 587.7 313.069 cv
588.206 315.193 589.016 317.216 590.128 319.037 cv
590.432 319.442 590.432 319.947 590.128 320.352 cv
586.386 326.32 li
588.712 328.647 li
594.681 324.904 li
595.287 324.5 596.097 324.702 596.4 325.309 cv
596.805 325.916 596.603 326.725 595.995 327.028 cv
589.218 331.378 li
588.712 331.682 588.105 331.581 587.6 331.176 cv
583.856 327.433 li
583.452 327.028 583.351 326.32 583.654 325.814 cv
587.498 319.644 li
586.486 318.025 585.778 316.205 585.272 314.384 cv
578.191 312.765 li
577.584 312.664 577.18 312.158 577.18 311.551 cv
577.18 306.291 li
577.18 305.684 577.584 305.178 578.191 305.077 cv
585.272 303.458 li
585.778 301.638 586.486 299.817 587.498 298.198 cv
583.654 292.129 li
583.351 291.623 583.452 291.016 583.856 290.51 cv
587.6 286.768 li
588.004 286.363 588.712 286.262 589.218 286.565 cv
595.389 290.51 li
597.007 289.499 598.828 288.791 600.648 288.285 cv
602.268 281.204 li
602.368 280.597 602.874 280.192 603.481 280.192 cv
608.741 280.192 li
609.349 280.192 609.854 280.597 609.955 281.204 cv
611.574 288.285 li
613.395 288.791 615.216 289.499 616.834 290.51 cv
623.005 286.565 li
623.511 286.262 624.117 286.363 624.623 286.768 cv
628.366 290.51 li
628.771 290.915 628.872 291.623 628.568 292.129 cv
624.725 298.299 li
625.736 299.918 626.444 301.739 626.95 303.56 cv
634.031 305.178 li
634.638 305.279 635.043 305.785 635.043 306.392 cv
635.043 311.652 li
635.043 312.259 634.638 312.765 634.031 312.866 cv
626.95 314.485 li
626.444 316.306 625.736 318.126 624.725 319.745 cv
628.568 325.916 li
628.872 326.422 628.771 327.028 628.366 327.534 cv
624.623 331.277 li
624.219 331.378 623.814 331.581 623.511 331.581 cv
cp
.254902 .290196 .337255 rgb
f
634.335 339.775 mo
615.316 339.775 li
614.608 339.775 614.002 339.167 614.002 338.459 cv
614.002 337.751 614.608 337.145 615.316 337.145 cv
634.335 337.145 li
635.043 337.145 635.649 337.751 635.649 338.459 cv
635.549 339.167 635.043 339.775 634.335 339.775 cv
cp
.843137 .870588 .929412 rgb
f
597.614 339.775 mo
578.697 339.775 li
577.989 339.775 577.382 339.167 577.382 338.459 cv
577.382 337.751 577.989 337.145 578.697 337.145 cv
597.715 337.145 li
598.423 337.145 599.03 337.751 599.03 338.459 cv
598.929 339.167 598.322 339.775 597.614 339.775 cv
cp
f
634.335 335.931 mo
622.903 335.931 li
622.195 335.931 621.589 335.324 621.589 334.615 cv
621.589 333.907 622.195 333.3 622.903 333.3 cv
634.335 333.3 li
635.043 333.3 635.649 333.907 635.649 334.615 cv
635.549 335.425 635.043 335.931 634.335 335.931 cv
cp
f
590.027 335.931 mo
578.697 335.931 li
577.989 335.931 577.382 335.324 577.382 334.615 cv
577.382 333.907 577.989 333.3 578.697 333.3 cv
590.128 333.3 li
590.836 333.3 591.443 333.907 591.443 334.615 cv
591.342 335.425 590.735 335.931 590.027 335.931 cv
cp
f
428.881 259.96 mo
530.04 259.96 li
530.04 361.119 li
428.881 361.119 li
428.881 259.96 li
cp
1 1 1 rgb
f
487.553 339.775 mo
487.047 339.775 486.541 339.471 486.339 338.864 cv
482.697 326.725 li
482.495 326.017 482.899 325.309 483.507 325.106 cv
484.215 324.904 484.923 325.309 485.125 325.916 cv
488.767 338.055 li
488.969 338.763 488.564 339.471 487.958 339.673 cv
487.755 339.775 487.654 339.775 487.553 339.775 cv
cp
.254902 .290196 .337255 rgb
f
468.131 339.775 mo
468.029 339.775 467.928 339.775 467.726 339.673 cv
467.018 339.471 466.714 338.763 466.917 338.055 cv
470.559 325.916 li
470.761 325.208 471.469 324.904 472.177 325.106 cv
472.885 325.309 473.188 326.017 472.986 326.725 cv
469.345 338.864 li
469.143 339.37 468.637 339.775 468.131 339.775 cv
cp
f
503.738 290.409 mo
505.357 290.409 506.773 291.724 506.773 293.444 cv
506.773 318.228 li
451.642 318.228 li
451.136 318.228 li
451.136 293.444 li
451.136 291.825 452.451 290.409 454.171 290.409 cv
503.738 290.409 li
cp
.92549 .941176 .945098 rgb
f
486.541 282.822 mo
484.013 280.293 li
481.483 282.822 li
478.954 280.293 li
476.426 282.822 li
473.896 280.293 li
471.367 282.822 li
467.625 280.293 li
467.625 290.409 li
467.625 311.956 li
490.386 311.956 li
490.386 290.409 li
490.386 280.293 li
486.541 282.822 li
cp
.843137 .870588 .929412 rgb
f
451.642 318.228 mo
451.136 318.228 li
451.136 323.387 li
451.136 325.005 452.451 326.422 454.171 326.422 cv
471.772 326.422 li
483.911 326.422 li
503.738 326.422 li
505.357 326.422 506.773 325.106 506.773 323.387 cv
506.773 318.228 li
451.642 318.228 li
cp
.341176 .376471 .435294 rgb
f
485.327 287.88 mo
487.856 287.88 li
487.856 296.681 li
485.327 296.681 li
485.327 287.88 li
cp
.937255 .447059 .478431 rgb
f
481.483 286.666 mo
484.013 286.666 li
484.013 296.782 li
481.483 296.782 li
481.483 286.666 li
cp
f
477.74 291.724 mo
480.27 291.724 li
480.27 296.782 li
477.74 296.782 li
477.74 291.724 li
cp
f
477.74 320.757 mo
478.448 320.757 479.056 321.364 479.056 322.072 cv
479.056 322.78 478.448 323.387 477.74 323.387 cv
477.032 323.387 476.426 322.78 476.426 322.072 cv
476.426 321.364 477.032 320.757 477.74 320.757 cv
cp
.254902 .290196 .337255 rgb
f
473.896 289.195 mo
476.426 289.195 li
476.426 296.782 li
473.896 296.782 li
473.896 289.195 li
cp
.937255 .447059 .478431 rgb
f
470.153 294.253 mo
472.683 294.253 li
472.683 296.782 li
470.153 296.782 li
470.153 294.253 li
cp
f
493.622 339.775 mo
462.061 339.775 li
461.353 339.775 460.746 339.167 460.746 338.459 cv
460.746 337.751 461.353 337.145 462.061 337.145 cv
493.622 337.145 li
494.331 337.145 494.938 337.751 494.938 338.459 cv
494.836 339.167 494.331 339.775 493.622 339.775 cv
cp
.219608 .25098 .294118 rgb
f
462.566 335.931 mo
451.136 335.931 li
450.428 335.931 449.82 335.324 449.82 334.615 cv
449.82 333.907 450.428 333.3 451.136 333.3 cv
462.566 333.3 li
463.274 333.3 463.882 333.907 463.882 334.615 cv
463.78 335.425 463.174 335.931 462.566 335.931 cv
cp
.843137 .870588 .929412 rgb
f
456.193 332.188 mo
451.136 332.188 li
450.428 332.188 449.82 331.581 449.82 330.873 cv
449.82 330.165 450.428 329.558 451.136 329.558 cv
456.193 329.558 li
456.901 329.558 457.509 330.165 457.509 330.873 cv
457.509 331.581 456.901 332.188 456.193 332.188 cv
cp
f
506.773 335.931 mo
495.443 335.931 li
494.735 335.931 494.128 335.324 494.128 334.615 cv
494.128 333.907 494.735 333.3 495.443 333.3 cv
506.773 333.3 li
507.481 333.3 508.088 333.907 508.088 334.615 cv
508.088 335.425 507.481 335.931 506.773 335.931 cv
cp
f
506.773 332.188 mo
501.715 332.188 li
501.007 332.188 500.4 331.581 500.4 330.873 cv
500.4 330.165 501.007 329.558 501.715 329.558 cv
506.773 329.558 li
507.481 329.558 508.088 330.165 508.088 330.873 cv
508.088 331.581 507.481 332.188 506.773 332.188 cv
cp
f
485.327 301.84 mo
481.483 301.84 li
480.775 301.84 480.168 301.233 480.168 300.525 cv
480.168 299.817 480.775 299.21 481.483 299.21 cv
485.327 299.21 li
486.035 299.21 486.643 299.817 486.643 300.525 cv
486.541 301.233 485.935 301.84 485.327 301.84 cv
cp
.235294 .231373 .239216 rgb
f
485.327 305.583 mo
472.683 305.583 li
471.975 305.583 471.367 304.976 471.367 304.268 cv
471.367 303.56 471.975 302.953 472.683 302.953 cv
485.327 302.953 li
486.035 302.953 486.643 303.56 486.643 304.268 cv
486.541 305.077 485.935 305.583 485.327 305.583 cv
cp
f
485.327 309.427 mo
472.683 309.427 li
471.975 309.427 471.367 308.82 471.367 308.112 cv
471.367 307.404 471.975 306.797 472.683 306.797 cv
485.327 306.797 li
486.035 306.797 486.643 307.404 486.643 308.112 cv
486.541 308.82 485.935 309.427 485.327 309.427 cv
cp
f
460.038 297.996 mo
456.193 297.996 li
455.485 297.996 454.879 297.389 454.879 296.681 cv
454.879 295.973 455.485 295.366 456.193 295.366 cv
460.038 295.366 li
460.746 295.366 461.353 295.973 461.353 296.681 cv
461.252 297.49 460.645 297.996 460.038 297.996 cv
cp
.192157 .227451 .321569 rgb
f
461.252 301.84 mo
456.193 301.84 li
455.485 301.84 454.879 301.233 454.879 300.525 cv
454.879 299.817 455.485 299.21 456.193 299.21 cv
461.252 299.21 li
461.96 299.21 462.566 299.817 462.566 300.525 cv
462.566 301.233 461.96 301.84 461.252 301.84 cv
cp
f
462.566 305.583 mo
456.193 305.583 li
455.485 305.583 454.879 304.976 454.879 304.268 cv
454.879 303.56 455.485 302.953 456.193 302.953 cv
462.566 302.953 li
463.274 302.953 463.882 303.56 463.882 304.268 cv
463.78 305.077 463.174 305.583 462.566 305.583 cv
cp
f
463.78 309.427 mo
456.193 309.427 li
455.485 309.427 454.879 308.82 454.879 308.112 cv
454.879 307.404 455.485 306.797 456.193 306.797 cv
463.78 306.797 li
464.488 306.797 465.096 307.404 465.096 308.112 cv
465.096 308.82 464.488 309.427 463.78 309.427 cv
cp
f
501.715 297.996 mo
497.871 297.996 li
497.163 297.996 496.556 297.389 496.556 296.681 cv
496.556 295.973 497.163 295.366 497.871 295.366 cv
501.715 295.366 li
502.423 295.366 503.03 295.973 503.03 296.681 cv
503.03 297.49 502.423 297.996 501.715 297.996 cv
cp
f
501.715 301.84 mo
496.657 301.84 li
495.949 301.84 495.342 301.233 495.342 300.525 cv
495.342 299.817 495.949 299.21 496.657 299.21 cv
501.715 299.21 li
502.423 299.21 503.03 299.817 503.03 300.525 cv
503.03 301.233 502.423 301.84 501.715 301.84 cv
cp
f
501.715 305.583 mo
495.342 305.583 li
494.634 305.583 494.027 304.976 494.027 304.268 cv
494.027 303.56 494.634 302.953 495.342 302.953 cv
501.715 302.953 li
502.423 302.953 503.03 303.56 503.03 304.268 cv
503.03 305.077 502.423 305.583 501.715 305.583 cv
cp
f
501.715 309.427 mo
494.128 309.427 li
493.42 309.427 492.813 308.82 492.813 308.112 cv
492.813 307.404 493.42 306.797 494.128 306.797 cv
501.715 306.797 li
502.423 306.797 503.03 307.404 503.03 308.112 cv
503.03 308.82 502.423 309.427 501.715 309.427 cv
cp
f
301.42 259.96 mo
402.579 259.96 li
402.579 361.119 li
301.42 361.119 li
301.42 259.96 li
cp
1 1 1 rgb
f
324.283 288.588 mo
324.283 332.795 li
330.655 332.795 li
330.655 337.853 li
337.737 332.795 li
363.532 332.795 li
363.532 288.588 li
324.283 288.588 li
cp
.92549 .941176 .945098 rgb
f
373.648 327.737 mo
373.648 330.266 li
373.648 331.682 372.535 332.795 371.119 332.795 cv
370.411 332.795 369.804 332.491 369.298 332.086 cv
368.792 331.682 368.59 330.974 368.59 330.266 cv
368.59 327.737 li
373.648 327.737 li
cp
.917647 .52549 .52549 rgb
f
373.648 326.523 mo
373.648 327.737 li
368.59 327.737 li
368.59 303.762 li
371.119 296.175 li
373.648 303.762 li
373.648 326.523 li
cp
.454902 .45098 .443137 rgb
f
329.34 293.646 mo
343.3 293.646 li
343.3 305.077 li
329.34 305.077 li
329.34 293.646 li
cp
.341176 .376471 .435294 rgb
f
324.283 281.001 mo
363.532 281.001 li
363.532 288.588 li
324.283 288.588 li
324.283 281.001 li
cp
.843137 .870588 .929412 rgb
f
337.635 301.84 mo
335.005 301.84 li
334.398 303.762 li
332.375 303.762 li
335.41 295.872 li
337.129 295.872 li
340.165 303.762 li
338.141 303.762 li
337.635 301.84 li
cp
337.332 300.525 mo
336.32 298.097 li
335.309 300.525 li
337.332 300.525 li
cp
1 1 1 rgb
f
334.398 283.53 mo
336.927 283.53 li
336.927 286.059 li
334.398 286.059 li
334.398 283.53 li
cp
.341176 .376471 .435294 rgb
f
330.655 283.53 mo
333.185 283.53 li
333.185 286.059 li
330.655 286.059 li
330.655 283.53 li
cp
f
326.812 283.53 mo
329.34 283.53 li
329.34 286.059 li
326.812 286.059 li
326.812 283.53 li
cp
f
358.475 294.86 mo
348.358 294.86 li
347.65 294.86 347.043 294.253 347.043 293.545 cv
347.043 292.837 347.65 292.23 348.358 292.23 cv
358.475 292.23 li
359.183 292.23 359.789 292.837 359.789 293.545 cv
359.789 294.253 359.183 294.86 358.475 294.86 cv
cp
.686275 .72549 .823529 rgb
f
358.475 298.704 mo
348.358 298.704 li
347.65 298.704 347.043 298.097 347.043 297.389 cv
347.043 296.681 347.65 296.074 348.358 296.074 cv
358.475 296.074 li
359.183 296.074 359.789 296.681 359.789 297.389 cv
359.688 298.097 359.183 298.704 358.475 298.704 cv
cp
f
358.475 302.447 mo
348.358 302.447 li
347.65 302.447 347.043 301.84 347.043 301.132 cv
347.043 300.424 347.65 299.817 348.358 299.817 cv
358.475 299.817 li
359.183 299.817 359.789 300.424 359.789 301.132 cv
359.688 301.84 359.183 302.447 358.475 302.447 cv
cp
f
358.475 306.291 mo
348.358 306.291 li
347.65 306.291 347.043 305.684 347.043 304.976 cv
347.043 304.268 347.65 303.661 348.358 303.661 cv
358.475 303.661 li
359.183 303.661 359.789 304.268 359.789 304.976 cv
359.688 305.684 359.183 306.291 358.475 306.291 cv
cp
f
358.475 310.034 mo
329.34 310.034 li
328.632 310.034 328.025 309.427 328.025 308.719 cv
328.025 308.011 328.632 307.404 329.34 307.404 cv
358.475 307.404 li
359.183 307.404 359.789 308.011 359.789 308.719 cv
359.688 309.427 359.183 310.034 358.475 310.034 cv
cp
f
358.475 313.878 mo
329.34 313.878 li
328.632 313.878 328.025 313.271 328.025 312.563 cv
328.025 311.855 328.632 311.248 329.34 311.248 cv
358.475 311.248 li
359.183 311.248 359.789 311.855 359.789 312.563 cv
359.789 313.271 359.183 313.878 358.475 313.878 cv
cp
f
358.475 317.621 mo
329.34 317.621 li
328.632 317.621 328.025 317.014 328.025 316.306 cv
328.025 315.598 328.632 314.991 329.34 314.991 cv
358.475 314.991 li
359.183 314.991 359.789 315.598 359.789 316.306 cv
359.789 317.014 359.183 317.621 358.475 317.621 cv
cp
f
358.475 321.465 mo
329.34 321.465 li
328.632 321.465 328.025 320.858 328.025 320.15 cv
328.025 319.442 328.632 318.835 329.34 318.835 cv
358.475 318.835 li
359.183 318.835 359.789 319.442 359.789 320.15 cv
359.789 320.858 359.183 321.465 358.475 321.465 cv
cp
f
377.391 339.167 mo
341.985 339.167 li
341.277 339.167 340.67 338.561 340.67 337.853 cv
340.67 337.145 341.277 336.538 341.985 336.538 cv
377.391 336.538 li
378.099 336.538 378.706 337.145 378.706 337.853 cv
378.706 338.561 378.099 339.167 377.391 339.167 cv
cp
.454902 .45098 .443137 rgb
f
173.96 259.96 mo
275.119 259.96 li
275.119 361.119 li
173.96 361.119 li
173.96 259.96 li
cp
1 1 1 rgb
f
205.218 322.274 mo
204.813 322.274 204.308 322.477 204.105 322.881 cv
204.105 322.881 li
203.802 323.488 204.004 324.196 204.51 324.601 cv
204.51 324.601 204.51 324.601 213.918 330.063 cv
216.75 331.682 219.279 333.199 219.684 333.401 cv
220.19 333.705 220.797 333.604 221.202 333.199 cv
221.708 332.693 221.708 331.884 221.202 331.378 cv
221.1 331.277 220.999 331.176 220.898 331.176 cv
220.493 330.974 217.964 329.457 215.132 327.838 cv
211.49 325.713 207.039 323.185 206.027 322.578 cv
205.926 322.477 205.926 322.477 205.825 322.375 cv
205.623 322.274 205.421 322.274 205.218 322.274 cv
cp
.843137 .870588 .929412 rgb
f
241.939 322.274 mo
242.344 322.274 242.85 322.477 243.052 322.881 cv
243.052 322.881 li
243.355 323.488 243.153 324.196 242.647 324.601 cv
242.647 324.601 242.647 324.601 233.239 330.063 cv
230.407 331.682 227.878 333.199 227.473 333.401 cv
226.967 333.705 226.36 333.604 225.956 333.199 cv
225.45 332.693 225.45 331.884 225.956 331.378 cv
226.057 331.277 226.158 331.176 226.259 331.176 cv
226.664 330.974 229.193 329.457 232.025 327.838 cv
235.667 325.713 240.118 323.185 241.13 322.578 cv
241.231 322.477 241.231 322.477 241.332 322.375 cv
241.433 322.274 241.636 322.274 241.939 322.274 cv
cp
f
205.218 296.58 mo
204.813 296.58 204.308 296.377 204.105 295.973 cv
204.105 295.973 li
203.802 295.366 204.004 294.658 204.51 294.253 cv
204.51 294.253 204.51 294.253 213.918 288.791 cv
216.75 287.172 219.279 285.655 219.684 285.452 cv
220.19 285.149 220.797 285.25 221.202 285.655 cv
221.708 286.16 221.708 286.97 221.202 287.476 cv
221.1 287.577 220.999 287.678 220.898 287.678 cv
220.493 287.88 217.964 289.397 215.132 291.016 cv
211.49 293.141 207.039 295.669 206.027 296.276 cv
205.926 296.377 205.926 296.377 205.825 296.479 cv
205.623 296.479 205.421 296.58 205.218 296.58 cv
cp
f
241.939 296.58 mo
242.344 296.58 242.85 296.377 243.052 295.973 cv
243.052 295.973 li
243.355 295.366 243.153 294.658 242.647 294.253 cv
242.647 294.253 242.647 294.253 233.239 288.791 cv
230.407 287.172 227.878 285.655 227.473 285.452 cv
226.967 285.149 226.36 285.25 225.956 285.655 cv
225.45 286.16 225.45 286.97 225.956 287.476 cv
226.057 287.577 226.158 287.678 226.259 287.678 cv
226.664 287.88 229.193 289.397 232.025 291.016 cv
235.667 293.141 240.118 295.669 241.13 296.276 cv
241.231 296.377 241.231 296.377 241.332 296.479 cv
241.433 296.479 241.636 296.58 241.939 296.58 cv
cp
f
202.184 319.442 mo
202.184 319.442 li
202.083 319.442 202.083 319.442 202.083 319.442 cv
201.375 319.442 200.768 318.835 200.768 318.126 cv
200.768 300.626 li
200.768 299.918 201.375 299.311 202.083 299.311 cv
202.791 299.311 203.397 299.918 203.397 300.626 cv
203.499 318.228 li
203.499 318.936 202.892 319.442 202.184 319.442 cv
cp
f
245.378 319.442 mo
245.378 319.442 li
245.277 319.442 245.277 319.442 245.277 319.442 cv
244.569 319.442 243.962 318.835 243.962 318.126 cv
243.962 300.626 li
243.962 299.918 244.569 299.311 245.277 299.311 cv
245.985 299.311 246.592 299.918 246.592 300.626 cv
246.693 318.228 li
246.592 318.936 246.086 319.442 245.378 319.442 cv
cp
f
223.528 294.961 mo
222.82 294.961 222.213 294.354 222.213 293.646 cv
222.213 288.285 li
222.213 287.577 222.82 286.97 223.528 286.97 cv
224.236 286.97 224.843 287.577 224.843 288.285 cv
224.843 293.646 li
224.843 294.354 224.236 294.961 223.528 294.961 cv
cp
.121569 .203922 .258824 rgb
f
237.185 302.75 mo
236.78 302.75 236.274 302.548 236.072 302.144 cv
235.769 301.537 235.971 300.727 236.578 300.424 cv
241.231 297.692 li
241.838 297.389 242.647 297.591 242.951 298.198 cv
243.254 298.805 243.052 299.615 242.445 299.918 cv
237.792 302.649 li
237.589 302.75 237.387 302.75 237.185 302.75 cv
cp
f
241.838 321.263 mo
241.636 321.263 241.433 321.161 241.231 321.06 cv
236.578 318.329 li
235.971 318.025 235.769 317.216 236.072 316.609 cv
236.375 316.002 237.185 315.8 237.792 316.104 cv
242.445 318.835 li
243.052 319.138 243.254 319.947 242.951 320.555 cv
242.748 321.06 242.243 321.263 241.838 321.263 cv
cp
f
223.528 331.783 mo
222.82 331.783 222.213 331.176 222.213 330.468 cv
222.213 325.106 li
222.213 324.398 222.82 323.792 223.528 323.792 cv
224.236 323.792 224.843 324.398 224.843 325.106 cv
224.843 330.468 li
224.843 331.277 224.236 331.783 223.528 331.783 cv
cp
f
205.218 321.263 mo
204.813 321.263 204.308 321.06 204.105 320.656 cv
203.802 320.049 204.004 319.239 204.611 318.936 cv
209.265 316.205 li
209.872 315.901 210.681 316.104 210.984 316.71 cv
211.288 317.317 211.085 318.126 210.479 318.43 cv
205.825 321.161 li
205.623 321.161 205.421 321.263 205.218 321.263 cv
cp
f
209.872 302.75 mo
209.669 302.75 209.467 302.649 209.265 302.548 cv
204.611 299.817 li
204.004 299.513 203.802 298.704 204.105 298.097 cv
204.409 297.49 205.218 297.288 205.825 297.591 cv
210.479 300.323 li
211.085 300.626 211.288 301.436 210.984 302.042 cv
210.782 302.548 210.276 302.75 209.872 302.75 cv
cp
f
232.329 316.609 mo
227.777 322.173 219.279 322.173 214.727 316.609 cv
219.279 311.045 227.777 311.045 232.329 316.609 cv
cp
.52549 .862745 .992157 rgb
f
223.528 303.56 mo
225.956 303.56 227.979 305.583 227.979 308.011 cv
227.979 310.438 226.057 312.36 223.629 312.462 cv
223.528 312.462 li
223.528 312.462 li
221.1 312.462 219.178 310.438 219.178 308.011 cv
219.077 305.583 221.1 303.56 223.528 303.56 cv
cp
1 .847059 .658824 rgb
f
251.853 338.965 mo
234.15 338.965 li
233.442 338.965 232.835 338.358 232.835 337.65 cv
232.835 336.942 233.442 336.335 234.15 336.335 cv
251.853 336.335 li
252.561 336.335 253.167 336.942 253.167 337.65 cv
253.167 338.459 252.561 338.965 251.853 338.965 cv
cp
.843137 .870588 .929412 rgb
f
251.853 335.223 mo
240.523 335.223 li
239.814 335.223 239.208 334.616 239.208 333.907 cv
239.208 333.199 239.814 332.592 240.523 332.592 cv
251.853 332.592 li
252.561 332.592 253.167 333.199 253.167 333.907 cv
253.167 334.616 252.561 335.223 251.853 335.223 cv
cp
f
251.853 331.378 mo
245.479 331.378 li
244.771 331.378 244.165 330.771 244.165 330.063 cv
244.165 329.355 244.771 328.748 245.479 328.748 cv
251.853 328.748 li
252.561 328.748 253.167 329.355 253.167 330.063 cv
253.167 330.873 252.561 331.378 251.853 331.378 cv
cp
f
213.918 338.965 mo
196.215 338.965 li
195.507 338.965 194.9 338.358 194.9 337.65 cv
194.9 336.942 195.507 336.335 196.215 336.335 cv
213.918 336.335 li
214.626 336.335 215.233 336.942 215.233 337.65 cv
215.233 338.459 214.626 338.965 213.918 338.965 cv
cp
f
207.646 335.223 mo
196.215 335.223 li
195.507 335.223 194.9 334.616 194.9 333.907 cv
194.9 333.199 195.507 332.592 196.215 332.592 cv
207.646 332.592 li
208.354 332.592 208.961 333.199 208.961 333.907 cv
208.86 334.616 208.253 335.223 207.646 335.223 cv
cp
f
202.588 331.378 mo
196.215 331.378 li
195.507 331.378 194.9 330.771 194.9 330.063 cv
194.9 329.355 195.507 328.748 196.215 328.748 cv
202.588 328.748 li
203.296 328.748 203.903 329.355 203.903 330.063 cv
203.802 330.873 203.195 331.378 202.588 331.378 cv
cp
f
200.262 300.121 mo
198.542 299.109 197.935 296.883 198.946 295.164 cv
199.958 293.444 202.184 292.837 203.903 293.849 cv
204.813 294.354 205.421 295.265 205.623 296.276 cv
205.926 298.097 204.915 299.817 203.195 300.424 cv
202.892 300.525 201.273 300.727 200.262 300.121 cv
cp
.2 .286275 .368627 rgb
f
205.421 323.083 mo
205.319 323.286 205.218 323.488 205.218 323.488 cv
205.218 323.488 li
205.218 323.488 li
204.915 323.994 204.51 324.5 203.903 324.803 cv
202.184 325.814 199.958 325.208 198.946 323.488 cv
197.935 321.769 198.542 319.543 200.262 318.531 cv
200.869 318.228 201.476 318.025 202.184 318.025 cv
202.184 318.025 li
204.308 318.126 205.623 319.745 205.623 321.566 cv
205.724 322.173 205.623 322.679 205.421 323.083 cv
cp
f
226.664 332.39 mo
226.664 332.39 li
226.967 332.896 227.17 333.503 227.17 334.211 cv
227.17 336.234 225.551 337.853 223.528 337.853 cv
221.505 337.853 219.886 336.234 219.886 334.211 cv
219.886 332.592 220.999 331.277 222.416 330.771 cv
224.034 330.165 225.753 330.873 226.664 332.39 cv
226.664 332.289 226.664 332.39 226.664 332.39 cv
226.664 332.39 li
cp
f
244.974 318.228 mo
245.581 318.228 246.188 318.43 246.795 318.733 cv
248.514 319.745 249.122 321.971 248.11 323.69 cv
247.098 325.41 244.873 326.017 243.153 325.005 cv
241.534 324.095 240.928 322.173 241.636 320.453 cv
242.04 319.543 242.85 318.835 243.659 318.531 cv
243.659 318.531 li
244.063 318.329 244.367 318.329 244.771 318.329 cv
244.771 318.329 li
244.873 318.228 244.873 318.228 244.974 318.228 cv
cp
f
243.153 293.95 mo
244.873 292.938 247.098 293.545 248.11 295.265 cv
249.122 296.984 248.514 299.21 246.795 300.222 cv
245.884 300.727 244.67 300.93 243.558 300.424 cv
241.737 299.615 240.928 297.591 241.737 295.771 cv
241.838 295.669 241.939 295.467 241.939 295.366 cv
241.838 295.265 242.647 294.253 243.153 293.95 cv
cp
f
221.505 287.678 mo
220.493 286.97 219.886 285.958 219.886 284.744 cv
219.886 282.721 221.505 281.103 223.528 281.103 cv
225.551 281.103 227.17 282.721 227.17 284.744 cv
227.17 286.666 225.652 288.386 223.528 288.386 cv
222.82 288.285 221.505 287.678 221.505 287.678 cv
cp
f
215.941 316.205 mo
215.941 316.104 215.84 316.002 215.739 315.8 cv
214.323 313.979 213.513 311.753 213.412 309.427 cv
213.513 295.568 233.543 296.58 233.644 309.427 cv
233.644 311.753 232.835 313.979 231.317 315.8 cv
231.216 315.901 231.115 316.002 231.115 316.205 cv
227.069 320.757 219.988 320.858 215.941 316.205 cv
cp
223.528 296.782 mo
216.548 296.782 210.883 302.447 210.883 309.427 cv
210.883 309.427 210.883 309.427 210.883 309.528 cv
210.883 309.528 210.883 309.528 210.883 309.629 cv
210.883 316.609 216.548 322.274 223.528 322.274 cv
230.508 322.274 236.173 316.508 236.173 309.528 cv
236.173 302.447 230.508 296.782 223.528 296.782 cv
cp
f
46.5 259.96 mo
147.659 259.96 li
147.659 361.119 li
46.5 361.119 li
46.5 259.96 li
cp
1 1 1 rgb
f
113.063 318.228 mo
116.907 318.228 li
116.907 322.072 li
113.063 322.072 li
113.063 318.228 li
cp
.627451 .807843 .796078 rgb
f
113.063 303.054 mo
116.907 303.054 li
116.907 306.898 li
113.063 306.898 li
113.063 303.054 li
cp
f
105.476 303.054 mo
109.32 303.054 li
109.32 306.898 li
105.476 306.898 li
105.476 303.054 li
cp
f
105.476 310.641 mo
109.32 310.641 li
109.32 314.485 li
105.476 314.485 li
105.476 310.641 li
cp
f
97.8887 303.054 mo
101.733 303.054 li
101.733 306.898 li
97.8887 306.898 li
97.8887 303.054 li
cp
f
97.8887 295.467 mo
101.733 295.467 li
101.733 299.311 li
97.8887 299.311 li
97.8887 295.467 li
cp
f
90.3018 295.467 mo
94.146 295.467 li
94.146 299.311 li
90.3018 299.311 li
90.3018 295.467 li
cp
f
90.3018 310.641 mo
94.146 310.641 li
94.146 314.485 li
90.3018 314.485 li
90.3018 310.641 li
cp
f
90.3018 318.228 mo
94.146 318.228 li
94.146 322.072 li
90.3018 322.072 li
90.3018 318.228 li
cp
f
82.7148 318.228 mo
86.5591 318.228 li
86.5591 322.072 li
82.7148 322.072 li
82.7148 318.228 li
cp
f
82.7148 303.054 mo
86.5591 303.054 li
86.5591 306.898 li
82.7148 306.898 li
82.7148 303.054 li
cp
f
82.7148 310.641 mo
86.5591 310.641 li
86.5591 314.485 li
82.7148 314.485 li
82.7148 310.641 li
cp
f
82.7148 295.467 mo
86.5591 295.467 li
86.5591 299.311 li
82.7148 299.311 li
82.7148 295.467 li
cp
.843137 .870588 .929412 rgb
f
70.0698 281.608 mo
109.32 281.608 li
109.32 289.195 li
70.0698 289.195 li
70.0698 281.608 li
cp
.341176 .376471 .435294 rgb
f
80.186 284.137 mo
82.7148 284.137 li
82.7148 286.666 li
80.186 286.666 li
80.186 284.137 li
cp
.254902 .290196 .337255 rgb
f
76.3418 284.137 mo
78.8711 284.137 li
78.8711 286.666 li
76.3418 286.666 li
76.3418 284.137 li
cp
f
72.5991 284.137 mo
75.1279 284.137 li
75.1279 286.666 li
72.5991 286.666 li
72.5991 284.137 li
cp
f
109.219 294.253 mo
109.927 294.253 110.534 293.646 110.534 292.938 cv
110.534 281.608 li
110.534 280.9 109.927 280.293 109.219 280.293 cv
70.0698 280.293 li
69.3618 280.293 68.7549 280.9 68.7549 281.608 cv
68.7549 333.503 li
68.7549 334.211 69.3618 334.818 70.0698 334.818 cv
70.9805 334.818 108.106 334.818 109.32 334.818 cv
110.028 334.818 110.635 334.211 110.635 333.503 cv
110.635 323.387 li
110.635 322.679 110.028 322.072 109.32 322.072 cv
108.612 322.072 108.004 322.679 108.004 323.387 cv
108.004 332.289 li
106.184 332.289 72.7002 332.289 71.2837 332.289 cv
71.2837 282.822 li
108.004 282.822 li
108.004 292.938 li
108.004 293.646 108.51 294.253 109.219 294.253 cv
cp
f
104.161 329.659 mo
75.1279 329.659 li
74.4199 329.659 73.813 329.052 73.813 328.344 cv
73.813 327.636 74.4199 327.028 75.1279 327.028 cv
104.161 327.028 li
104.869 327.028 105.476 327.636 105.476 328.344 cv
105.476 329.052 104.869 329.659 104.161 329.659 cv
cp
.843137 .870588 .929412 rgb
f
123.179 339.775 mo
87.7729 339.775 li
87.0645 339.775 86.458 339.167 86.458 338.459 cv
86.458 337.751 87.0645 337.145 87.7729 337.145 cv
123.179 337.145 li
123.887 337.145 124.494 337.751 124.494 338.459 cv
124.393 339.167 123.785 339.775 123.179 339.775 cv
cp
.341176 .376471 .435294 rgb
f
97.7876 318.228 mo
101.632 318.228 li
101.632 322.072 li
97.7876 322.072 li
97.7876 318.228 li
cp
.627451 .807843 .796078 rgb
f
556.341 132.5 mo
657.5 132.5 li
657.5 233.659 li
556.341 233.659 li
556.341 132.5 li
cp
1 1 1 rgb
f
622.803 153.845 mo
618.655 153.845 615.216 157.284 615.216 161.432 cv
615.216 165.579 618.655 169.019 622.803 169.019 cv
626.95 169.019 630.39 165.579 630.39 161.432 cv
630.39 157.183 627.051 153.845 622.803 153.845 cv
cp
.854902 .32549 .34902 rgb
f
631.198 169.019 mo
622.903 169.019 li
581.631 169.019 li
580.013 169.019 578.596 170.333 578.596 172.053 cv
578.596 204.424 li
578.899 204.424 li
634.132 204.424 li
634.132 171.952 li
634.132 170.333 632.817 169.019 631.198 169.019 cv
cp
.843137 .870588 .929412 rgb
f
609.449 174.683 mo
585.677 174.683 li
584.564 174.683 583.654 175.594 583.654 176.707 cv
583.654 191.577 li
583.654 192.689 584.564 193.6 585.677 193.6 cv
598.828 193.6 li
602.672 199.973 li
606.516 193.6 li
609.551 193.6 li
610.663 193.6 611.574 192.689 611.574 191.577 cv
611.574 176.707 li
611.473 175.594 610.563 174.683 609.449 174.683 cv
cp
.937255 .447059 .478431 rgb
f
601.356 158.902 mo
601.356 162.646 li
596.299 160.116 li
596.299 157.587 li
601.356 155.059 li
601.356 158.902 li
cp
.254902 .290196 .337255 rgb
f
588.712 163.96 mo
583.654 163.96 li
583.654 153.845 li
596.299 153.845 li
596.299 157.587 li
596.299 160.116 li
596.299 163.96 li
588.712 163.96 li
cp
.341176 .376471 .435294 rgb
f
626.039 161.533 mo
621.387 164.163 li
621.387 158.902 li
626.039 161.533 li
cp
.92549 .941176 .945098 rgb
f
634.132 204.424 mo
634.132 208.369 li
634.132 209.988 632.817 211.404 631.098 211.404 cv
581.631 211.404 li
580.013 211.404 578.596 210.089 578.596 208.369 cv
578.596 204.424 li
578.899 204.424 li
634.132 204.424 li
cp
.341176 .376471 .435294 rgb
f
601.862 183.585 mo
594.983 187.53 li
594.983 179.741 li
601.862 183.585 li
cp
.92549 .941176 .945098 rgb
f
629.176 175.897 mo
622.803 175.897 li
622.095 175.897 621.487 175.29 621.487 174.582 cv
621.487 173.874 622.095 173.267 622.803 173.267 cv
629.176 173.267 li
629.884 173.267 630.49 173.874 630.49 174.582 cv
630.39 175.29 629.884 175.897 629.176 175.897 cv
cp
.686275 .72549 .823529 rgb
f
629.176 179.741 mo
622.803 179.741 li
622.095 179.741 621.487 179.134 621.487 178.426 cv
621.487 177.718 622.095 177.111 622.803 177.111 cv
629.176 177.111 li
629.884 177.111 630.49 177.718 630.49 178.426 cv
630.39 179.134 629.884 179.741 629.176 179.741 cv
cp
f
629.176 183.484 mo
617.744 183.484 li
617.036 183.484 616.43 182.877 616.43 182.27 cv
616.43 181.562 617.036 180.955 617.744 180.955 cv
629.176 180.955 li
629.884 180.955 630.49 181.562 630.49 182.27 cv
630.39 182.877 629.884 183.484 629.176 183.484 cv
cp
f
629.176 187.328 mo
617.744 187.328 li
617.036 187.328 616.43 186.721 616.43 186.013 cv
616.43 185.305 617.036 184.698 617.744 184.698 cv
629.176 184.698 li
629.884 184.698 630.49 185.305 630.49 186.013 cv
630.49 186.721 629.884 187.328 629.176 187.328 cv
cp
f
629.176 191.071 mo
617.744 191.071 li
617.036 191.071 616.43 190.464 616.43 189.756 cv
616.43 189.048 617.036 188.441 617.744 188.441 cv
629.176 188.441 li
629.884 188.441 630.49 189.048 630.49 189.756 cv
630.49 190.464 629.884 191.071 629.176 191.071 cv
cp
f
428.881 132.5 mo
530.04 132.5 li
530.04 233.659 li
428.881 233.659 li
428.881 132.5 li
cp
1 1 1 rgb
f
454.271 153.541 mo
493.521 153.541 li
493.521 161.128 li
454.271 161.128 li
454.271 153.541 li
cp
.341176 .376471 .435294 rgb
f
493.521 183.889 mo
492.813 183.889 492.206 184.496 492.206 185.204 cv
492.206 201.693 li
492.206 202.401 492.813 203.008 493.521 203.008 cv
494.229 203.008 494.836 202.401 494.836 201.693 cv
494.836 185.103 li
494.735 184.395 494.229 183.889 493.521 183.889 cv
cp
.254902 .290196 .337255 rgb
f
493.521 152.226 mo
454.271 152.226 li
453.563 152.226 452.957 152.833 452.957 153.541 cv
452.957 211.708 li
452.957 212.416 453.563 213.022 454.271 213.022 cv
493.521 213.022 li
494.229 213.022 494.836 212.416 494.836 211.708 cv
494.836 206.649 li
494.836 205.941 494.229 205.334 493.521 205.334 cv
492.813 205.334 492.206 205.941 492.206 206.649 cv
492.206 210.393 li
455.587 210.393 li
455.587 154.755 li
492.308 154.755 li
492.308 162.342 li
492.308 163.05 492.914 163.657 493.622 163.657 cv
494.331 163.657 494.938 163.05 494.938 162.342 cv
494.938 153.44 li
494.735 152.833 494.229 152.226 493.521 152.226 cv
cp
f
459.33 166.186 mo
471.975 166.186 li
471.975 178.831 li
459.33 178.831 li
459.33 166.186 li
cp
.937255 .447059 .478431 rgb
f
502.322 201.591 mo
503.738 201.591 504.852 202.704 504.852 204.121 cv
504.852 204.829 504.548 205.436 504.143 205.941 cv
503.638 206.447 503.03 206.649 502.322 206.649 cv
499.793 206.649 li
499.793 201.591 li
502.322 201.591 li
cp
.917647 .52549 .52549 rgb
f
499.793 201.591 mo
499.793 206.649 li
498.175 206.649 482.596 206.649 475.718 206.649 cv
469.345 204.121 li
475.718 201.591 li
478.348 201.591 497.062 201.591 499.793 201.591 cv
cp
.235294 .231373 .239216 rgb
f
466.613 173.166 mo
465.602 170.738 li
464.59 173.166 li
466.613 173.166 li
466.613 173.166 li
cp
467.018 174.481 mo
464.388 174.481 li
463.78 176.403 li
461.758 176.403 li
464.792 168.513 li
466.512 168.513 li
469.547 176.403 li
467.523 176.403 li
467.018 174.481 li
cp
1 1 1 rgb
f
464.388 156.07 mo
466.917 156.07 li
466.917 158.599 li
464.388 158.599 li
464.388 156.07 li
cp
.254902 .290196 .337255 rgb
f
460.645 156.07 mo
463.174 156.07 li
463.174 158.599 li
460.645 158.599 li
460.645 156.07 li
cp
f
456.801 156.07 mo
459.33 156.07 li
459.33 158.599 li
456.801 158.599 li
456.801 156.07 li
cp
f
503.638 167.4 mo
480.877 167.4 li
480.168 167.4 479.562 166.793 479.562 166.085 cv
479.562 165.376 480.168 164.77 480.877 164.77 cv
503.638 164.77 li
504.346 164.77 504.952 165.376 504.952 166.085 cv
504.952 166.793 504.346 167.4 503.638 167.4 cv
cp
.843137 .870588 .929412 rgb
f
503.638 171.244 mo
480.877 171.244 li
480.168 171.244 479.562 170.637 479.562 169.929 cv
479.562 169.221 480.168 168.614 480.877 168.614 cv
503.638 168.614 li
504.346 168.614 504.952 169.221 504.952 169.929 cv
504.852 170.637 504.346 171.244 503.638 171.244 cv
cp
f
503.638 174.987 mo
480.877 174.987 li
480.168 174.987 479.562 174.38 479.562 173.672 cv
479.562 172.963 480.168 172.356 480.877 172.356 cv
503.638 172.356 li
504.346 172.356 504.952 172.963 504.952 173.672 cv
504.852 174.38 504.346 174.987 503.638 174.987 cv
cp
f
503.638 178.831 mo
480.877 178.831 li
480.168 178.831 479.562 178.224 479.562 177.516 cv
479.562 176.808 480.168 176.201 480.877 176.201 cv
503.638 176.201 li
504.346 176.201 504.952 176.808 504.952 177.516 cv
504.852 178.224 504.346 178.831 503.638 178.831 cv
cp
f
503.638 182.574 mo
480.877 182.574 li
480.168 182.574 479.562 181.967 479.562 181.259 cv
479.562 180.55 480.168 179.943 480.877 179.943 cv
503.638 179.943 li
504.346 179.943 504.952 180.55 504.952 181.259 cv
504.852 181.967 504.346 182.574 503.638 182.574 cv
cp
f
488.463 186.417 mo
459.33 186.417 li
458.621 186.417 458.015 185.811 458.015 185.103 cv
458.015 184.395 458.621 183.788 459.33 183.788 cv
488.463 183.788 li
489.172 183.788 489.778 184.395 489.778 185.103 cv
489.778 185.811 489.172 186.417 488.463 186.417 cv
cp
f
480.877 194.004 mo
459.33 194.004 li
458.621 194.004 458.015 193.397 458.015 192.689 cv
458.015 191.981 458.621 191.375 459.33 191.375 cv
480.877 191.375 li
481.585 191.375 482.191 191.981 482.191 192.689 cv
482.191 193.397 481.585 194.004 480.877 194.004 cv
cp
f
480.877 197.748 mo
459.33 197.748 li
458.621 197.748 458.015 197.141 458.015 196.433 cv
458.015 195.724 458.621 195.117 459.33 195.117 cv
480.877 195.117 li
481.585 195.117 482.191 195.724 482.191 196.433 cv
482.191 197.141 481.585 197.748 480.877 197.748 cv
cp
f
301.42 132.5 mo
402.579 132.5 li
402.579 233.659 li
301.42 233.659 li
301.42 132.5 li
cp
1 1 1 rgb
f
327.52 195.826 mo
364.24 195.826 li
364.24 209.785 li
327.52 209.785 li
327.52 195.826 li
cp
.584314 .647059 .647059 rgb
f
373.041 176.909 mo
373.041 184.799 li
367.578 184.799 li
367.578 190.161 li
358.171 184.799 li
337.635 184.799 li
337.635 162.949 li
346.032 162.949 li
346.032 176.909 li
373.041 176.909 li
cp
.686275 .72549 .823529 rgb
f
380.628 155.362 mo
380.628 176.909 li
373.041 176.909 li
346.032 176.909 li
346.032 162.949 li
346.032 155.362 li
380.628 155.362 li
cp
.341176 .376471 .435294 rgb
f
357.867 203.413 mo
360.396 203.413 li
360.396 205.941 li
357.867 205.941 li
357.867 203.413 li
cp
1 1 1 rgb
f
357.867 199.669 mo
360.396 199.669 li
360.396 202.198 li
357.867 202.198 li
357.867 199.669 li
cp
f
354.023 203.413 mo
356.552 203.413 li
356.552 205.941 li
354.023 205.941 li
354.023 203.413 li
cp
f
354.023 199.669 mo
356.552 199.669 li
356.552 202.198 li
354.023 202.198 li
354.023 199.669 li
cp
f
350.28 203.413 mo
352.809 203.413 li
352.809 205.941 li
350.28 205.941 li
350.28 203.413 li
cp
f
350.28 199.669 mo
352.809 199.669 li
352.809 202.198 li
350.28 202.198 li
350.28 199.669 li
cp
f
346.437 203.413 mo
348.965 203.413 li
348.965 205.941 li
346.437 205.941 li
346.437 203.413 li
cp
f
346.437 199.669 mo
348.965 199.669 li
348.965 202.198 li
346.437 202.198 li
346.437 199.669 li
cp
f
342.693 203.413 mo
345.222 203.413 li
345.222 205.941 li
342.693 205.941 li
342.693 203.413 li
cp
f
342.693 199.669 mo
345.222 199.669 li
345.222 202.198 li
342.693 202.198 li
342.693 199.669 li
cp
f
338.849 203.413 mo
341.378 203.413 li
341.378 205.941 li
338.849 205.941 li
338.849 203.413 li
cp
f
338.849 199.669 mo
341.378 199.669 li
341.378 202.198 li
338.849 202.198 li
338.849 199.669 li
cp
f
335.106 203.413 mo
337.635 203.413 li
337.635 205.941 li
335.106 205.941 li
335.106 203.413 li
cp
f
335.106 199.669 mo
337.635 199.669 li
337.635 202.198 li
335.106 202.198 li
335.106 199.669 li
cp
f
331.262 199.669 mo
333.792 199.669 li
333.792 202.198 li
331.262 202.198 li
331.262 199.669 li
cp
f
367.983 197.141 mo
323.675 197.141 li
322.967 197.141 322.36 196.534 322.36 195.826 cv
322.36 195.117 322.967 194.51 323.675 194.51 cv
367.983 194.51 li
368.691 194.51 369.298 195.117 369.298 195.826 cv
369.298 196.534 368.59 197.141 367.983 197.141 cv
cp
.235294 .231373 .239216 rgb
f
365.454 161.735 mo
351.494 161.735 li
350.786 161.735 350.179 161.128 350.179 160.42 cv
350.179 159.712 350.786 159.105 351.494 159.105 cv
365.454 159.105 li
366.162 159.105 366.77 159.712 366.77 160.42 cv
366.668 161.128 366.062 161.735 365.454 161.735 cv
cp
1 1 1 rgb
f
365.454 165.478 mo
351.494 165.478 li
350.786 165.478 350.179 164.871 350.179 164.163 cv
350.179 163.455 350.786 162.848 351.494 162.848 cv
365.454 162.848 li
366.162 162.848 366.77 163.455 366.77 164.163 cv
366.668 164.972 366.062 165.478 365.454 165.478 cv
cp
f
375.57 169.322 mo
351.494 169.322 li
350.786 169.322 350.179 168.715 350.179 168.007 cv
350.179 167.299 350.786 166.692 351.494 166.692 cv
375.57 166.692 li
376.278 166.692 376.885 167.299 376.885 168.007 cv
376.784 168.715 376.177 169.322 375.57 169.322 cv
cp
f
375.57 173.064 mo
351.494 173.064 li
350.786 173.064 350.179 172.458 350.179 171.75 cv
350.179 171.042 350.786 170.435 351.494 170.435 cv
375.57 170.435 li
376.278 170.435 376.885 171.042 376.885 171.75 cv
376.784 172.559 376.177 173.064 375.57 173.064 cv
cp
f
328.733 157.891 mo
323.675 157.891 li
322.967 157.891 322.36 157.284 322.36 156.576 cv
322.36 155.868 322.967 155.261 323.675 155.261 cv
328.733 155.261 li
329.441 155.261 330.048 155.868 330.048 156.576 cv
330.048 157.284 329.441 157.891 328.733 157.891 cv
cp
.686275 .72549 .823529 rgb
f
328.733 161.735 mo
323.675 161.735 li
322.967 161.735 322.36 161.128 322.36 160.42 cv
322.36 159.712 322.967 159.105 323.675 159.105 cv
328.733 159.105 li
329.441 159.105 330.048 159.712 330.048 160.42 cv
330.048 161.128 329.441 161.735 328.733 161.735 cv
cp
f
328.733 165.478 mo
323.675 165.478 li
322.967 165.478 322.36 164.871 322.36 164.163 cv
322.36 163.455 322.967 162.848 323.675 162.848 cv
328.733 162.848 li
329.441 162.848 330.048 163.455 330.048 164.163 cv
330.048 164.972 329.441 165.478 328.733 165.478 cv
cp
f
328.733 169.322 mo
323.675 169.322 li
322.967 169.322 322.36 168.715 322.36 168.007 cv
322.36 167.299 322.967 166.692 323.675 166.692 cv
328.733 166.692 li
329.441 166.692 330.048 167.299 330.048 168.007 cv
330.048 168.715 329.441 169.322 328.733 169.322 cv
cp
f
328.733 173.064 mo
323.675 173.064 li
322.967 173.064 322.36 172.458 322.36 171.75 cv
322.36 171.042 322.967 170.435 323.675 170.435 cv
328.733 170.435 li
329.441 170.435 330.048 171.042 330.048 171.75 cv
330.048 172.559 329.441 173.064 328.733 173.064 cv
cp
f
173.96 132.5 mo
275.119 132.5 li
275.119 233.659 li
173.96 233.659 li
173.96 132.5 li
cp
1 1 1 rgb
f
208.86 198.051 mo
208.557 198.051 208.253 197.95 208.051 197.748 cv
202.083 192.892 198.744 185.811 198.744 178.123 cv
198.744 164.163 210.074 152.833 224.034 152.833 cv
237.994 152.833 249.324 164.163 249.324 178.123 cv
249.324 185.709 245.884 192.892 240.017 197.748 cv
239.511 198.152 238.702 198.152 238.196 197.545 cv
237.792 197.04 237.792 196.23 238.398 195.724 cv
243.76 191.476 246.795 185.001 246.795 178.123 cv
246.795 165.579 236.578 155.362 224.034 155.362 cv
211.49 155.362 201.273 165.579 201.273 178.123 cv
201.273 185.001 204.308 191.375 209.669 195.724 cv
210.175 196.129 210.276 196.938 209.872 197.545 cv
209.568 197.849 209.265 198.051 208.86 198.051 cv
cp
.192157 .227451 .321569 rgb
f
234.049 172.66 mo
230.71 169.322 li
227.372 172.66 li
224.034 169.322 li
220.696 172.66 li
217.357 169.322 li
214.019 172.66 li
209.063 169.322 li
209.063 196.736 li
209.063 211 li
239.005 211 li
239.005 196.736 li
239.005 169.322 li
234.049 172.66 li
cp
.92549 .941176 .945098 rgb
f
213.918 188.239 mo
221.505 188.239 li
221.505 195.826 li
213.918 195.826 li
213.918 188.239 li
cp
.917647 .52549 .52549 rgb
f
213.918 178.123 mo
234.15 178.123 li
234.15 184.496 li
213.918 184.496 li
213.918 178.123 li
cp
.341176 .376471 .435294 rgb
f
198.744 205.941 mo
201.273 205.941 li
201.273 208.47 li
198.744 208.47 li
198.744 205.941 li
cp
f
198.744 200.883 mo
201.273 200.883 li
201.273 203.413 li
198.744 203.413 li
198.744 200.883 li
cp
f
198.744 195.826 mo
201.273 195.826 li
201.273 198.354 li
198.744 198.354 li
198.744 195.826 li
cp
f
196.215 208.47 mo
198.744 208.47 li
198.744 211 li
196.215 211 li
196.215 208.47 li
cp
f
196.215 203.413 mo
198.744 203.413 li
198.744 205.941 li
196.215 205.941 li
196.215 203.413 li
cp
f
196.215 198.354 mo
198.744 198.354 li
198.744 200.883 li
196.215 200.883 li
196.215 198.354 li
cp
f
234.15 189.554 mo
226.563 189.554 li
225.855 189.554 225.248 188.947 225.248 188.239 cv
225.248 187.53 225.855 186.923 226.563 186.923 cv
234.15 186.923 li
234.858 186.923 235.465 187.53 235.465 188.239 cv
235.465 188.947 234.858 189.554 234.15 189.554 cv
cp
.686275 .72549 .823529 rgb
f
234.15 193.296 mo
226.563 193.296 li
225.855 193.296 225.248 192.689 225.248 191.981 cv
225.248 191.273 225.855 190.667 226.563 190.667 cv
234.15 190.667 li
234.858 190.667 235.465 191.273 235.465 191.981 cv
235.465 192.689 234.858 193.296 234.15 193.296 cv
cp
f
234.15 197.141 mo
226.563 197.141 li
225.855 197.141 225.248 196.534 225.248 195.826 cv
225.248 195.117 225.855 194.51 226.563 194.51 cv
234.15 194.51 li
234.858 194.51 235.465 195.117 235.465 195.826 cv
235.465 196.534 234.858 197.141 234.15 197.141 cv
cp
f
234.15 200.883 mo
213.918 200.883 li
213.21 200.883 212.603 200.276 212.603 199.568 cv
212.603 198.86 213.21 198.253 213.918 198.253 cv
234.15 198.253 li
234.858 198.253 235.465 198.86 235.465 199.568 cv
235.465 200.377 234.858 200.883 234.15 200.883 cv
cp
f
234.15 204.728 mo
213.918 204.728 li
213.21 204.728 212.603 204.121 212.603 203.413 cv
212.603 202.704 213.21 202.097 213.918 202.097 cv
234.15 202.097 li
234.858 202.097 235.465 202.704 235.465 203.413 cv
235.465 204.121 234.858 204.728 234.15 204.728 cv
cp
f
234.15 208.47 mo
213.918 208.47 li
213.21 208.47 212.603 207.863 212.603 207.155 cv
212.603 206.447 213.21 205.84 213.918 205.84 cv
234.15 205.84 li
234.858 205.84 235.465 206.447 235.465 207.155 cv
235.465 207.964 234.858 208.47 234.15 208.47 cv
cp
f
250.639 212.314 mo
244.266 212.314 li
243.558 212.314 242.951 211.708 242.951 211 cv
242.951 210.291 243.558 209.684 244.266 209.684 cv
250.639 209.684 li
251.347 209.684 251.954 210.291 251.954 211 cv
251.853 211.708 251.246 212.314 250.639 212.314 cv
cp
.341176 .376471 .435294 rgb
f
250.639 208.47 mo
244.266 208.47 li
243.558 208.47 242.951 207.863 242.951 207.155 cv
242.951 206.447 243.558 205.84 244.266 205.84 cv
250.639 205.84 li
251.347 205.84 251.954 206.447 251.954 207.155 cv
251.853 207.964 251.246 208.47 250.639 208.47 cv
cp
f
250.639 204.728 mo
244.266 204.728 li
243.558 204.728 242.951 204.121 242.951 203.413 cv
242.951 202.704 243.558 202.097 244.266 202.097 cv
250.639 202.097 li
251.347 202.097 251.954 202.704 251.954 203.413 cv
251.853 204.121 251.246 204.728 250.639 204.728 cv
cp
f
250.639 200.883 mo
244.266 200.883 li
243.558 200.883 242.951 200.276 242.951 199.568 cv
242.951 198.86 243.558 198.253 244.266 198.253 cv
250.639 198.253 li
251.347 198.253 251.954 198.86 251.954 199.568 cv
251.853 200.377 251.246 200.883 250.639 200.883 cv
cp
f
46.5 132.5 mo
147.659 132.5 li
147.659 233.659 li
46.5 233.659 li
46.5 132.5 li
cp
1 1 1 rgb
f
123.179 183.484 mo
123.179 204.525 li
123.179 207.459 120.852 209.785 117.918 209.785 cv
115.592 209.785 li
115.592 192.184 li
115.592 178.224 li
117.918 178.224 li
120.75 178.224 123.179 180.55 123.179 183.484 cv
cp
.341176 .376471 .435294 rgb
f
76.3418 178.224 mo
76.3418 179.438 76.3418 208.268 76.3418 209.887 cv
115.592 209.887 li
115.592 208.268 115.592 179.438 115.592 178.224 cv
76.3418 178.224 li
cp
.843137 .870588 .929412 rgb
f
76.3418 178.224 mo
115.592 178.224 li
115.592 192.184 li
76.3418 192.184 li
76.3418 178.224 li
cp
.686275 .72549 .823529 rgb
f
111.748 156.778 mo
113.872 156.778 115.592 158.498 115.592 160.622 cv
115.592 162.747 113.872 164.466 111.748 164.466 cv
109.623 164.466 107.903 162.747 107.903 160.622 cv
108.004 158.396 109.623 156.778 111.748 156.778 cv
cp
.192157 .227451 .321569 rgb
f
108.004 199.771 mo
110.534 199.771 li
110.534 202.3 li
108.004 202.3 li
108.004 199.771 li
cp
f
108.004 195.927 mo
110.534 195.927 li
110.534 198.456 li
108.004 198.456 li
108.004 195.927 li
cp
f
104.161 203.514 mo
106.689 203.514 li
106.689 206.042 li
104.161 206.042 li
104.161 203.514 li
cp
f
104.161 199.771 mo
106.689 199.771 li
106.689 202.3 li
104.161 202.3 li
104.161 199.771 li
cp
f
104.161 195.927 mo
106.689 195.927 li
106.689 198.456 li
104.161 198.456 li
104.161 195.927 li
cp
f
101.227 155.261 mo
97.4839 155.261 94.5503 158.295 94.5503 161.937 cv
94.5503 164.163 95.562 166.085 97.1807 167.299 cv
97.1807 167.299 li
98.2935 168.108 99.7095 168.614 101.227 168.614 cv
104.97 168.614 107.903 165.579 107.903 161.937 cv
107.903 158.295 104.97 155.261 101.227 155.261 cv
cp
.52549 .862745 .992157 rgb
f
102.643 163.758 mo
102.947 164.972 li
102.744 165.073 102.542 165.174 102.239 165.174 cv
101.935 165.275 101.733 165.275 101.429 165.275 cv
101.227 165.275 101.025 165.275 100.923 165.174 cv
100.721 165.174 100.62 165.073 100.519 164.972 cv
100.417 164.871 100.316 164.77 100.215 164.567 cv
100.114 164.365 100.114 164.163 100.114 163.96 cv
100.114 161.432 li
99.5073 161.432 li
99.5073 160.319 li
100.114 160.319 li
100.114 158.801 li
101.632 158.801 li
101.632 160.319 li
102.643 160.319 li
102.643 161.432 li
101.632 161.432 li
101.632 163.455 li
101.632 163.657 101.632 163.758 101.733 163.758 cv
101.834 163.758 101.935 163.859 102.036 163.859 cv
102.137 163.859 102.239 163.859 102.34 163.758 cv
102.441 163.859 102.542 163.758 102.643 163.758 cv
cp
1 1 1 rgb
f
100.417 203.514 mo
102.947 203.514 li
102.947 206.042 li
100.417 206.042 li
100.417 203.514 li
cp
.192157 .227451 .321569 rgb
f
100.417 199.771 mo
102.947 199.771 li
102.947 202.3 li
100.417 202.3 li
100.417 199.771 li
cp
f
100.417 195.927 mo
102.947 195.927 li
102.947 198.456 li
100.417 198.456 li
100.417 195.927 li
cp
f
97.1807 167.4 mo
97.1807 167.4 li
96.0679 166.59 94.6519 166.085 93.1343 166.085 cv
89.3916 166.085 86.458 169.12 86.458 172.761 cv
86.458 174.987 87.5703 177.01 89.29 178.224 cv
90.4028 179.033 91.7178 179.539 93.2354 179.539 cv
94.6519 179.539 96.0679 179.033 97.1807 178.224 cv
98.9004 177.01 100.013 174.987 100.013 172.761 cv
99.9121 170.536 98.7993 168.614 97.1807 167.4 cv
cp
.207843 .596078 .858824 rgb
f
96.5737 203.514 mo
99.1025 203.514 li
99.1025 206.042 li
96.5737 206.042 li
96.5737 203.514 li
cp
.192157 .227451 .321569 rgb
f
96.5737 199.771 mo
99.1025 199.771 li
99.1025 202.3 li
96.5737 202.3 li
96.5737 199.771 li
cp
f
96.5737 195.927 mo
99.1025 195.927 li
99.1025 198.456 li
96.5737 198.456 li
96.5737 195.927 li
cp
f
92.8306 203.514 mo
95.3599 203.514 li
95.3599 206.042 li
92.8306 206.042 li
92.8306 203.514 li
cp
f
92.8306 199.771 mo
95.3599 199.771 li
95.3599 202.3 li
92.8306 202.3 li
92.8306 199.771 li
cp
f
92.8306 195.927 mo
95.3599 195.927 li
95.3599 198.456 li
92.8306 198.456 li
92.8306 195.927 li
cp
f
94.9551 169.625 mo
94.6519 170.738 li
94.5503 170.738 94.4492 170.637 94.3481 170.637 cv
94.2471 170.637 94.146 170.637 94.0449 170.637 cv
93.6401 170.637 93.5391 170.839 93.5391 171.345 cv
93.5391 171.75 li
94.6519 171.75 li
94.6519 172.862 li
93.5391 172.862 li
93.5391 176.201 li
92.0215 176.201 li
92.0215 172.862 li
91.4146 172.862 li
91.4146 171.75 li
92.0215 171.75 li
92.0215 171.345 li
92.0215 171.042 92.0215 170.738 92.1226 170.536 cv
92.2236 170.333 92.3252 170.03 92.4263 169.929 cv
92.5273 169.727 92.7295 169.625 92.9321 169.524 cv
93.1343 169.423 93.3364 169.423 93.6401 169.423 cv
94.0449 169.322 94.5503 169.423 94.9551 169.625 cv
cp
1 1 1 rgb
f
88.9868 203.514 mo
91.5156 203.514 li
91.5156 206.042 li
88.9868 206.042 li
88.9868 203.514 li
cp
.192157 .227451 .321569 rgb
f
88.9868 199.771 mo
91.5156 199.771 li
91.5156 202.3 li
88.9868 202.3 li
88.9868 199.771 li
cp
f
88.9868 195.927 mo
91.5156 195.927 li
91.5156 198.456 li
88.9868 198.456 li
88.9868 195.927 li
cp
f
85.2437 203.514 mo
87.7729 203.514 li
87.7729 206.042 li
85.2437 206.042 li
85.2437 203.514 li
cp
f
85.2437 199.771 mo
87.7729 199.771 li
87.7729 202.3 li
85.2437 202.3 li
85.2437 199.771 li
cp
f
85.2437 195.927 mo
87.7729 195.927 li
87.7729 198.456 li
85.2437 198.456 li
85.2437 195.927 li
cp
f
81.3999 199.771 mo
83.9287 199.771 li
83.9287 202.3 li
81.3999 202.3 li
81.3999 199.771 li
cp
f
81.3999 195.927 mo
83.9287 195.927 li
83.9287 198.456 li
81.3999 198.456 li
81.3999 195.927 li
cp
f
76.3418 192.184 mo
76.3418 209.887 li
74.0151 209.887 li
71.0815 209.887 68.7549 207.56 68.7549 204.626 cv
68.7549 183.484 li
68.7549 180.55 71.0815 178.224 74.0151 178.224 cv
76.3418 178.224 li
76.3418 192.184 li
cp
.341176 .376471 .435294 rgb
f
119.334 195.927 mo
118.626 195.927 118.02 195.32 118.02 194.612 cv
118.02 192.184 li
118.02 191.476 118.626 190.869 119.334 190.869 cv
120.042 190.869 120.649 191.476 120.649 192.184 cv
120.649 194.713 li
120.649 195.32 120.042 195.927 119.334 195.927 cv
cp
.254902 .290196 .337255 rgb
f
72.5991 195.927 mo
71.8911 195.927 71.2837 195.32 71.2837 194.612 cv
71.2837 192.184 li
71.2837 191.476 71.8911 190.869 72.5991 190.869 cv
73.3071 190.869 73.813 191.476 73.813 192.184 cv
73.813 194.713 li
73.813 195.32 73.2061 195.927 72.5991 195.927 cv
cp
f
124.393 174.481 mo
109.219 174.481 li
108.51 174.481 107.903 173.874 107.903 173.166 cv
107.903 172.458 108.51 171.851 109.219 171.851 cv
124.393 171.851 li
125.101 171.851 125.708 172.458 125.708 173.166 cv
125.708 173.874 125.101 174.481 124.393 174.481 cv
cp
.843137 .870588 .929412 rgb
f
124.393 170.637 mo
113.063 170.637 li
112.354 170.637 111.748 170.03 111.748 169.322 cv
111.748 168.614 112.354 168.007 113.063 168.007 cv
124.393 168.007 li
125.101 168.007 125.708 168.614 125.708 169.322 cv
125.708 170.03 125.101 170.637 124.393 170.637 cv
cp
f
82.7148 174.481 mo
68.7549 174.481 li
68.0469 174.481 67.4399 173.874 67.4399 173.166 cv
67.4399 172.458 68.0469 171.851 68.7549 171.851 cv
82.7148 171.851 li
83.4229 171.851 84.0298 172.458 84.0298 173.166 cv
83.9287 173.874 83.3218 174.481 82.7148 174.481 cv
cp
f
81.3999 170.637 mo
68.7549 170.637 li
68.0469 170.637 67.4399 170.03 67.4399 169.322 cv
67.4399 168.614 68.0469 168.007 68.7549 168.007 cv
81.3999 168.007 li
82.1079 168.007 82.7148 168.614 82.7148 169.322 cv
82.7148 170.03 82.1079 170.637 81.3999 170.637 cv
cp
f
76.3418 166.894 mo
68.7549 166.894 li
68.0469 166.894 67.4399 166.287 67.4399 165.579 cv
67.4399 164.871 68.0469 164.264 68.7549 164.264 cv
76.3418 164.264 li
77.0498 164.264 77.6572 164.871 77.6572 165.579 cv
77.6572 166.287 77.0498 166.894 76.3418 166.894 cv
cp
f
75.1279 163.05 mo
68.7549 163.05 li
68.0469 163.05 67.4399 162.443 67.4399 161.735 cv
67.4399 161.027 68.0469 160.42 68.7549 160.42 cv
75.1279 160.42 li
75.8359 160.42 76.4429 161.027 76.4429 161.735 cv
76.3418 162.443 75.7349 163.05 75.1279 163.05 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Flat_8-Template_275203276654.eps)
%%CreationDate: 12/9/2022 8:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7<+3o5/.X;MF3*g1COHpa1Tm=EXrBSnFC>8.65ZDZjL-e=/Jmen03MIfY>B3a0H/q.e\kItLs`b!-3
%5Ph.QDh%QEbHJYUp!^DMpFkr`SrS!goA8e=Q[bf;5QC)2roh+GouktEh);>.]alqOpZYdnYEEDtSG;I<Wup32roX*mIeWQdlgMQ7
%Gl.0gGMiAYmbp)X^Ua6"QbSj$]Y+-V?@VqHgOHb\qXr$5s%CX_nn7?J(LMUhqSh35DdImBfC'4Wb83;:DnhLBU]^Oao's\k]b/Yq
%?@W!ggmdqqk(!$H5CIjlUe#e/m-fH"qU])&p\h^jhgb=mS,`$!B_pf9\p"%QfAF<l5=fG%\4^l?9`B;2m.ETWr8Hu1opU*:Q2L7N
%5JBK$s7u)d^4kW0T%2phM8s%[r^nsLIf)=es6XEZs+Psc]5h!G3e.+[cZ"lF%Jk'GS,>;$$0fh@+Scmn&o[8X?GH=0l^-MDjql8/
%\=]VQr>bhclfaBUI[YWnrTJOKpHIkJPCLXRYeTXfr;*&#HMoM3\GNJ5?[hhISUJ[/n%ShP=9">/ZZ3)D;X3)^rB@,>mI.gfiTo+a
%rq;hb^6c=,='YSbro3=3YJ6C$h>P"]qB`oGl!a+3]uAmAI.usYhoeQ=qt1Kp*5B"Qa'jJpb9,U=q9.[.`o,$`Oh^bdof%Blp:p-X
%IpQa7_)n-HApG-i0"!1tp*e0MSiepGDgZ!Z*ds_0^W%,c?@OO/o<7#!p$8fqq8LZY5BOW8,4EA1#DV]>^AI3=4aKW4S,.X0I/!7)
%s-Nb8HN8=3hgb\&)h1:*J+<"EVg37:s2D0\(XKklo&8sTI%]rto;TraDe*m9rV"k:fDU>OP:h=Zet.eO0E1OESFG&fkkObqr_ibS
%^\I,uIulnol+=DhI/@R6r8ZPX5Ps,t0AlcHlb!2jqUP=YhoR8Go'W^\iIB"25JI"4kNLaZ]R0HHqN0U^k5OIDhu<07kYRlBh<R0$
%X.7A*o"Y3\s8A>VAHIcBfc@$`q)A?OqWkWJSiRA'bAY,-qsQ2qIJYais7Ots^NoYCNdll!s88pIQG:(s=13J5ZB+9OL=*L$P'@Vo
%gg&jJ1cYHuUFu61qgT7Gqtcd8^PgtAkKV8Pn70'-eSj=B_qVB0qX.("Ga?:_5P"6VJ,Sf)^\UE<oA'r7rR9T[]RB\MIM(;Lrj4o\
%]C5E_IlA1#`p^Nir:/Z_k795\rq`[&^O,eD5CN4iIJpqDmr>$3SGQ0YkS<"OqlY2B;dA\Z)?6;2j+HRkQX>U?qnTT<X_iO[0/((i
%ohV;gro)\VG@/&_*HMgbpE.0H7[E&G?iBKEpTO>cHMci/(iso9qPT\;6B%3`:+^\)m0d&>c3qG6J,\2hL3!%\RraKPIJ<<UY@R%r
%`SJl>p7#u,^6)FSf-ZZGooQ5e?S8Bd]6jD9kF__OkF__AT7;%B^O4P+*F_MY:QC4j77sPTQ:>'BBmN=ro8u\K\`]6Mk%FL83D(a&
%FBR@jQA>%D*];JO>93CYkF^;&oiZ_"Ng<mdXc9dCe+Tjb4n[TGDgh9.TCdp<X?Z/,`\Go_UQ.8/(h8OQj6:e*cc5R%bV\o*X(%At
%j_/_Z3L:^]k0s,[T?ZQj`I+qNQ'U4Z.]]_lUT]5\CTSt)4I+qmNb<ApQfH'JT</pq`=mOL-V9=L8)[<j1`i4.i%aV$EVP#Zp%\G@
%q7dG`4L=)Dj`ob)e)PJEpE-#Wp,"upb'T3GJYQK]l1$7f+*EMQ+4B2)r\je!L\1B3Xk1T5dc3j*qtT1^4as?Ks04FR&tMogX7Xag
%cU=rV.An)Qj_9%,?ANL@U0UqD152@]L\s9L-qX&(2%:cK70`QDdkXAa9S]3:/Q6#`e>/f%RGOf7r?jA)+54'pSGL5_Nq`j-;X6F[
%^%:ahB<$;Hq`sn?cotr5C7rp>EkE5BW/71*8n]F5NnVSHOm"26PgE%K>Vf59*RmlbTi=O!/Hn<!a0\56P9*HKq!3?aj-^q6j*9Mf
%FkRFrm;e#Cb,;#IkGTI^g7s;S;0qRN4N9l5F!&ijr&p,6gCNQ=GI7-nO,r`!U]6N!5Oj7's60!^BU#Eh;4^^YW227\J3TF'P/:CJ
%6@7gJfINBdAB4m[7942+/`h]MPAGEc'RfNpg>nnjWRN<UXA@OXC6K;,jL8h;f.!_"VJ2<n^Jh2C?5X%.R!*aqd4EUhh!13-?_CiM
%7E_X$&PXJgASW4aD\(I#Sp>K>Sj,97D:FTWBUoZJTDX9#7K^c"pc+9*]C]#Adc59AlbDHSm98scFo7rRJ#aVD)W_Y3pKMu<G%;YJ
%8#=8VWQipZH:"1"<mm+@[AIiBVVRP3,5>Wn9Z(GhE3P`WFkf@::"_Y8Y*oiDP?UfAR>GAdlY1Cf4G`t.,4)3Wq@48TL,eh]1[;T*
%Np*_W.M4WCcfBVB91+">4U3Ptkd`:mD@b67nD+T>[77>/#Lq$$&(+d^]2Vk2Q=:)n;=m*'6I[li;-[W+SG-se$HtW;n@kKn[j>Mc
%51fM0cCWM<)nPl!\(9s25I#n3hm<%scej47*5D.X&,.5soMIj8O<-Wdh*_4p6[J[o[f;J9FH,kN`J\@^T#tM%?F1O17=+smq(qj=
%9.!#i.@?^?GkOgcaHB!)5HE-$ZfC#`_m>,r1<cZg;]j.LHMTrtbCbbU7Gk\7%prkc*`&BNBRVE8d1gB,ak/8PU)pW25*J"t6tXW,
%\^P*.04G/+@N.Fr=nYfGLF!_SO;V/3-6eJ5jrp&2F.&k#`?&/;/Vd$e-FQMYRjF%]/=>TU^E5GaT?)t`1@r+k!)X]0$*n5tUWEUq
%4nPh4e\eBX7&DUaq@F*fs!flu(<r#r!?ED6RQRka2hWJ2Go+[FZ+:.NV,jVUfp+&]-l/4!4fHCFY7]J]F;PL56(G;9$WM+2_$hA]
%;nQdP2b!bi35jB@4K*Gp$QdW>4L;r'QA8UJe[S1.j.L,\q.KW_*_/:4olQGAEVj+sL\-E&4WY^0`<VFd^\)guX2hQ-4ruoMO<-Wd
%h$:f"ml@2aO)Fh:WQ.5:PWriG5A69GBTu<Eiu^,#+#M+^1s-msb,=Qf)Pu<hd2,U9IK%o>qL?WehiIfthi%8Yj>msY=hWEE$NAF`
%'LFQEC]$[`g77t%s2]EO5gC;h!jVF;Vs<a8GB0UsWg12^mLR]^EJYX>\*W?Caa\N2hY5ObV>9N9r1"pY[+t-@EF88TQZI'Ek3"Qd
%kfsVd^gE]tgUI@+%X^C1+FaAeOF\c--Tls]%smU;a#-?Wn@K0;X\Ouu59>9g,C7eZd.P02QFV:*Ab)FaG?HAq./a#@OO[6p:K]D`
%M<(Gj(,]J`iu#8G.0A`ONFl&'ae5"j!hWY8kZJnODi]CW4o#6#B[C[DNK;`uM6D"!C6pRpD;L&]GiI?`D'NtCb.E-I(OD1Hnj74A
%,PW]pCr^tcZcNl:\KXg,jV]!QE@bRTiI8X%=!^oD<*_:P"5m1dcV[mOr3W?,+?<V27t/cKhP\:U8UjPDdT8L1HBt_POO?=TOTufu
%8A,og=ACB@46OQ(V]5I1:U[>'kU6/4n)MHha>2YR+[mrQf9:fnUm<CU4TXsQ>?-q_"<VNIm(:-)qB_OG5c6U)H,-28;i5OdmH;ZB
%IZ>^=2%f=c8V"\9s&0=&(P_h=M!NEPc=TO12\Z#o:$6C`1X'Etb0U)^cT/$L]Gf%iC3X*Z9cEe.Y`pI;e@KfR#P/m+"9ic?!p"=(
%]nf?C4bMXudJ9b4AX_n1E`l@2[+oN!,s,P_CV'/2l\+oN1HJ>Cr3kg$0h!k^:>tF7RW,=sFVDL_go>L(VnMh>frrE]]s-S#?8J`t
%cC8'3Y._%%=%n'C3d'u+kV-VrOY?e!0$:dA=&Ig%*5s5u<TX(4>jjt]!9^RW05q<X%Mj$di<1bND,!Kj(l%&F4d44#A3;afPt>4C
%EU`%oVMnW9No\eeQ7=,l-kTj?FBN7nCg"pI),k.&--[-A1utp5&CgK6!.fb6!Mn!j;eH(;/:rp(%"8>p5fTo$%t3io>b`ol+Mfi=
%$Q(;-;uRleJ6*a^&>b=pK2:>(-I7dp1Z7d3>7@04BZ5"CDlj"A4D`[$#BfF9[XE\7h6><@V"FVYdN6^r0&WQ+\e#:UTcbR&B)<W6
%Ut'DVq?E)H[l=IM2Ip;b1EHX+:G=H83s4QG$QRJ+b"O14@/Xc"<Y2'aji]DNgmB(1?rFKg&WHANF/F=8'>-m$,)'6gVHlm0,,pH1
%B\XU15Wen]i(jK)2!ji5'kH.'+UmTt,=q#I"$)S(S&V*q7[SqhR:crK4CR_j0Z6j,6:hTB4D3%#ko]?]8)E(@OR=kG1@;\q/D>=H
%39l/bk"KLYhF2:X1>_U5)L?2UQW3k(Gl2Z3WbL5R+aR"S[%>^!FY%H,hQ6XMUnRLf\El*7p\][BomFMp.d)0VA:9pBrM-,14l'U^
%rhPYkn'g.R+V%MiUP_t.o<`V(`QrPrWR&5q9:bPIa!2DZ;tTcF>_M"@Sq@cL=u3+R.4;=9,\N1T7<`P'Y?pMMR.n#_EgLRT(W@j'
%8GujaEp!P^4jj<*]77Zsrh)KgN:lXgUVHh)q=jn'l+`$=GkW"uJ,_`n].ZD3=hd?,^QNegpBK&9f=UqOMqILacd,n0=*X*4`@YHp
%acgr+5Ps^\MG.Bkqp!qM1lCrR:Z&nb)E#G+'#)^:ShH\LI.b88IBnn,MdNb4o"X+ArseuUT)1bNTY3J:L]/eE&@m\iMQ_IK8b<pU
%CR(=+C/c(TnftD='j+81Ji.,Lh#6&%mHaTq91nqKl2@cA-91'SI8TR*=Ve``[dLc/D0KG?UJeMU[371GaU=KaIcb\&g3jT6H2!3Z
%c#tbO=M3`H;[DR2EaM70hUQa%b,UAmh^?gMGI?4ao#uR>\j'_J]dr[*_=!(b0@0N]`='siLAb<?/rtA,k/kmfotCja4*TmC\R(Wg
%*2:ePf%YeL[(5U^4@qQ5SL7=_7cR7Xr"R\Eqma]#Iokb%0ZS2enpT8C+ID>Rf4ENka`:J[4cm-s=l)qXIGWLr?c;lQM\`.G$MLgS
%]f;THDE[`KR"C&.i5YM??dl$!WQDW7DdfR:qisdg_^3`9]I2rB3h*O7rbgiS65Qru`*'M5Mu.e2:G(ObQ[(6Q.c"*MPHq3F5jj8I
%c&@624&K=4a+m7(*i0qPinI!/o',\%j`cDJ_1uCsi<gob]N0;aITCR.kos1DNA&&II^e&!j_"J'Q#nZDA2n^W]qThZS3N2Gl<`TL
%a\jIDWa&"SmW(>``-.^\^Eg#ODKMt!PHRkbhMUpC]b>rj=7N/`UFlX$NBP!deo^Ngj`so;H)N"k?rm*]o!r9LE&c&1Pf;FlSD9NG
%?[;<")Co,_agdj'h3?BX%'LiWO5kRt*IrI-Htb;o1RG6fDkZ)0b15SHO&ki-UKPXdr_[>(1]@06!?doLM=]jRQ!oF"*J_qWg*L5;
%c]S#ENqdH98T%:>e(mRW;O%d-HSL(Y/4R6DALt$FB%E$%4?d(VblrIPigt<LJ!T<^k2H$oQ\7:A?YC/$">\3X>btGUR@"I>RcSsU
%5Wis^*28OaI*iMX#F&)PA?tQ6<Nj%sEe.NBc?!^6cXIgLm>fVCQ(`0.SdFaG^TD232]a!q4PtV[s7Eeq^OQ--X<iAih%tS2;ASJO
%\)72IMmr`-[Dg9Ts3$0nq;pp\?bcO<op9&^\6X4mQm)Is^OKVlP0q_S!KD/Vk#no[AFp@W:KVm1=cM4^/!"pKZ5ED[;lA8=9bp]%
%VJ7?%94@IT?D5G6Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkB`a-[9+?!\\>89&1be+F@EBM4Rmfn_Xde
%5\n8IlFhm>%-tIMFK)2^:4RTS$*C`**ke%5qEXsYGqC.iaRXdKo=VV+`I`YI9;4>F\37"H&f)hi55*Hs6e83mG8n3;,)]QF&d#\r
%IcHZMXd^Z?jo$/[MrS9eBia[aMH52PdEg(4h+ifr6!28a/"@V7I`nH+e:o_td-)T07V[?,Lb=-ERPk;TXLNYk9qLtgc)+)JF'BD&
%,X,e!'n(5GT>aC4lPO,6jptUcAGs:q+3CqU+j+'fKfcFhctZ.Z4]]X(AOW2r@`hq_Z<Z3;=Z+,'Z1G21aAX]g+L4i!E@mCYCPg.Y
%cDLLT<KY3(P!s#clmnGo8"7*\LhaNEY`+<!j2A7Y+HZ:q9GPr+8#^s/8?4l'SLg"]s6t&WMU`kCn#S4ADI:QH[0UgXMm?U"*HD[/
%Y#7A?eo5oi<XZq_L/A^tR.0\6pT&PlA*2T<li[$:],):9`U#FJb1@\DQUO+@n$r(>2&FnjG#,`<hfX$_o5M160ASeep(M,S"?TT6
%>$*Cd3nX?>Bp3H^hc_)Z5"unVne!5R20@*)YoEho@U`unO>o+]f@e-Ug)[`>Y%Qq.FPJ)nI^_BO"2)`hf[hp1S`dHsc2>SVURUF.
%]gd)%oJM)LBq/`#1`4RV6_Za:<PnFEMV[AUM><T.m>E^C4&"Ylb9Ril,bGINH==\C!0M7+Pq4Dr@J#I0I@i7AA6SUm-;9k!`Ut2P
%I3\5(?oiQ`R8-`OV>/bP!c`q>.tL:2!pX&j6\:k$c!Tj#Z)Qm$$6n1aQ3-PgblQ*5WZq-i`n92ne^QqBOt8u3`i1*s)]N0@/lE)7
%#auQ<=OM7B0iGJK:R+@o9c4AOU"ndD[;q8&@s!li,I15=;dE)i;Et70,D;,.\_If[%Is.6SPAs_oMh68KnEQ0eIENi54X-$=IE]A
%*XVa;b?*OW:9Q)gnuY=SE]DM'P94hb9Pc[Bh%+iOa#Yf[*!Z20ks.("/4HN3,lT+(_l,?FP:Ys.MA%+iH611@Pl.OemSOtbJgE`a
%1jN`>/?D5-i-)Ik?J=A&E6'A2C:Ii^`@s12iB&mO:aJC:T1#ZR5]fY.YZ.\,VhS@26;OMn6=AEP1IE_^UQfkEl:Xh)0(\:K;3TY3
%EHfea*[!MUIFA'L`;eB>KFr[?CmI:LoP@>X/f&q@D#"/G)%<QO,X]7)q_TJ9A=MuSe="OBKTEICC(`V9gh5%.kD$8l=")YU=\,\s
%%<:00F;BpVqlH^i+;9P!8/u5&^i-ARH->\u'Dr*JmQ/nU:Z?C/$qhCiR];akdB$.B_U23dm!>j_n>We9G_*CF*G'St\=O"CgA>_U
%1V[qukk=h$LUHlOJmIk6&!:4N>>TfgjZKsT#GW"ON#p_G<=Cj,j0#X==LYS6Y)$qo$R-M+@p:X0O/(9AC^[p.(jmCZJhlH\4LULl
%1D(XJM/?+^67I4s9-4*S=Q5-R6'1\4BIi2EAtXjdTRXp'8.jRMC(rnp)VUot(&KdR>?Fqee^XqB7>k)X$VIhX\aMXlZ(`#/:)_kZ
%=f0*J7^aEY;ma&)[_d:YfG:@?/9>*,>L:Wsbd:ka1:("N(sbNQQt`kG>U*H.+kqSBB7VX3$SmgMa0ju@WJjNBi`].m"h7#0CIoVE
%o]8q%dI$M@`\j\@p,_d_*n+:LZq#eVAGs:D^'(gA)V7Lld)$0D($b<?\b\I09@nDhOpc?"Gs!V!fG.>!L/02NQp^W]cV!\d`su`j
%V*/Fo&^F!)l]Ai6Z`p7Q2"kmS>Zk*H\SI7=4dp&F(HEA!"('4uSeY.a6t'cQ-?cbMW`!HgW*SCc=Oo7o6>r)"5=NfBHZ?kJ^9j^P
%L5LFB:_d'D`3\HpFu+U`n*'K(Y3K99W-XG9D5i5_TJqcG)'5[gMcH:c[BAI>kZjbu:<a9^nF"=#kO?oc=qk^qA9"Vt]lQ.`mODE9
%D+?fL:\XmgB\&4M,_uNCPD[KaKl8SQRHf_H7^bZ"Hl60c1.fLt1f\<4eqT5`1LgDr*Ct4lM\h!ZkI"b2;m,$+6<9IE@p##uEMY"^
%-;k<4ZZ)e!_N?q+.0Pq^J@Rmf/&_FB3!=;+qSNJPkll6f!)h%)UZ4OLknBo#k]5%36&[etPJA5YMYk9dmHrmB-B"N]I]&5/&`_62
%.i&OJU+?Y[`M,K6.B".mAr7gG94C/9p6N/*hB:5mV4S]=c"NV.F,=6]U?X'HQ;rmhi0*Ul``6;RVu#dL_u4-&fqW3Y#n<`P8&/a)
%IFXfD+FG7\qT&c5@EF$3GTm]2DJMBjHBnl%'j`F_SEd)h,\JAs%bg9b3[>c!B;.L+85le_)T/]/Y/<9JJac.IW/?FBq*92PI:-$"
%64c2>[hfoJXCA(-S#6Cog*M^K8.(6N+X<\fSJ=Ps6,nD%:.tH"eJ!j]m(B"8%CnT6VRJk4VRj5J'/lH"PCmtrjC7<=@*rf?2*FM%
%'qE46+%/`(b-`H[QtWo&/+Nfd4a=IpOW]>U.]ZW7AI'emMOP,<748P95*b::_.5*K&m7Q@2-PmuU881doU5jP4<]:V.q?AAV@[\9
%W1b.n<Cj$%iAj&&R#_:^FmW_5W)tdDI//Y9@:hQ5VO]@#WHdRH(F$l2a-#NmdGZ(Umt;k$V=]*YALK(&(j[6"MO\,#E&M9!NML!;
%g.Y0F]$<s(%b#4I&2>T%Wh)/&j'(QHh`[R0+3kk#$0U!2)tB0C4Kk;;7+?mN'`#D'>k<`KL6``?FVYV%l8=>&m4]Kcf[^o[A]C5"
%WZepM&Pikr&YcVdB73Q&1!;Xoo(Hs!M$Wor-q;W;-Wu[(g:9?_>]Yb6RB9DcSjHnQ]OhiI\Jso&h%q'%PY[W&_)7dnS&NWB:Ua-q
%+2e:T-#)9o'uVGIQt-)jkD6m2",b(m5c>6C^:[tNbD_$O+rZW-E+Usb."c\$)DRu].q1Z98T]d2`AI#H'(a/$Ag;Le,R`iU5io?V
%V.jZr2(7ZJ<Epk4<Rrd/<DG[ai^F.*@d/42W/oc8!f%4n\osSZn<5irb(RJ?-:_$[,q]9jKHOgj&p&A0AsK-`)N&^,E$]^8>B66u
%d2'oXk_^IQ<DaPme^IN(o#a0Hmr#W+#Dg)84mDF>M`s_X)X/RYM/1NXd:N:3T!_%RiBY7/dah!K-q#G#o%&b-o2O%,6a,^X$V>'q
%5o/JFK?R9G\[`(?e9+<bWU&Be;pq)?U7<N@S4;0Ij0Q18Z5O,.dHkp[?djf%f,80Xn=OW:`5kj;^,+EHd!AkU"P53uDW_>kh:ItF
%7B`+q0$"G<6t\3^);OhA]&9%$5.-:RLq[c!oI%gp6_fLlQoAnrLtrN"^neT9(ab4*>hi/S(\&Md\=rECdM,.7DC>Q,$sd2pd"j*]
%)]E-NG;'UQ+$G[c)[bd!3'"#Fe5[CDmY1N+M\GBmn3IXRn&S4XDolg,=oH>H74<"Pgg2grpZG<8j#?h+864>=ajg^R@eUfZ'uDX4
%h\,tQV2ZEAP[UIfo;Q/e)LpP5L#h5'T#BbMm`sUsgfM0KU&4P,_g&KNm.ORHS/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9
%,bjsj\t0hW%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@
%hiGVG"99o%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD
%/2;e(Gf0*lI%2FO;"/")0W9bf']#Pf=`oB*f$HB'N%jcfh167n;3mQeAA7&^&)*+M//>*7[QcMK0]Q'@/d[COnT8d>q%-Z(-Bk;I
%;emj:[P)mJj%qtqgiMg>UlKJI;i,phOB"^L&0Z?foYbo)$uqLE*d2%JU@QU,IaP12#9&onW88#=a3J2_MNbkJF]?D6Dm>'H0S1-n
%Q<,k=3))>6i<:R5nPU'OFD<4^BU\>D=\.nZG%uhk_1[#F=kD6R<V'q44l'F$N(8]LDP-SLZm9^6XMZbfQ=Pf&(80hrP<fA#@cF.[
%d-ct].2e)Kfb+$K&>s8/K%cKFT*VWbktLUU[ljt[FjR%;3N4_CpM&R@\0IU$iAau&1[3QJ%EEMUjO.g_S164&?*)+e,DN5J(F%m=
%c/+Q'>hW6>(6@I@.arjfUSEVnF"/RnF'`\M@:1$B*;+cmhllrF000Vj<0r9d(`0GH/[:<YC7,nAoZl%@/V@NlrPB;r7pYh*J18la
%F*JRVk`ZW\ja]S\e6nN2VJ98iKl#3V9"*g#3$e[-EN1LUOmX+L4L2YahE7acgsaIp\!JhU$53JtC.A5e];/93N'G+GecBd$heKYl
%HDh5X`\>^s>TXLSa%?R='NdO]'#Sp3DT&g\c)Q>\?Di7[MVoit&H)ecZ0<EMHpG71L-nnVVp7V,c9]?"DQ(';GGi^tO[>2H^8ack
%e@<2*(lo6!h*1-R="(tR=ZK.U/no6A`(OU?!9Go,LIajD\toKM8mm]O%*"DDX)r))F#^X%B-FO\`i1:+(1W9JOS2,uF^NZFG,jHV
%DA\EGS_ZKqkrm*8=q0f(plttr^:B-+O:Pq9%ZeroUN5%X`--eV'Z!(3_epi;,,4S=YE8NJmF2]bA7Ej53s//eUjYu7D$n4"c!0Rj
%nr=bSk'dJi!)Ffq!.uqr2a3'K/80_fMD;,f&6e9'dcO]PQC(iB!!U2c(DG08>P$-8'"b07)WGQ[iU.+W$D^/b<DE&,DqJq\)TF"(
%B9/\XoH">PeQFV3iWjbK0>n.a_3TkN4>7CZ%arE#5.V^aD94<;A-cI#2$Co$=j?.\,_".F.84OYP22P)<^9=P787/=%(eH:[3*OQ
%HM!Rh=j/#HhH3XBTt>p7Z)[KPg.&ngZ0Dd$/Vh.eqGCk##94![O$Q\dNe@XP]ckT9;"uT=6X)A6Y5r;NCfOS:NePLmdql+<iR+s<
%81,8lSjA^slUJe@0ESm6i:,+'A_k5^nT;]_"We]c3P3f.)g]hfAY=&@K3m@K&eC>-W$c-NF"Zjqg]gM:,d65+@pM&O1s#Qn1RIl:
%_lY]ae@-<DagIMNh%t3*=HRoR]4!ghpN?A/+-$>K&puf_FZD^k>HCYc5b_bIa^A9kYoXO9N#8l!eBl#"]<;du2=8U!bJN-C4-%%0
%`MN;ta#SU^mk,Nu"%6e2:O5o_#U:QkM:d@B&]^/i=Nmsl,SXaGM)I3AQn/>c**u=&HmM5^H.:\H%Ei2Le`\J.Ia(\m.RnLj+Lg/E
%``HI/X1H6n6G9pC(:PAk4aPDG0Er-iCeQD^cS#G(2!,X_oSN[nT2q>MZ]Y>K9rBI?Y8L^h&dfh?#%/[XOn5^o#`4s==uNV>GsMGs
%G)OSVA>P1hAR_ZD=Op>15eBtN)lk!0QJH/!'Fu>\Y9&PP"Q2Yo$Jgl*5Xq7^@^1QGbd<9C%fja?gd)VbKZ#Dh.j!=P]d=j4K26<?
%LH!*613'lQEnY:61:'hC4a?>o+@pq<YLa7,8"p#FY8omnUQ"&Qm/UCTP;D7,"+Ugl(D=+XoO1?E]6XJ5DeCDs#6:T.E6!kAn0+`T
%UNuq+%>\TN['K6'\G:QEap5/FnLbjnho?mSa493k-Bt:<\Ija4#8W="l1<<SWIhnh0jk:`hp&5Ti7([rm#lO(LtuR"^46sAkGj5t
%fVs=<]4'KEFE[PS-a1?Pog$":'Et@oq%%Jp"^jAFRrab"F61U],@6+@jmEO(45inR<Kl(7LA=%k[(:cdB-Ffl28jK]d9/TKmB`D@
%K*1HpPX^X7qA,!4,M^>EqI0WOgkJu#R/W2#dN\C72tZZkh:\+H<F>P51i]ggc0jr&a4jZQM(+"c]kA7Di13#Wf&'mpJ!+Pu.nIt/
%#m)=fo`Ti.Mh6O27P6.t![AL-"bDeoeD1ia(I\LYOc-5k^rSrI_%e12FTm>YMo((]aE_@5'd=Hj"TaaDidu^%75"':Oc/4MJB10-
%5sXLSRgVV:P)8]G;.L4T\Yq8C,NPTC+:rS*cG2/T;.spba@2dg@-"uI+<Y]%BlHAZ7B(h?jLj%dn8VcOE5fkC\O"$k]\XdXEF*X(
%"iko16"&`cjrg=:<ci9a`^SED!9:`Y+E2<tGAtC;7GU8fihGpMVr>>]i/3Hag4Opp7I`[ZihH;-$B'i5K7Lp0rB]B$*m`+*jD>@%
%J&TBt`!0c\]RR`QU+YA]Mi7F_h9\e'G%Y$"7];lr#%`_<!q$h*^#J&2p.c(W&\PG?c[&k=R-V?Ci_ErMZT7m>nSV2KE.Pts.D]n6
%`<N6#6?:)ES\t_EgO0srD-uiBMi/O4<cRHQdHr`=aD9UW:B^M^H$Fig`/%J'2:*7abs3#&"aak@,W1F4(jm@V%7Po7Ra.IX`3-\H
%'.T;n#%`;Lb\Vs]<R4^`l1VdKIK]-+dBfDkacH#LDu$s-.[I)sTE/Wnk!klJD@(ld!Ve(WgelR/VKi`9M"m?U((HIYG]mF;Z&??e
%=J:S0Q3s6FCG5nFq5PdH;uQ-Y>s(CEFo.utGPWPS<obinU&KsPS8QSh0`l*#*!%6*b;k+JF<T@Hm\rk'Q#h\FBZS'0ek_iRM-\Z]
%^5LU:\EMb:8B-5oMQ=>,Y3NL*)u:fGc>K9IUoio=gB9#@k0BG81#B4pm8e#BqZ;_#@Ynl(>@J*FXO#,RL9`'ZC:cP8M-W!)^C\^d
%pnDteYh_EI;h*P9IV[g(oM!i\m8JJ6R<d!M7YasLI7<[)Df3M/I_hFBka'?IRZ&YjT\L$>;O?bGeT3o5"Jqif9=2$efMs09'OkWA
%MnU[aLecQ$6"gA42fEkc.dcHn1!_NFa*7WoW_QhdQG-P)kaNMG+Eg1Hc'9G;^@;1KJ^-K>GaFd"GUT@5g._eT7pfJ0(QGN(M8`=b
%1m#@'7!d*kY\T]gPrm<8F3uZ_+SrZtd[t?;+r#YL\+gMB=nUjB9<54.a?n-OdN.,*W?)n!Z2M*Y'3fIt25=%#,h)2#"a70?rDb<\
%]J>?4r=#ecfiK-U_YL^>i?]q%f@J?ELH?l6Zhi8]<C)cA%&pnJUMIlXA@[tZ&R7.%9Foe[VL"Ria3b=*MQ+mSFqb"iSt5%B$l/!,
%kQmAeXjcr:&/eukX_?iUmN(+IhbQ*Y\LPMFJbR$gesdU5m)*^07i@^E3'Ki5"%5`N>S:5CQVu*<nIekaG8:h'C1oU@%gBY=3h'`<
%m&SDF(!>e7U1$/NFE[P_T?%)EIAaVi0V!;JU9ed@@K^k9cA(4Xo:aPmg?I983@6G<'tM&i:<a9nlCE6AM-n]V$utFih!Mfm1b/*=
%9paM3IW)i,4B?QIqk-0=R1.X"NUnM$mU]%t+Z,9m-;$%n"bEi@AIH^</GD=#90:?[Ej8#>+gGg;;e]\dD$]Thc9QNAk38TeYVY>%
%U7L1kFER2B5Ks1>]]ZNaG*t/fbRUmu:\,St2]@V($;%$q=6Wpucc0g1f"'bU36A-Q(YCV*`5;iD5p39',SKXolfjQbM%?<S[N!6b
%7q]:AqT0L^!1/So*4#Y;buHfq2kjO7OsO%,K?@TSh\%_9Wfo/,6SZs'&p<Ij,^.RkqP[M&*SL%-B-Labe\8%V?MXQbmHoZ%"M:k,
%#Mj=f;qB.jN\\+?R,eB2ZrlgCj1KqcX-f%[o9RE\#1-&(ncfH'5p'Duh@l/)ZYbZq@!JeiM"e^:.5q6FR1s*mjGiU4W@&PJ"5_kM
%QpJCZ);U:(\;p%>i,/[6_-S28DIc;X-o]Lj"MkTREKSP7(sT@;h2O,e)d'RSmbl-0<&[HJF5Nqa%e'RklP$:F&@#7pW-^)^g,(ac
%S&RAHP@mEFU<.3#^+nH#O@uI%/aZ+T:g`MmeI=K77VLRCh([r*foYVlTD_X>F!:l"7<JWQDlL_*6,q"Wl6pK`fU%_<d+ea!M8$E?
%a:1mh`88lWS3b\0C>eF6Ol<Y@p!,PbI9YPZDVR:!oR+Cu"8(V=.es:`%>dH]i?/8>HaYG4Ha)/""C>;S3I$MbX\DihI"Ts=JgMAi
%,,*^E`&IN2UE+bf5h[uu(ZOs./YE>2!O#A;Fc4NtB@3t-fuFO;qq*$-i1hZc35]-:GVur9D#!66I@]b#*)[54XPRlWf9IV8>6o-G
%Cf"?QY,h59!F6XHK7]u(2Sdm/5EOFgSF+@I*3F+SosC3.S2J=:;:5otH;'h!L9ehR3Ff/4;;?($etQJS8n.t)&Y8?<_lMt)%sbn,
%7)f6Qfc48AiTI`9b?0-Kl_0H@Aa21JH:n\L:&67\Tc>BgL&D9ONNl[M8NK[%OOEQ0$dPF-/N*%hm`=nFEOdlaHJarYpMF,!O.L5R
%59b?S[2TDEQ9+5tdIIr%)H@1*(-O6]lU^=MSsDgST=YEG'ft_[#<R9&JVU\W?")3*:G1E]D;@=#[f+j4-.aO6nsbQe6-bj;<%*cZ
%/tdS5r<=p7TNdk_<`mY7?hJkQE'Z*pW?IeF++li!`Qga5\0Z&-:Z@r#52(I#cu#Uhh12<1e6pOGU$2uADCk?@6(ug[5^<M2;/_2b
%.c".o-j41Uns12eH$<edkC($"2L=8H2iAXLNc(J-5<?YSNI7sC>]`LWat,>\'f$C>g)3bk_=[UB'eRS2k&HP.2g_nF^,cB5JF]!E
%O?#?WW,l53N/*F_nj`.#hTP<(I40GtoR/&(^]cC%`=?oV3H(p(SIH^;XOc%:lNT&"r-93+9.*iQf*Q^?JdZTRUlKDQNZ80>f=O9o
%pO0Sshn++*p`Y,*BB;XGHcV1/s'.JeHN)0UG5gYHZW#4VIa;=d,,>n!p$k,E\R>WEW?C:b;_](\s6$[lO<Kd:hd(m$MVeBQpKT>O
%HiA[XmdJIt?+a6`mGQlDdiaB?74F'Kk6>=m!ei5-]3IXV]rW^DWY^h`V?FaY*3?t[%OnJ$OH"lZ'7tlE!G%YLRm_)iQmr@e:F/%?
%_E8\j4KS8`L+<_>@&#VR176r0\sgJRc.js;?>F,tXapFcJ:dktW@SV`+_-mS2.A84_>l7tdUh/o&D\T5dgdRPiY;LA2Z#U%$c,oq
%RY$%o2gm.;U0pOo)OQ,>pX:Q[I6jeiESX@r)$<^8;Md1nL1n(FGC;GR)AY4u?U0^9OsXm@FHN-%W.5S&E#!*f%+!qePFbqB;G#n]
%Bur?C%`XZ,Vm]0nR'CFRAj`s[dBHdPPd4VjqqCuVK$53'!8%OWC%3j/3+/3=8cqQO'q?Y"gI!AcTY1[jW35cgCmU/+Q;gd:EsKW!
%^@<TPW:/P#emR0G:DQ>DD8CcSPSREf:*ICWUnIVO%QdGR>'@Oh1A2m%0WRdF8s!Q8VcJQL'"3Fq(2,"B0aP:LAQNF\'dPe%G-'NU
%4h5C$SMfOD%(._u^5g/!,Q\I>CorkY<e`J$=8r9hUh71Yh0@EZMsTXU!]G!3rQo+N-)d:JTCtP26_U!GfN'<rkS>X8R]:,%e&YXU
%8Ii@SnK"-sdj>\R4mj-E1HVkHOYT4ss4.lOb45a-\2`2V#\bD"JknT?4/bi.#P(b`p.f\G(';P)p*%__i^YTKgFMQk*8i>M83AC4
%MdSZ3o@G$@BWt,qG(MCW_/"g,])^_MZf^IBK0m)>BAY-aOY<AR=aS1#-,`Ibm1-WNr*:OoMrZ8tK(@.j?7:tBi3cc7D,pR&AI6<t
%r#:f%TRbK.OVP&C_H`S+kHG;V1+']CGb:4Pk6`rEb_hso<WYSp,W8E%Uuf!Nd*nuPLtR)F6/3j&#BJ#OLO_PoC/L#M:``fId\sLq
%;%+]\L:9aCj2=@M[+H(7Jj!CJU)jg!_;_c"NSmW/_fF;5i":j]lPG0b0[4V$Uk=3V>!rT2E8ZLilm76)n)QaY]_iYq@crTA>#4<U
%jlc-)?hlXBFe.L:KJ/3Ygm\]iKW@Sk,X18@A#WO=:RC^"!u3*75a/E_&YRI*i["s68O108_>X]hrGY$bYVk0D9:H2TQYOm!*C4X.
%N<GXi8OJJGcqHp(19F@`HW-Zr-sm*5'k.g90X0dkd'S^8AlPm'Aqh4LL)p>dJc.*<0n<A.ClbgLi3m#*r_/t:6k"+:1J"j2bM)WS
%1J4*Yo/q"BLB3YV"kX62C]&b*#q85r]dmM;c5Xk.]Nth&3H)mK5a*YsgZ``$#\tSUZ"Z&fO9`WSN<(2&.eqM$/tQ19Q_lLV-K#\X
%%$gRi6YrtDW;4:nC]L;YdLdWfBsU7[e1*h.-%8H=jCTYg6p-oe.cZ@qeKMZg+J]1gl-=46;E:.?LbM1%`Q$ejIWCj9MBF+2Ka>g,
%#]t.mcM"5VjXKe^XJgHs9AC.BKm4]iSkWOmNYIWk%gK&D6Rm+S==dkK:!ul4^A7&*=[UULU!?#8pLKI+ckp&F=t[hUUSnn:"i,g)
%6Fj?37b(DJ9IM7tJ@km.9q]ha>%k&eR5EH>)]`,>.r#bZSH8f>6)d8q$3Jed->;bE=Fa>mi"?gLW=erYHY\1)?#>.7cui=(/,'8U
%k$0a\4oo3cCs^4$f`i$[/Fr_\(H'J^PZ'0)nH;gtU_R[-Q0o;2Q2t(o5^bSC+`OZRJT=Fb-H5Gl;S/t!Pq[$]c4`[sct6Hcb3`ik
%7`q"(-DHQ*T_Q)r7%noc2>+q%CbfLa:VX046#,/cKje"jOCer,@Cp+;=<PVdQB"s_OD&O9h.:#6(%J#a/_gEq<=%f"_kt9u_.cDY
%l(\^tgN/MP`kjRfgp'2F.W#7;@]?q<g9XLJZsqN@*n*r2<Cg_?$7BU-&T`;ZPGPau(i0*O5Oh$)8]p7(LTN\LTJ@]5BCXRMnn6)"
%!Y2tLf;sH(pD*nP[b6Fr/s$*4h;EX:ab.hAAl3]G>:NAW\j!X'TCCt]I43'h*jE'1P#Anl_ol,L4Q6M?H&!0cdAJAs:rHm6m8cE8
%;cm$dd\*2rJ>pb>O:I">VAA&UcnGb5;KQ#<0n)dLk8aPO@VoT8#6H$Y'dKmS)$qYX3;!#?^En6k?2]gfQ0fG,`S#Au4ME1:``5@A
%),?b2BP+tgfNjBdC-6\L]/5sAY9m1pTi*_9Te$m.(f_2j"p7oI6(ABUDD`\3<^%,Y$8_ldrRu(!,[FC3Q5q91(e=m0X,n+DZ_=as
%Et!b]8HgZF8"nQp`]fH*HF;HSL&`1`nDtqWa((Mc">bT+8PQQ]!p@R*+T2o;%-DlBDX7HW%51K6V3m`CW&8ChFD0h>T]o(P=ef"Q
%%X$Ubl7u.A%78?70IL8:5VSb`1A,gsb!V$s%\2o`RPd_PLp`p]DCFhimhtR,liBq((rl&<nUX8C/H_NOc5*(K2jW9]:3.S8a2`dX
%ctZ$)Po=K8gIALe<meu.*!QO:=loeRj:[/L-:N:amYnHF9'6q\+o1MB=B5Ec`b?*P"YpRMC8su*b0dKS02*Pi2IUGil/8DrRm_:"
%DA,@A\CECbXa5ca)3/EXrX?HQYtnl\*1aL3*ZqWipa19T!4C-,#e(-C%g,L5,UAFgfN%9a;!:u[`B\!#G08eH/460QT]!OKCk.(B
%2Oc.VfgXH0BMMeAEt24QU,h&iWY6Z&_p$]La=VDg$E3j,Pkks>9`K8Jo`RnZ"ZIL#+f^1CYg_Z)d)4N*e\f%=[c!@$mB8#i9'O[u
%aTK=;-\<]V\)WY*Ok=4m.30ni@rA5E>X+tl%A#6(j'f<>`9([O\25X>JTqadB%?Loe<1jeKX27T$'<.AmhTQPL^*<mg$.IiWHDBL
%7;9S[1[_'Q,"FaEc4a3J.HeSd#,!n+019Du'X\Ar^):4Cs'ogYQ\'1"<X%0#j`.b*a21F%pbFGUWLT.3#mGt;3*_aFEL6ra5W?ka
%[k,h"US&kM7QATFrF'Is(.[pY%2`4Kl_bbYfS;"a<bKK*4H[a,>J?jr&*8Xe+(K<@C(!j(28u8fX+YHQ;Of:plWk'n&Yl,5g!V8e
%i\R%%1]])0>#a@4'QMa%*/(Wsn32!Ah:UP]F=O5ZPV''%pbO[N0=4?Bi?d!-F3de%]!1a;Wg.1,U=7mLf$/7@Kq&hq"TDi+Gt29c
%G7\Gr@mcic+<nb;-!_?K?5k/LL"$ut$oL>Deg*<W,Y.4k=HS^2om/):q=PY):X-IZ'e8s*_XJK!a,J[gg[]kP>Z`(0Q6;iG#oA:>
%_BP[L>,G<OK(X0Kc3R+?!EhDiq!:G'<$ftag6GtXWeP4t4pB+W$oL@C9tE[opO0oH.nF1NrkP>-\8cEl::4nKUIDY8=`k3]?r,BR
%n7Gb`O*650KXV?h$RMLcp8DHI`_K6C@]<MX=PQqR,>1a:\FDk;EN/HLgbtF2Z03_##=^&u\RZ0TnN'u7W*1&R#%_]U=]#:!RqZ8)
%W2r0g>%n$E%:Z!529JW;pjO\QdBG4@[9IJT,IViY[M7Ch\.'^*q;YFXM%I-"Z;Pea*MH"J1pt8^K=#U0L`klup.U7iRHKlqB8?#"
%%_&UR5`3tp<G:7dji56U]#-3I,%\h'-B**PM#bPJJ!IV-?XA$%9r#S))^5K8'eN!p9rMX?]Np0rB0MkgPo#fB27?E,#ss5()eC9h
%f;@"@!`Srd=WW?bb?[#ml43s1:cZRM$1jn/>d+dnYh?i5(GRAS0ug3oe/D-6p*N]=kk0`O!TL%/=lGiYAJq#+U5QL`g=W!\Pu\,?
%lq^lG@^p3k9\Xf[c,FgT1m;l<_mj'Y\fj@,6n:#<n=6eUTii'2!"b$QO5-/VAia%d'sF9)c$ko;cr63ZqCl+Zd5m#)jXi0`[psXr
%S!#CY!tfc':Y$`1XU/TJh=lfKI2LWG.TWLMd1'U16tR<:A^thk^'>2^&a69pOTA3*cAQ7+#P4Cu.R-dKrd5iY-G@TBB\3WD)\n-d
%HTl2T-^Ok.X[;P$$,^NT$l6(EFl9\](;2X65b<Qoqr(4)PVVK`AWOc(:]aZehlH=VXCDYRUsn+f9t0!)o?[_1Nau:EO@9;>5mrJP
%&(t@Yp>/ngUX@qGk_pdRW4`rTaALGn0dY2rb6*?V6sll4*Vp]]5utuMB>Z4XfQ7Kp[WFP<hF/e*)?FQ&i3oX#oo)t&2IXYA1\Q;D
%Yk&]V2HZ>C'%:;C/4)?f!Ddg+I6+-B7uVQBG2Z]o&4J1q(+maD?7g1D0ULb15^IC!T:p6.!epGk+N&fGkAiVAL</;u#J0TDP*$&:
%>`H?kOFATYA]0Y&#T0hd5ci,"ZWN\Aed/!Hpa&CMC^)_=]>oM?0cSl/0a,u9$-"P"+T>W%1'L#cV,MSW6`cLMT\9X_]G!SeMkNOC
%ZVb^&r&Jihj?^egV-uJu&.7eGnc5ed%Eq#))Jo^jlp:L2b_:L?1REp(?-IT%Lq>o5_>XjW6WU'%s7'9]X!1_uH.`d90nmCf+IgQ.
%"J(_nqd@OuU83"f(KpB?4C,6*0/+JY`Xe3?'eK\cFPr$q54c'BR-3sHs(,43UPt('&BK65"HdO-c3`F]^.[p`HU"/s!XYYm7;#B(
%,LupQ@"^Kg?r9B;a<C!cD+i>F6c&,HbaZsuHp>+fl^8pLf0h;\fh12[@BNZj.u;j'9&r^`X>MlXC$&dO!KRJ^pS0f[j_Xqe<"^Y7
%YQ2Mn:tJ7Dl^mAiB#S:I6kZ>8\oS>C'*G.,Be3i@T/Hgg\cX9;WL^ULR*pr"Th0tOd:H9Zln`e5Q3;pUN&4'>Lf>)Mp"1-A3==-s
%ebs)-Q,nu#!d5*)IL(beDe@p9ZY3lD3f5FTT-lMY&Cj^eT83s;DL-IAQR`>60DdRm@j+RTarp\AcJd^Q2tLSYjQDUh!3(B7ITk.S
%UfJ..28kjcPidZ]5J+VG0J<N#abg'7e7(pi_JBe.S!cOD##Lgl%Tf-NM?,B+__TfK*u=$lpAKgB.&;+"m8/`iE`![?mEff+&i1TA
%o5OmV=&7?21L<&HL?>QP;gV&XU">93!'(u<(Vgk*=sfN:`kr\>6K'Cp')QP.OR;K!NC[ac:h-fR&Jr59N7SY.9E=)Ui'K$P#7VTE
%#j;W-^g:MZd!W<S>pN3DJ6#2(ap$FjY-%Zn<JYdIB[m`XQN/@D7B//\=kCs-6HC#T@C,kpq,!3b@o3R9GgY0=kW#3dl.%GF,bZFs
%;IcsUj:t&k9@#]=ZtEB`!2Rj3JP%V9lgN509Ff!2OB/XaLdi*ZU4QZV4h(R0>V(aMb]aM"bm`lu&Y$KC)U3K;;.sSm7]0HK[-k.m
%+<_Skh/?F33*RSJ/C!U&_+K$C`2_b.,JLujX.o`B"NrO@8\1@FGZo"M]+h"2i+''%=J.'>YBD>0^1;rI;6Vl:IKUDgaT<<Ri'$F5
%!XQjOGlre!dhIdpkB/hDH"+_F;qH%2_?*9gV*@D*Ze&.4YU`47.2K<XSt*$\MQG:R2p9MVB/^HR!;V-_MRf^(N&+:?9O:`4T%kmB
%>>-on?.&pDQF1hZG976mbA10uP8,ZY[-qkU+bf1]`?Jaa&AWVB@Zu-+W6rAelWHCdH,d:W[u2-%@r$b8OZJ7e:"m9U7D:p$ECXg_
%(l#SaS%qu('I^L5Xk=WX`.>b)9kE(Ta!Ie5-rFGE@iYSRc->c;MVGtS2PD(Vju'XW7q-i\AbnXl[+XlD9It_@N1$t_)qGgO%&)ep
%g?+S>`#bo`S[b"HA(DegQ=l^G&lIUCUa'0DaT4OodcFs%DOcTW[T*OLS4&;CR>.KX\Xslb!qP6F2$OI9L1`ji`F<c\Xa?kZiaBR2
%C9A8K*Lk[q4?#npUMWA]2P.pbJA2J[iaaI`'-A\?#_ZbG6t,FljQRN!0Mi2t(o!V)mAHF]j@$OU2_%jS5]Ab2pRiZrNc/XNhA>6D
%61^gD,WFEY^aknh7HbH@9C>+g7Ou?F]"9[%&=ZNa,2tqB<AqW<P3>Dml_.F^Z0Hmd4'Tj#9K^<B+5&gg@2?PK]N[R=R`]`&*Tms8
%mu4j'Srm@<VH=s(nChkbZu8JFL=X9dfm*:XlBF%-g'q3(:gmh>%`QWti/F;e/J:qa5\I8iVTd<n96?El?nlAPq<tJ*dQdm)`KbgN
%k,k?XMWT>lXi'EM,)a]a.YSmn&eZc:.^1=tE>-nrOKrX!#Q2G0\$C)5#p;cE"k4D(bYt$o82g*8(g0a34%=d0RNp46]G';`qq91m
%KhYFMNCAP>&-IK'6&c&?3V;B8MC!tk&aeafC;X]p\?GPQ8J\4Hi/k7`HSX:3YflE3W!3FP+UE334fm7HaGconKWmUm1W_%"P\Z2;
%QqYL6kQSoZ(k?.=PRN+CRt3MH9k0A0e`o0c$Kr?`5K+%WG\p_"7QNI<V/RX$VOeu'A/sQ%Xig&hFk]eo#]'MNPr\:0kr`F'%RYIf
%$fBqienWfhRYIJgho;lFpU8Hd,70mN[4qeV`K;\<pA;Oh5TpU'eHu2*'cQcp]ipXQ&fuZ2(@QTaC/rkI'`K:-LJNOV(a,sA--Un"
%_O:Mm,sb5d'[D>q$4q->:aU]@3sV6+h-FgQ4'CIV$@JkRBAt.O\:]M*gk<-b^m0L<b&2X`E>ioMpqiEYV!)?GBJQ4iG-jR1"o5YL
%`YZon<9B'c"t:t;QRM;HenA1X&G,L,-fEp6-l?T6=,I.#-8F2ak)n#`YmQJfcTVkT*oLL_qDna\(=PAW0I9=WAB2\d6P;t$_A+D,
%L%5gEh8uC#eB3;M*'3Q\iOI]%19!tM9ZYLR9IOH1!<bZ2NbCC;m8@a9$Y`O-T&pfN`'_=u#g]O61":aiYcQkIiY<T,7e]XSY8>C-
%5l`ip(sjsJ)lNcVoeAaM7(jaP7A=Sg!S0M4E8oXD9hbr1`M#5a!5Zh+G_35O84)SHJG'Yj/CWkIafs@k^%be43o.qfHW"q:c759d
%!PNcYMUWiUqL"lJYH/a_n7H=(]ssRA\*dQhbD&G'6PnlS>o#%gd]9cj"h&rK+ps2!,g306UR0i8cKA:.aZ8[;FCng-[m^ZqB-R"V
%bBF,6S^QH+af,QlY)Sh,%)aLr6]p$gfUG\Xk4'P?!/l:<D)t/Wkj_?C?>*!L*G0#c?e-fbWB9#]<n\9:8rPM&9B_>?F#Qh0\54d$
%j'gOe>TXji!s\n)66M(4o)XB?gbXVB<ZMt07mGIGO6V2)^3@Y&R]?QpNB%&9/Kfl24uKBcOo38kS&WAh9oK9-U=M2[_GAHR(fqUa
%YdR<;F'+5ZHp#o--okEqT<hOrY_orEH':)pg'o&-PMcG(VGB,g1#!TO71UXfUo\'XPfm#Y;6Q$Q.2>hL3Pl]H1[Op&;ZZD,PVR=;
%<3%<4-q9e\3$sQtpD>Dq82IY93A`KY=p;!'M,9qKqe4t4!<O^^0=JMN$O/`!'mJa,I3iPkq`3p4A,uPth4OW1qfcCqoBX#\4am1f
%eZ0eKr:97L0@BR'p<:!8JRLi\#(j&bO1]K&AGo(\guoZrWKReq-dn;'rA4S`!B=ONNjoRTB2t^ZaBbqCYpokp\Ld,>]7cq08eDZY
%as]KXar2D4Qcju;RKPL)R3'Xm]GiJo!Mo0\kK=NJfTU0*iRm,&BP*A&K^KZJpXiI]COq4"QWDE*P/D323kW"3m\.W>)+c5I-6^V0
%p<5l?=,;\5U82pk<*Np)dXi3)(tf1u:Q)f]!i,8c1g,q]`@1B9!74*^KRI)+,acMI.8MW`5Y00XqjrFo0&qDmd(3l`Um,gd#k6C7
%45&4sR2/Pu[I)EM0Uq.^X*P[-$]#JGUbs1B^WYP!p2k6\'DG9BqK,0D.Dl8Dcsb;9=OK+aKQsbS;jQoY2P]QZ)Ejkr2([Q38@Ic>
%]8'A+3RC$J*H`:kW!u2Z$nYopV!lLWUT%i-WXms$2aS&2%9#&t9G'LB1YdtmKpuTl$\h_hCQ:<8oWJ7L+/b6GL6N/bb4Lf3<E<\,
%!K\q4Spm2>m):*sr@knk;\@t'1um1u3i(^.4G)3&6H$aF#TcLDbt/i`"bc3o%4p_7o\o/D_d7UE?RAt`k5`@2p-%b];JH1q4[$sk
%:^'Nn0%EVfTuP->Q6'S2;\>O)Vcj5ir.3"XBSFF7-SeM3@N!`)p'<rY6WcL>"$j4)K):Q)LWhJ4icGJ2/NrH1(>HgGTc='(nau&P
%duMmn=I,Jhj=D(fkIo[eQu=[Z&/jY'#m!:"fU\]Vg6&ZCFnHq&P=[BVO?52p!>Z&F=lW=?#V!oINkjS%GR+Wo5V^D8?0(N5@99?F
%'F2Etgf4RO&@6,;>VB0:)P4;t0KfHJk$:u@ePh!3%kNSI$ED;m;lUBU2I#5T?lY_#=622FXMW7uWp[t"M73sO*\mui".2MtJJaRZ
%pXjaD/J^^P<_e6`.0/JR"IUe,H^E:`haK=RRMGFk"u4$e,X=)#\>CmL9p5aK.>hU`S,dWHa!PgM.lP9KiZCV0#S[n7ednTEKDES4
%2g?Cr<0ZfZkTcl+Mgbo%fZ4>A2<5Ul@p3e-I_T/Q_m,8>m*Qd,aHYUQmoa9-Z&e['>DHY80.*m'cSCIt+!)JRrITm9(eT;I0.nSQ
%@OhRP)?s6nZZH82]hhZ!gEhH9qZ\6QcfY;cH=NYF>0*eEb"TA7.eHELC9fW>`[LnG$ki>7m&[L%K=[rk?MDgkkV3@*/L97JMugo#
%!H2>BdTUI*"5d>QN<`QR](.8uB#S'fV<ORV>aH$>LL"=\Cahti9q1<2UM6SFeN8#jKa##uMoE,k&?nK`,fMf$2-J&N3?0=P#Vea8
%4IeV/2nLul$;m>Y6rUtC/69YUaU&'j^^1=jQL;1dOr6AaF`^QqeofLRZq57bP^uC3OoaL4\&sb6=C/*`b.t0$(F>*CUmW//'HUZ$
%4ZnkbUf:-$q@rNW+\#cK--BTM6in!LYD4So8kq+PTu$asRpmhs.?t-p;q-lLRN/]/O1*YE/^?j#O3[u+*jL@53#^a==d<9s")\Oh
%HaCV/'oAU#HBu@G=S#M\C#X"F]bl;#dj3b;6*9+HZ2X"d!gXR?F.9/(gPF=Af"JmV-34*Ce-&,Q9?gnS)<1[rZ6uX3W-)gAG?QN7
%X_R&D_,$W5$U&>0>mFijN36C&BUP\P))CN$E%7"&&:U-I8<ePRl:a56=[Tb"]Q4f-9I+K8O]Q&l,s1!n;W&HiS4q55Uln)96Zi0H
%!7jq`JYRL=,XS<UM((^:WZfrNAXi=,/1=c9bFhSj[[;ct4W?ZldcptB8&7d'bZHo.e46Mu-H39&iups<-fn<+MQ7KQ*=G5tBLI[-
%^<(('AVWaBoJA+?goMG)\rra907oN)U@JP&"@,:s_%6)@fFqk")$Q*If^B(W43#+@,n8naN.Su^eX3e,FZ>TdEroE_^m`9L@A@rJ
%gdt)BX88ii5u>1dq*T]4&PGTj3,190U+p:UbQ\X=I3LDha;Xen=/M8."VHmu$3Lidem/uGi#JimT-*g=5lq/e5,;"[.2NaeNV6B!
%Hi&I^SS9/]aQ!b,<j\d$r!5`_i8qP*)E1$l?lM]Tao9[%1IOOj7`u^KNUm>o,.NQ&i+?pjFf30F`o1>WUH@8NmlI!(,ARc&V#hoE
%Bsrs0U+e-9=ZQ%o2M+SHCP]D"eu0bc_`""/kLeVoKTnR9>4*Hi$/H+m_;,g@o?N[@$(qbh2_@@MQ0qC:@M\2!@CqV@]Ohe(S@42Z
%bSVt9T/DX)Y26T#'R3ed><hnlA,Qn\fofBs&dVDe#g4JUil`X?HtOf)!D%p/V,kM='IJ$kku@.=B=+6RM&h8>U)ZhWWllfN0-19<
%7\,*i'2E$`Bl(;$j7/!Fk+_j@erR[_ZP^D??X4!XjF.T?(Ig,g+g._Fh(dG>2G?5n'CQ:ogPV?a,:8C]^6j8f(4`.]!BTq'KuS=B
%QK"ms4iu`MnY)W$=XINZb,)@Ql7f.DQKkPI8'@l6)Nsdb;f`J&K%\c!Ra%]N8@I84AmR8K!.Z4I$8G!4&c/3%)[K>EQL!&'+I34(
%'RZ0\Bd9uu1[jo@8V^:2PDkWsBr[3.&^b8Z,8t_DiZb,")UZr9*34;q-i'a]DLj!;)"I=e0[l*`d<Ze@_U?DZ/s`Y<FoJgh%fIWs
%6i,'$c8,S34@$^Q0*m[-JKWrgOO>OCDlfEt\McdU&GYo4r&,6!q9#$rHCYd=,ZD8!Fbic?[1GJ-/QRh?6;L7M2-4Ls_?<:,aQ^(/
%rD"mk*'8?K.B52:aH-HIcA%\/!f_`3f[)'ak7&_>^g;E;\@WXR,>TiU>eBG!_Lh'jeK6>PXTE<L]$,p]i5KJ]]4/tbJ;Wh)9g(nl
%Om?:bq\B(3\MO0G#Z$lkN75:>"f`BLEhK&HS9!.eKM`I7'/UXU.1?Q$8S/]91Z2.hWhsTdB:b7o$]]<cXAPEi-<(n-rRP4)EPD_\
%QKRoGckl&8OZb"5fZ&In<m4T*@Thi:S1?lCHtC9b]1!Rp84HB*g`ceL>@]"NO1(@AC^Vj'D)eEVX/1YTb?e.\!]agM>h<DUSb!]%
%%Eb$pPX]*1RND;,H_83P]8a]>AgS/F<-("-_47nG16J@*Cf_dM3Ybgd5W.qGXF*[755\,]WN#JC:9.&^CWuj/F2L'%ft'&qIfdpr
%=rL<]Sp8A^T;IQ*N%8f1fep+YV0Fh0%m(2'gQ^p<(4eh)49Q$pdZ%WZ9^H)nJt/>J=Q;rf2,68B/8KmfQnoR\7dnS*9_>`VO+cAH
%6pN[.3,CqcUa\hd:B4p'hCMVP"D!5nd&s`tHt_r7#^)"i9l<G,X-l3O[WLF>=_MZ[L:n<R\^c[PE;?;,^rR_"ELq!k5r4I76il7I
%U*9S+D:ggngC#DK0HO%:E(;gL5sK-S!Ak8^$/>^4HLtR!\X_HM&@%7(Zns'$`?I,k4>gWKq%M$"!>9PY).HRW@+NMH-7/7ES;F62
%4E)5b:7nspOUKCeRi7HNB'[f_1b+Pg<$$YOKKKY,FG=/@?ia2p`U'jDbTo!:1WQi#k*Y6'0]HPY<CbY(&6RsVYJtD+o"pfSgL(q]
%$'7bo4BudfGroi&]-7=[U]C.o*Y*nUgg%E0g(A#kBfR"NRNR:KMutP<cRR)`>40p*A@:!!5]^FW.)g#@VkSkS!V5R/fTl:QjG(`M
%OYB#^lRJ4I?487qVhl*6IZm0?'uen"T?UhV2@Hfc,YeNp>@G[Ug![BH!])5<BL@a'fec+Y[<&Fa_FPa/kXlcZR[.]p$RQ>H9O%=<
%*oJE%gVX&HJ6(^;](7nBH#H69).nla_,oJq[$e=TL?s6RPd&@;Uk(p.CG2_DUL4Z\0a1o;\*qL-I:@Ocj)9QP4f%3=)'fK$C:PH8
%D@l^O#e8aE>S\!@R`-Wf"!s0*OVQm!5fq__\ZBRjb0%M+k^[F$mQC5"1kBM9hD;`n<#Y'`F'Dm"%7$c3@2%9L-4d/!Xd6bUKW59M
%O7j(G*OuM_@X;K#>@o]["p]T#/M3]cVL!9meQm;c=F7I(C\>]8C8tH8:%f'gl=JQp)#;s`fBS#Sb;$U:[uVjLkjMW5SECb8K^uT_
%ccP7;]&ZNYn"DDL-0\Z2Z)(U&eVA/o+m$nF+u[&Y)%lutqJ)-i.h#@GWrn\FL`k7)Bi`^'M!C?TBTgoe=6&"bA#6Q$E!ho:>,a*k
%W,$3Zh1efGUf@(GN8E#SD:jTthuW`&[VKX!&&aKnV5u>P$:f(e(N(G487ZaGM@#GH3'\Y&)<C03CT$h'8XUq$f(Qgk8J,:1<23G'
%p6]Tl)'(k\4(rkZ.\tBc-2h^GI0S3q$r+_,Zu-'UAYq[CF)GU*>I26r$,`D9=1=?\>:]!tP8e9:l%:hAs-hgDh/HCZAkW,)dNh'2
%I]huXkSMf\9]\*CO="UXQW8Vn)51[/^ic>E/k^8X:77's<&$J)0tDAOP("QJL7aLbm<m%FFQLY2QOL'6l@t+a/NL/YVZp9ZIcG=:
%.iH+&;CladA=f#h0I<LW0iei3B,:MSBp+%]1qlCj3t^@=pg-OTS&*Is*6A2;du62BA/(=RC?#`EeZ`=\K&j8&r5c8_l`S\]f:miV
%.m%c'>0@K<aC'Ut>NX_^e^F(kC1LrVno/4%C'Z+17W,[(??hT`(ff-nUIB@c\R7iq?q>FWR1pNiO^,og7-<o&F)=N[!XD?.@75!6
%.2.BUXXJcTplHrgm=l+]'k=Fd2IpookN5*K#)^#j+_*k\-%f#@A:Q`LPD_n`$qF+h.F(&s9[B$=BolIf2)Yb]T+8b"F!/AA-jI9B
%C-.10C7PACbI29lE$dj4o%r]p5A"2j'2E&[H263[rRbnrN;aY_FE;LFo;C+qmfWY"ABi:9o.`.sd5BO3O%3b4l9]h[//[BJa4NNU
%CTEX?!tTos[0u0fZCO(InouJCCn0u35Ik<pC$KZ_Wm5e#OtK6oFpuP%Nm<@EG]lfF3n5tI1d"oR3l\:'4a@\]"(d4cNUn-rQl%X"
%H&fE\P#^tf)pO)BNo2q[3ba8dj>f+`>e0DF'+]kDD`l'._^,J4Wf%2bZ'k4#+4f!$Fe3*UrkmZtLZ[li#!]F60AGC)=cRW6l_[dc
%`Si;,8D8d[=J^'B))28I_"ZbH4&kBKBT>)hLbLcVA(iq2QCZ<2[.?V*]SrlF=cPe*O`Z<hBoCu)VZ,?43*oakjV5bt9f^&[RK`jU
%o,C&QalW07#[*f%hV!m.,HY4\N<'Pt0Li%$0bY&aQLJ42rs7@B&K<B&rj<HQ`Z.M!=cK\V_M:6p)M:o<2ATb4\1P,6SC+i`]"G/3
%RXl?IcPSbU\?+-s2aoH-aGcSmfpp2%[F)LE1E#43YB-R#7&C+.B]h,<^;lDu6sruYE?R()[R$!r(jF/*3e]9imMJ)'#%L[WpYc7p
%!*.]'ct+kEG4@n+>ckHVfo*[-8'I]i(Fq.I\T/Kf,B7_kibB2i:0ih9TZt#$(Iq7j>g-.TE8F2l>c[E&>^20bWD09B7M*4um]=A]
%\D#?6XMo:c<cQRIgiW`ZBCW)M[tC=XGK(Obb7/#;C-rO91WEmCEAZc)-=Lo#bn)OU`MD?MB$_8O/)tZY@[r[>,sE%a_f=*&/X<@R
%=6eSg?9*gG<[Zp$<(t_s':j,#H=Nj%7QqhIXtr^*CA,iL5uNZaG6Y:2UY*%;]202oEYS]#(l=aL5eDLYr-.*I"s%j>m)1J[En/6f
%nXEP:B5Z^DBlKssk+kFg]J:/@cSI:qSXLUA@Uel@Zt@t#ELIV>>\JtVKa/^#dh4U?UMs7CfWKJp(K+]Z4hV%G0f0:p.7Qmf5;slD
%hMfC_)tNnE+YaUS.%k`Ii`6pZ]W_u8`^sca`;#=Ymqfqh.Y+L'aG=8uOjMXgL]K4u0ZU_[_-tfW21MeN8;U4J.haXFQ\^&L&M^gg
%9>0m-'7:t,b%Z[4"WNtc(pq+Uh%p]50OLD"Lo[AdSUhWZTq'qO!oh';ATI8NP9a*sMUN*rG?X+N5+It&l8eZZep*rg%qcNl?\sPr
%D2rGF_hD7$*43V;f[kL^*C_Y7CHWMMZ9bIl\#-[3%O1[jV&VrS,]=T1!(lAo3oMbH&0t\t&e<+K`CDl(@4[*.V9C=f]g9>?)b+O1
%)k1X\Nl*S0fC5K4q^^2NkjQOD9Z)*D-_B:LlL2SFN5Z1DX3NI/5\JK('=DSYdT<qT%"fuG$V+#%,<qnB^re@DPg\eg0T;OY0nNdM
%KgM873#fHuZLT3[RZt7H&-t0DGuG)(h8f1\/WB$Sb+"o((fc'&D.6rRIGkoaU!j?%N=?_50K<:qZ(FUA;1XVlU:gk=LDlDonb^NY
%lp<'67MQX6%6e2>EYgdq`R=W%Cr5*TJ3i4+_?\n2jWiH/bQ(-nRkSe1U^M0#iIeqTEl05_q+?$mZO-Z%GqO?L:+(FndT@rh[i.TP
%CbI.o@@1Kum0%`@BE!TX)"a#"EAB"P))kNT5p]25B=VF```dhe+;+m6cpZ[=M1hQ[(g+<[$$5G-3B*)i!B+kl#Fn@&/iGQKKh,;P
%c-k_d5)e.?BnR)2.J(\+N/0?#<_ahIPg@a7EsP,P*@"o?KX'NY']U*a0W5ml8`f&$#XaktjU]X2(C&n1AneajIhNWKhc"`$fZ>dg
%<8%WK?mNLP`5tiT9nPoJl<m_3?0dj!S]*1kAe!a-J0tra\aTg8ctS,`C7-j]CG=WQq+XWRGeg+/Cn*9ufEEZnV[UT&\Lkmj0c7dL
%m?eTL;lghmq1=/&aR.+c$rd3eJW24j/E<N`Y$d>&>NPT3GH;!_EMd,W4Sg2?!8NGU$SFQXYkAYBF<P+HU^&`B@/kWu#nEYK"Cn@g
%K5"p<;R^i;2M;[(2NG.#7BgZc13ub"VeTdT5nOP'KMn#)(kP\k9QMljURAF+)B]>"LiJXe5qp:B7.L_:ZG\dgE+8KN)`R]15]!Zt
%rH)f+]c2PFR$*l\%6lOm,W%=PJX,5;Q-Bi@=IsP+&5;Ba@bDHmi_-^"M%^#Uold-V6P)qr;T0P?0`JnQCCgX?+3\t8(kS"i\BN2/
%bU5g6-Q%I2Ve!H_RnYG0.kl("?tR>:7[tWh?\lpK(PZ>YX>E.R%)I0k8"F3I"R?V,3pt3'b]Fj-P0OV4;Hf=J4%1jt)dnWs64o/L
%TF*(aJoOGP[W@12p;p/"Kcufh/OhOe+da2jAD;rD6)<3/f<,Ou$L[2K+IE5u*TI:=O=2X/Kcui-\kK:g6SO+d)J4/I?q(qiqfucZ
%B#7=+Pq`CtI'i6OZ+=j2,r`CJ"G=la!S>I)%&uqjTK>:j[PH<kp!33FX*H_.nH6,Nf^-E;B3A8YP63$H`%UK4^^PR(D2E67j&$)\
%\oInVAb3d<JQGah`F&m><[-'5?=6/GFe^sl"eJ0IhguR[!k>@6;W*skO$2M+L-US7N=o>L-fp'p(kqB]Dek$AN6_N5&;7j;*jdY>
%#_Dg,q<4:ZR%KJHdKtK@>Dhq5Kb&E2dAG:l,8/"lK<YI;GO62!@#0Vo0e-T'E+o009YdGoQ0EE7!_rk(U_HM<)On5.#0SBu4t>CM
%R0f7\NSN75"O)'sFjMQ:"l:$erIkTG;>d-b@Zh(c!lX]#$CCmi&DgC%RKI:bW.6`s1Ik7BC\h\g.hsaURqOaY!bVBCX-.n;:t4Z;
%[Tp=m\Z#`T&'b=eXj=Oj>ek_AX<p&N!E4lK]l='/LQ@P+EreYDm)=Yd(fI7C-5S?>#hCsO0Ep7Jm`Yi.3%"_m7L%'g@A"1%$lCIJ
%!/V(&YX1JD$oVKO_rBfp^aWL!jMD*0.2*ZG"rp01AHP\<9H*<@"q2qt%VGm@!0KT\"/^V'"J+4rU!Uo'Ch1>mID\\&#0^ArTuJ^4
%^lYk1fEm*B\R*Gf6=:.&#(Is&<[mSb7L74u=I<fU^^uU0s$@"8bqFSUE'dqa(Wji,J[qg4#P=Dq=R1XUX)!C(fXlqI]/'Kjk=tI6
%Kb9^9Ddru!,B0[&ctnZVr657kV?Eb1L^'a[<YTi1*#1K]GWipE/sO-Y)qUKQ=:+_R>$<XP7c49"?Pn?."LbDC:B@QLF+IAQ1BO=t
%i(1>1^lTnoNB/:<,dr:F^<qAb3R:D+SG%+@7L@;a\6"Jb!i$T_nBia40V23[18b9;P-$0CUWnE31i=1^$.iYZSML?-7'66*7UWk;
%-&T2d!X#uO`;R[]N%r=$ie5+Hfs[YW6=?)h&]s$c^tbn`PJous9EQ?k<#7mZjJhns"BNXA"+G(]T:>srfgF`gRgrPG-ZZEl6gG?l
%DJ[*L"BN+^!E0?Kc09c+3UthK#7LW7XU?4)1\c"o*ADtQ'luQH(%cY1"30Gah0(hec4=L`UsXm=_eA!ep^W-E<9lLa0[lhs#L+oD
%dqnVJ"q3Y-Gtn^Yn'e:9^`@1QQrbVB#S3]sS_Ag?0ZjJ+#kGX6!-@m$H$N-dgoZ%Rg>F@.`.\9&gKq_A!"@ki6Nb\k4^f"5/08I'
%?S^lKl8!6$gj64)qX669Dodn7GM9q#UqWM4A^/Ykq0+Y);+ICU$nP0OlbCcY^EGDe?b(Xf30!TT*_IDq-N/)0A*<c\L[%""r1/W1
%-[',"`CWPSbD=J$W/L9Gc9oYBL$j0;Sk.0#b8d'B^W?*VEX"9;T#lH'rE<fPrAkar;uIoq/_]/MoEuQ!Q4s5V2j1Mmo/i1\pVQJ_
%%(>:D^VdLaEK4DG`,i[kr,skBSDk@VDmIYp/\^2U6_#$CS[loMI^&tfZE):>gTs3ScLei8PoT/)3/=#d7d^Yi-)P3KjLu``.jM!@
%O^(=)>a^#V8]Imul8?W%ngEVn7C&<5)PcsGk#YkkICVj#.rpp)\#YGJPePs%))$r_]U'Oa^>.7dZh\daeEW=CQZ[3`QH&%@NFp_?
%I%u`9O`.]sU\"6j9@t4=YDpL;KHCJ:JA`8(.\.u7VsfdhVXO`pNR!MB>3^#dJM.>MaNT"jmj/nY.dT![KqFoS9%eQh5q4MR^!ip3
%S\,a]J(A]ZG;&09;9F,qmTg5GQQY^Me&ndUXHM:eT4rX>Aur\=d-8]b3"5ON-fr4u]8V9\.=:$rE<\L90,Z"'mO#@kHQcDYZj+DR
%5[dK(GTBT3-3)3A9.Hs85ts4"J.s53egPmuJq2Q2AM4fZWcY0*Kb7L?YBLc\oG>)F3*IG"E40*0d%RSK;Ap=i1kOOh1]aWYO6^o$
%C/?>/Z#8`jC_u(=?*@BG-0TXuTU'Z1?4'g2IAZ>,?,i?m\mBDT5Tr-pmj$lR+mbMeP-:3<3cHHPpj+AX1t28H20)c=&G._!7iq[d
%@kXT/5fu&r00(lA]e];aW[$OjfS`7t^[HihiDM^F0B-a%1A4&eWuG`PJO@F`$?4`WU4us5L3a.E.Lh1Ip1hsW[ik$Kockp]c\/uj
%>90#/;a=;`jLd;B1+^:1qO+WJlq*u=ja]0=K5qCI$3l+?9\FcY1=i'Km-^+OjND5*.,'p!K\-BMj-766SB3brAZr@jPUg;uiJp;W
%(hKl`['^O2^%diaPV/36W)J7/lAWET[3?'g<WOl.=lmNP$TOF!L"#%90amC,FM3W,<S]!Be+GJRdWP"pV0"\5lW:"MV4_N/j/E`K
%db9>VQQ768l?'_P?Ck6,?3UJA&\#%<d^-$V6Xf($"'FW;4H]:\_IM>PZXaEE=`?<jWg=GG\R(\M;+X41?R+hV;p"[%Vfu8Ag4cC?
%_P6^mK_,d*Z?;>e@<:HqdL1$M1/;-u4-eaR)1"g).+*aAG;S>40Rhk5[!('RGnI\4+oRh!(RoP4jZ5D??aa+;EV"@3k?Y$3626,#
%PV_oSN>"?+0+"@B]@-7j*uQ?FPa*%j@'hpC0DF<Ej3#KuX^K]FJ$Fo'<Y>BJp#5&l^g@q(\^P[Q6-.5aopgYq(OTMm$nl_8Ya2WP
%(=RHZB!UWqOGpYPZ/gUs(N/H`6;&5oFU!IOEt.mRqu&k"$ht+P[@N)>HRRtg1q]KA"jlDK_M_Spg?V5FgR:$@%UK-Ti+l[JGTh_f
%i"WhSn2+_%V.0jgO&>-.1Ak01)r_"5XX_cnF;!o>0(cb(X=&LJ0nQn=n+=4?XMHrE@G_6H#Hm.K]5>Qba'90P'h!Z71\WMTQqC,e
%gMHP&k$?b61#fpg+9V(mGb,N9,/6,r:_=ZT7<-/5&dOK0X?H]]ZZ)!s:10U(.'Wq)f7e6hR>9jf]?@X%ElMB-Q:\`5-JSb7Q3Eo#
%\'(M?[=W94#])p)c>:*"eIJb<A[-<Sg;S!F:,)&j,60g]R<C`6mmOc9Foo:oKkD3uN:^V>Ap5-;U9j2=M]Z:sG*.g36/jV8.suOT
%XtjbRE@';7PT8'TrCWkKbr&%8)+01=HQh)([d",Q3ls"?Iq*CBa):Hb.F&pF].`3sKn,CPcEYQ5"b\oh*4mnLHt[3%%+[N7Cc@A[
%9,Fc^a"Ha9megK5]1e#i<H=,U8+taKLOEWlh.7Q$>Uah.l",Eu1[H=6lZF0=Mm3%*A),lOS43!.A)2h_JO&O6NEm@`0oL)rf4>Pl
%RcU?r>u$IHKXi"e4&PD!5_d8!&l!;"mCfC-392"1q5#mP/e*(m$Ck4b:)!6U:9;WHU")5BG$IKF=\`_E]"Bm7S-Q5M/Rq\P4Z]oN
%/M>D0[94;&a'I'W;SnuR0=8;QK,$[AX31agH=O=nnbYYRb9/S)%uaOjl^DGq>$^:==B9F=eRdO,q[3m(h]7SUF^AA-bZXa]:F2C4
%[;lUX>m1.0JRtpor-M9Rhp&1ES&5&D<o)ik7l[P%9,=100<DaLEip@^/d9`^`i;ZpLRO&-X"I+7gq0oX6GU`QB@V]di;*h^/q$^%
%%a(eE#fb;cP[5G8@qoUjZg,tO`Og1p>mtb<.QFK3juZ5LZKdUX"&'<PWiHI$e:Ua;R/ne,$`bnJ;jrm3WhKV*inU?@RSZg\[TR_Z
%[m2@a=`l/Ab+aeB),I:O(HTqG!7JhfDQLG1%87Zu*(mo2oIX?NFTK`P<7+9[RJWJC;]!LqL-mS`]&5JVp,ne[arln%Om4.`_NAj^
%eV07Bs!k!#R$_PI32nO96ju@e89N#Y#Og27FWmE?kG5['!"aT&eKm-e)%qm-=36WdSN<`&cXXf;R8c+&Zg=2](F?n>9:Ss_pPoJ#
%oSHP63Ad&W(o].V];jOL;I-NlOaH'2W=,D+brBhZq138i:0e2<PIYYt6:rF]kL='!^'*KGA^<q,"k]?V84b9?LiM_>'9br13H[].
%iRH[]j4$Nl%!"=1DBaTlcRYnG1:]6jU01M5a=28lpR+n1KheS98=9\'KG!Lh^q:6D1*MSPFskdNXYk.^:8l@+RVd>S&VH<#[HM^-
%,GPIP`X-dU(t7BS^4X>;l8NB[`I0/d#0AOf=#coj5$\e\275P([9];TcO"_3*1@[-?*Z@0=`H\oB8Vi\31hhdQ=[MN>DuN=+H0)4
%^H5>NcDM$N%AO<'/u2/R31hf,[aQi(F=B2VUO&@i=jsk"W6;P$!F!dI$d9Va"g<lrptjiJoZ:Q7:5#<Fc&tnin2&LuS-a=pB#r,9
%YB(]?\0dZ(:_s4q>D-9"FWi*`F"llWJhIe%\s*bjGG3MtO*)AY.Yem\Ik9K"8mOt)'g#@ZdO\s1egPZ4,rURKEdj<bXIa'"h%0dg
%0%VR>9q>4L05QqY;I,*$F;_&1"H4B)W@jYOkAqfsV3kW48Tg;XD&CO#19>(fKND&W@K@"7]BZu9G1@X"W_;IZKcHUSFVu?78[joK
%Z:L4)4(HIq']?<i8Tj:jUb,icLRs\dL>]qI];<MbKM>.)S&P/E*uX3*JI<U(UahMIM,%-Qnl)dW_U,3Yk%)%/*VXltV2HH1l]I0!
%[k!D"Quo6H!*kA&76&A4CQ,bgGp"U$7(R?TZ$XrR7i*4T5G'`^[gWmTK<\`CFAXTGg'FJ#`C;B#q4\;/LlJiBY6;E:Q\20Npi@$R
%6]J?Ldt/JTLm8?r/qfFY]#pV&=Ptod3u<SR-lKTmk5pI"l4U#?`UAKpK/)QK2_(OTbdjMlQFYtu\U`B9D\70u#Vhm<'>GJb19d[A
%2A\(<![V7)DI<oYGY;\t>[W<-*3SS8/CjbqR9M_]A3]\I_V3(M2N08T]Cm6kfQ'8>=H@_pQ<T4J(P4.R_"U;n?)n0\!4>d-VHcXm
%L396G_As*Vk/f1\gQceHP?X>^ABC!m*%dRTD9O+;cJ:5#*4aUus-t:"EOI`V+Vuj5HH9`N>XU_GU#XP)_[%BD*k*(`m)"bj+^n8<
%Nf0*e-;69LHPhsaR2WOP7a%3>S*aPG`44&nUD#@7TJDJa)_irF*#Q%PM[P/XUamlH_QM+l)(4i+@NVMd*NXk*'&k*,T9\f0I(7(=
%Q(/=#kCCe8_M/GK%eF[0L5U0rSD(u:$Rcl#1sT(1GXedsc@h+"^tc)H64p.aAG<rnMsqdlQqi:WI(Ia214e)Cmbks5gMI`3Vnhu:
%C1k?L`hRJr^u\l=AHi*N'ZV-jD.,kW]!C3oiu`@5>L9]#;eOmpXT[VGVS4?88$9[UgMGn!-baF%]Y*aj6<KJeQDe4)Fn?ZT\#nl.
%!Z0GBC,H/iH4.';g[/,f&&hr3)"L@G974Z+_0?=t'MKbs]Z"Xd54l^9$fS@:d+s:*F"2!^Cq#,/QZOOcFg;qK\h,I=cVAV@T,CFJ
%B"GrC3>D0TU>(9.W'iAY+VaJdPUk!1lCV/dVaVmXlg!IT\#?JS2=HsnQB_uk"i[ULOKDp#7I%7@/&,rh>)DP:[eL;$(2(+qn"[$9
%\SXe_k%L7=(=Z*j^%pUK_j,<C_JDj`HkV+a(5NXb*1b^t,<%,;mH1fn@$`o4XY#i7R$,a0MpTqHA@S,YG-U0nD,/j.ZIDT_$[&<k
%lGRAjPZT=ND3HQP7VI]G;:CfU(8D1jM6kk:%Z9n8Ze8gHj<L;=Cr&+4Y_I5P,"eh;;_1=e!p"@EA..$cgI/K+!U+)cYJVAd9>7+)
%PsGTYO'o4M0Plj'!kMX[%>QN%)Pq<Y>HBAe'A+MpRedJC/RmRPDYdOq>OE;9m'U:E<%T"OOk1@+FI]s$g\U<e[B,##J3#L<!XmFH
%nCGGW+]G)`etOMV8@P\.i;0WC>)T34T`u?u.\.ZUJ^9jo$E4jg3,9,*Zou,<luK<]=DcDZ>)PASdXW9P/HiWmJ2&31ZAq/_!=kqe
%bhW`V>/1r)*-9D/kH&^H>%H'YEm/F@>'TcAGWK7bWl9O-EP>V^2q2uHX+c.W@:<u[c)<LjX;8Rk]Md9<9>Wbh/Q.l?pcD>)kue!f
%54d:4VM$QCS-CneC_Q!("egf"b;N#\9Tbg@&H4UqK@Y3t#7)CMKq]>L]ME1=?+.:q&_)EV;uaGnBb<VNiooa9W!?f$bShXeLFh&2
%Rs%Q_2:ea@SWhSQB?/M<ab?)t;*7r*0'lMFY"hXU^Fu[q/p("F@EYm]c&Sqjl%P<:i6e8Y1^[mD:p)V&`pY],XUC\\Q8H1R"s*(b
%8r<uq/KhE2M_QtjE6BE5lt!KaR`ja676>>CA#H%AL<sr"=Uaqca-DGr9WlBB9?>gDb''\V"`DWm=+c2B@D&>.8Ob`8]5/6dL+Lf=
%K6A0,O&OD#gPX)jBPeRI$i_b&Uoc]V/<d9[=iD+QPI'pK53kU.c947eD%l![ZdWOHQ$IO.9<(66/(7t4Nt]k!GLd>uk+/>&c(LU2
%@kRftc8pkM*LL[[db2#eRUa;U$%5<ac<6IEj=B7A311=iEl(t<5:m^+^00?0qFW\.SMJ[IAsYSA:,^:)Zo2j4ArT\JQtC>2X)FS4
%']6,mnNo$i#UHt%1Z+LaAN7eJFE+1FSY"=fL=p9T*p8a[fm_nH"eJZgCR&4L-@L<Y)EXs=_-P])]+_lh'\ON_V]*#q@FDL=:s0@'
%'0V^o8N>/A-C,[m0%LI7o/Lp,XqKP2[`aT8b)/Fl=>-JUh'1(Z.GG@d0XX7/&=aVL[nmBB]<U8sPNg.lm<%HR-.&OG"e.'cCReFd
%(.bijYUc&V?!^9C<3cYgGMel__=YG^fM5m"a-;Gc)n#G)N/5JT;CshW-'<$KC^:MRjO[QC#2.sg`YS\ZA2Jk-GQ(]j<7VD!Zm;S,
%L:Y0JTKK4kr?)K2CK;!IE6$P2>FSls@k4'lVkV0-L-Vf]NB+Ec3:T<TMbOlXc7S_P)(2>A]es:@5.RBZ#M.PbO#<68FqGPlPq1#0
%!5bScY/mC[m)aGB>2#(U(S1p8pCm`C)K<$^;L6UK9\(^fFkOQuX9?bJX/fs[9sR)HQlAbDVGY,nf0&8BplQGD@R]^)@UW(7D@d#h
%`I`cQ2'jk>P_MJJ3ErjkgZd2iM.JH[_ptHaC4,\g9U.#CpThm"s3'8e\$^34C]FA1>hAQf,d?eGSpdm(`%56a8rU5)FrUMaA;#U^
%Oi77kn(`+epWR$2_6Ka]H?)a^:!_8:>BMO4Z7QOA6s_2@a+t^LS7Z"9GcX#HlQSV(dEI\$oj"NM,s2A9j&;'=*(pWZ$%!+e&Wr/@
%3Ht!E'RQQ1E^L:!71#(XZj2e'L(`Aq>Y<-\Mo/(fd[JD`Vd2+t-$31A$9YT()+)SecG[RZ;POQJ,;KA,6Zp-gX"1Ln>CV2P&?@H_
%%?a2r82"%b2eUlha<^J4BHf[7NUB+^QZ$EIp6iW(Tk5a7TrF\oRB)2$s55<YZ^9`p$FDeD>YHsWT`ciDrZ9/LJV@R=1m&L@+gWXe
%R[O[3;/"BF6*nh!aMc.kJh^URaWN),]d3&e"QJ]9l38At>&t][.]u`mQllRh^E-=^8+=8&=@1U>N.rH0GV>ka+O6;/"m%b-:C,tj
%Rh`aNM+6(T40mVke=f(0r4J3K/63cCFMXKZM,#Uf\FtV"2!TcK_r,`.lL5+5.\HoK!D6UTA&(KE?okl*T+FQo*eoH2NW;d<&bk\&
%kiTaW'V*12!?8@>6Cg9*"=]O\CHaIHU,Xn)4,W9;_IA$3=VC<D&a<^TJ7.e"^*HKekt"K.MFk\U"H=PuU8H=Z1m+f&fWb0N@q/@e
%5(=j+C3g$i\4<%HKBA##O\prp`qLErPROBba>!,eQ>9:EUO0pA`5N82@M!$Hb^mYD6j"W.i[GP^CWImh3(D61N9nb()N2ar'd^Ho
%T&F_ZL#UhN`^sTI@2a,ROY[:LQ';tBTFsO<"^D[MA_@(#JFu7`l4^\J6lZJC_3InO;*H)6Q]iVYQlPL^<#j=k*hHV2ND;kP4>l2D
%n_D%NY5LbK3Yo=1-L6B&PVEt(W5.89drYt'2)rS%d5EW`hNdY0Wh.RTOp^GG)sQW4EFpOh$h0.?&5C18k]d/E"3D4d#hXoQQ6I,R
%l8^m>\LYP_c#I=%bKXLt5piIr=^28R68:$SGcG:5NG3M/=X#%>?0G15WMbgj30c3k?0Z4*#-`lNfe)_'#LjJ]W\.nPR0DVFN/3Ec
%N+MhVT`E"@+DGN,W43>3R*M3F\a9)sh?&$5Bf(r53jZc6RlI-*Gsl*r>QQ+o&BJ'Q.EO`m4O^c9N5uYGSkH>Xo0fo!11:]R37(,\
%-&.OTjKpI/E?q.Pb\P+l&O[gudeh_";Ee'7+LD`"S^HghecA6F5-mPBE;itkB_\01MlV"W"9K<!E.gLc<NHO<P[p88["+qj-4iiq
%ku89VXLs]CY'*!X5_5]J+oA?lPdh_/5'<n$6hQ1Q:;Z`9P]R$RH)M0[31W\WRV=/O&nDumMDtpl$(bK,Q5L$qb[M7loQnsnTKM,)
%Qsi-+EBOn*ZP>nbcB`"m>k+ghbEP1Q8V]dZik?iV2]!/U(ia(jH?)u/l)Yh<7Wt+ISVuKdjFB]Sq%"l^BJGSkPh])%;:uc@T"-\B
%X93JeG9qU&OIEI2HQ)](DJ3&j/Q)$Gi0qS7<.s+o_q>Qb1M3q''&4&<<n%O8k:tuF*6iX>&jO^<ELu;NKC]d>jPn5b6c-g+_\A,P
%m&S2=Jr1jb[)o.fUF05$&tcdP_3:2\U)ZH4;A%$L*(:NSPhS%#Yts!fE[?CDdNc7XKo04hPU$=tZXPe3+IGmq71DuJE#ch!-L(.K
%^kG=C`&bS#R^!'2iD\lG_[ksDP`W-cBpL>WBdXX*OI0+u(Y]QqHmqTHp*,KYPl/<T\QWY`BM>Qq-WQ@fJKYMpACjPd`l;cbbnhtb
%q?%7D"b)dI$hdP3K_:QU(R(m8j;1E-#`!Wb#uQk#;P6F@_U8m[-"27GLiihUW6>j748M,cX&7dYZ=HOYpIHlBbN@GCpK/;FJY\iF
%i'#QUE1pf3f2Q!XSL?DU/Zc"5B&?7<dGgkCP?^^/;J`kMppm\37A4jPUj3eU)qfKCqLC#\H(f7K;FAHUbB98#hBhGrPu&._8p9Ge
%1]((6_b1lE%39aYAHLKU7&6_)Jn[5DT_$,G2Xp@V7F5pTk)QY!,OX-3A7i8$Shu>@<K&Qb[RAAKJTr'n'lbS\4pd*Di/"+$7T*2"
%E7MELqs:<-/?#QsDpWWkcmJUs$4b,%DqMe&OTVg72OM0Ckr1FkP5"$`OhoiJq5*(K85'L.f81-Y0r+mAE5:g5V1e"7]i9\S\BoJ\
%#0eq$"<\#3EASRjMXeOCVL2\GUA9tTa`lhQ`%G_d-rFh:d[NQk^@X`$C.*tVZ%iaITP3;0Tg9HK7n!f3QNSMX`.;A07B]:'Eh[9Z
%0OmHBmF!L0>q>0JOKdb::iklkcaU,)8.o^)UV&S6K.dqP>hY:"JU9J+5t-=R&fpX7_TOIpfo5J:N9c013l@=89kbFOJssnM4p#et
%Ve/#4_1[B@Tfi`U!8a'aRmR2r7J-KMPTf.%@K_.e0S]rgoM<2k;=UO[4.Xh?&jI$Y$$&9A\hB/j,-4j28>1,[4Wmi>6n0_LCEU-&
%'[c0TT1Fckk*/LRi<l]SYJ_nLY^$4WYpX>uIW7-j'$4eHo?>#f&[#nW''C_`bYLh\<2EKX$TE9S4L7F/blfG?U_hZ7^c9k`+V3dU
%.O6N`EDYT?T+>"$?U^hb50X(q@XrtZoPeEcNDp1)*ORB8P`c'dZ,[T*:WGLo<2=V9Z:-<3a;*+OI36$IhZa'I=\TEIA4)MS!K(lG
%>sMC'OW?hE:&IBH_@K(u#]HE;!fQ[b#%HSLA7Li%H*ML:7WBEHJB1.*^5aF1N/i]TU(9Wu\kZ=Q8!b:nD?]%jc>X8a%mDqQ3)X00
%aql:,9GRaoA>+a66Cg*0IQ$(cS78P+!Omje%`OGU6oSP1dJ_OZ?Basr1F:[r2_aMs`gpW(,I9"c'&!1#2aYT$1%u@%4228Oh$jPK
%(AW'V`p#i$*Kd+kG%tH7851K**q8`0=Z&):;]pOpfESIgKdHFhB@HKe7;KVoWST7l^b[^)XRp4bTnK:r'IuERnWFlY7o'?bftg%G
%GlZ+i*"=Vf24#5??m&8*F$[.p)5<UU]`WVn-^-;s*U_p]!!j:FkP=DSiaKhQjGJUGB!Wp0JqE/5\b[#:OmklF8g,2ZI-5kY@3dTC
%"T]$//-sHi5VYFk9379La!\Cf]16KQLc<mp(_7`:J1d,69jk'#e3eN@lATmO@YZ.ngPds&Gd<_0+9SrI$?,M!EeT:cWs_djI#5YK
%I\KrS(2O+Q,bQ,5Ksn236'NLo%L_iTE:<kFJE%*$.GKp%2!Rq-K;KD1LkfA*6fZ_6B2UbYLU(Qc,'0-nlf,[1\5B!:e4/\f)Y]#I
%%pccB69_86CCHhLN.B7d)cC*pbGE.8ZWXGi:!X1M:BBWKjHT5Ra=IeF29[%N6?bu>pq[G4foqGPi#VqdW8bkO)&Tgb'T:6T`DED+
%7+Bc.\H<'e'[Qir"XS<_.k--tJ`_XE]l<O1$%k&0:cHo+j$MnUitcPN\7/I9et0;RN]66]@u2kZpL_9)X&$+o.Y]iLFFZW-P6OgZ
%QS4BP.#Er5O&FA\,:_*7H,:AV+mZC/;;t1Q7:)'_8=b2XW^9a\"s.Fg;;(d1BM@'6`S`fnbi)3($;j<kZ@&HE;Gl2n+c<F_NHZQ\
%glX=(&.?Yaf20g[CE%Rr4s:.Lhj4%PRqKSQ@O=b,l,dbb"?rN4Rld.-#`aL]m9;2$r0ZD,i_a)rRV`ej:nkKP>TM%Mrpu@_UqJI]
%]dJRl:Z00rfVj1BRNbE/c:aa3USXsb!^sKt]+fL1WAnKO.QT;&YN(I.M;$'V(R`49QDJb'1(()H.=r*aH&j[P+U7'B*5sWa"Gm6s
%o4F_#`u8DB,0+`#B87)*IABi';AA)f$&l8"CC`oB8Q"\$a1/'mSq?*<mXhGI++dT6#L72Q1IjA+OD@b+![@RdQ0aN?KKWD#=>@k$
%038boa%te8MAM2ma[bYpRVNn^h`2%co9`!%NjZeUbVWpDkGRn+</is0(5WmPI,tYpE98k=^G*q9%$".F:(UOUkTl7c])(G+0i]f.
%ff&LZ-D%9+`'%q"3]Emg^7h(3!KC"H"gkf_!'$1;Y(gk>oPO;u+qr>-%b2uK!Li?Qi@YX43]/@0i4D@I?`M6l/BO#!.g5H?BU9p+
%J-jst6$ITBXiIFck!&"0l&<s4m74n]Dadfh7FO3[N)9XH8<cYe>N-I9?r8Hf9-X?t*kfuZO1Tfg3@i>,*ngK2Y3A'id^Kj!'s^sd
%IF#fd#MkTaG/?1?Y=&"/-L<XY<C'[m4C&@_N*)<tNmro%8:VC%o&5thK(k-I.H/F)-\f>t1G(^F&0Fs*`)7C](eQ&+>DTX#)'Y7)
%S9TJ5;4/mG6N_0B&:6MP,1ZHV+cGEH<7Vo<WeO??plVXDN#tDYl6L+LUf@qJdSMkD4,+$tJWtcH)Rgle:fF]2K_$6WU.A#?oZ#HT
%eR'$09\tDF&Z3QZ/0Ij9':sd-%#sKbd\BXIi&&_2$sFGS;-7(25k1L?$=ha:+tq8!#QICJQ%Zno30:h@),X3AdU&H0U(3:"/f+=D
%p"[2[aA'm@1E`=S;.(R._)sMQNWuSN%,drZ.#nP$0ZR\;Z:L<fW+o=_<;I't$Qc;rfl.71c6E\KjI"no3QBf0*m.TeHtZP7i)0eh
%'qF;mIJ9]:`OJAGP)8HiBpbR*+PS*q_kZK5iD$DO,r$2?BU=,,gud"p_ios$#9:ieM3MQ6:O-XL/5\B>?m>sD#sB6[Em?qo=.gGU
%R:m-XKRL[i+<i#B!,+!B,[=5KF&s$n`fY-U/gI^l42]QF_!R.>i],19F<KtT37LYP<DNb_'NcKd_l.N^_NjbSTOL%n`IKHS&nZHb
%n_=_H8YEm[.fCXP6:hp+.qWe@`kugf[nt-hes9D\bJPE(Cu;+!*1.7iX@c<m`(H5g=%Zk#]-ueh7r4]n'a6![@ZM`[Ti!W.VZdcU
%2jP`Y?>N;SKo.^_d/k.Fd\D,&W3@%^fi(mg=MN53M6[Tg;!pfM6tIuX`2(%T)Ce/[Xsr^1>67K[CVb7@Z(q,J;AB6MS^05"H@fdJ
%;kdXO(TTf-cdO]dJVj?4-.L=H$:A,>0FtWc8@-$8%'NcLR\HMcPCg>KbcPu@dPMOa@;6)e7`7cp<(cAT$X0IHA7pW8449![h2)bV
%I\JnilBr9cYYP>>!/7C_DPBQ@EWQ:gOhhBZ&Fp7'l_\Ym<#`'U:_sibFUq(WI:%`+dD^Xe+ZL6?W`GY4j@':tE?MB^<4]uV#lBj%
%'0md/cq8U:'1KsipL=()/VQ)Z_UX$Z>tH>oRfsR5'oQlqgDI7Td$>'QPokijMO&>/'1lnA)2\e]e6JS-d1MTMD&rNT-),b*Yjq(5
%EKn!BW]Bu'=HQACZ@@^/RP)3#n;CA*`>uoo2j#s<$6ML+b7R@60*pg@$9$I+'5e&hWn*QZgK!8?4eum4D'Xi*/5A?/Z7Lm@U7MBg
%P.75@pV]'2#Rq.g1+6rSe!((X3nFq-0F0j7Pm6?5G`cdA;Sh#kiaB\;hd@'VEf9[4$_Q$QU*8kJ,2/$9rJe+=>?k-$M):L[0$Vr,
%8k$^\#`0;M:5%#6FYP2RW$hj1YF*<J5YT6:h?1JSWMO]jq+@Me&U^ipZ:#6<pq[PD$>HJWs7T'*T-OdE&#d4a/``lo*2*\oLKMSL
%A4Th=@g%-*p@S"'r'C__#'g6*^,BnXTf?&]<T]iD@aue%Z9Q;t8*iVj8e:fiO?9,iMaKYfEXD8qc]2f2&!880m<MCS/ZJ^\,moj_
%[(n(%P;DJ,"nsV>l?G\===DQ)\`p>KCP<"`S@QolUl(/7`>>Bl(%lO4'@/O`7E4S\A7B5M,QNJ;!PURTPPj382FII0"tWjR!!;%g
%MJ"ABcPZ[IA4?@YYlmQcqRk4T9U,@%I]:8`q_GZ`^f;2NHhta-lMaC/Kcm`5FYlHci0\>2C))CGe.Ee@Z9Yj7Ksg@UBr7nor+tN)
%21,iKMs33!=#aq[>ur&)HrY>:q="$U/"U*eTlhR,f]X",r>^]$9Z@G?4.]$j9hE]-`1&]Lm6tq?8++H^PIO+Z6R8C16/h0'^_;]n
%.7"fjoGq+(CnQAV=B<?EU?&%Y'U)/K&Tlena>/^'So6Rl.#FIG3`S9T):@i/YftH*J,hp-B-e]^I6c5nTgknk?=kZ1>h()"o>%cN
%e(!D1,N@N)+%TS*aKEJpRQ9;:_q9@_;,9Hgh=tu=W<@_GWoKhO1"34c+.\4cZ)g'Hb>548SJo6[=/HVD0o8Fh=GN6#][$[*l6Oqf
%`++l5,\q.KEE"jW4SlhAQJmK808.WlQ-O=m'RQ4FLCp&Z,;l:=/93#';B2?'T=QAt#c/]bTVI6H?WRijiS$b;H;`,(BjNhj*ID)B
%?dj1hK_eNJpF(mcfos#!=Peb#<\!I/b@F14SQMtp%:3f$HNY@bnofu)LA]9e3PL;o/>]&^XJZAbA336(-*thk-L4J@Br%3$$'uqX
%JhC\B6+Q6CTb^3,^5.5N"L.a.<A=HOX+>pTYe.Z0ORlJM6asQj1]5VCfbIVVoGtQZ?7HusN.%@#9.6<AQfa`%G(8J1^tHi>=!a:I
%.<*fP*\PE*(B?fWh;r-HVd^.`T@][**%D#X(5(dGe_$Ta2Ug;W03mijSsAM9bfqsM[%V^K7qrSP_8fZB;3ID#j&dU4fIoD\[Uk=9
%(gI.E^^q8"X7)3]HPEW/[$BXE4AarE`Ru%W4+TVPq!6$g,7d4_W,@o1O+kQ:.R/7QWhY+j.n#54o>nbeKW>Bl00Su7V+aMM?ZftB
%K+5MDXg^;#/&9Hi(f#!<qCd/TqCjVk+qBRlMLp&ZXbeCI_uYiFTZG`B&];T;SW#,$fI\/9,%[kXSO]#o'VnVLN`10CY,R4snE^]3
%e/(m:-k8W7Y*3+>`ClUL:%"T7ljD7tAP=5S"a[DH)4>@oZ#9T)WPkC[>^[sT1T:K'r%F;lYs2+#6C5,_eppIN)J##Z%j%ngR6?[]
%n1^6ii";qe?GXB!MBko-XJueKj`EDcNkQoueRdXGdL)$RU?'*^kKD=CXFq[<a9,WJT0m)n\)O\704WQ#@^-_FO<bMN@Ci*&^^Tsb
%.t"(U5,Ds9LO@f?p_(N,3T@PDX-/_.d]uI"Ka\Mlgc9*k@7Am5\ARMt8QrDm2D)[+B@GLBN&3.eNe%=`V+E'V7f4+7n4"=($^Xm`
%4#eR&C?17uO;f$,@$K`$#nU'IE(/>Y!Nf+5gnRm&-TOr^7-&nnA)WQkgK;-/+bMbJH<%!3$@7%IIHFZc;\VmG>b#K7"4WSES&I1N
%Z's/N]m['-.GQYB`7i^03habh,.o$AGbU6k`SjMX(FE)a`K]k+]hcR(5G>ZL8W$erou[@u+E,]?(Z+b2L2Sur8@9LG$Eq!po,ApQ
%.ED3_H`*SLg,I!-"?<5IjGW-(c&sJORfJ"<\C>hW;-?I(S*+HgEFqj<<QuP!/.7/LL5pt5CeuC+VpbONkJ\@7jmd,d\i!Gk'2)<?
%6&_EP'e:cSRLsLZ5dV:s,`56sfEuS&W"Qd>X@j\K0chdKR>;b`9oiU#fTVmW@iiU2g?7e@PaQ$Vp2r5O`K<e6[BI1,M8^*>-\2S2
%!f^HEK6!C53^8pFi*\+mnbf^=eo4#YCJ,L8BmbDMV*HS?T&](U<DP.aD,]iP=9>F1d;%?@j[l!dA:Z*T(A9p!6LABA#K2m!jQ9N!
%;'Cj'29q#AL]]EE4AukH3U1R[%J?"T#U*%`lDq3=1$/KfF^2,T``O$!HLs3q)MnVW2-V0%Bi;a>-kpo'iC]eJ6EMgA5LhTV.,ekA
%R\*-)UjO-C8R6M15Sl[EQE4.aKZS";KqZgtU'^+OmGU3k0O:$R4&<1Y5m`_tL.7-^lHkV:<l85mC]Pg$UA<$^AATtj*ABL1YA4eN
%K=Q]Q2brunjr0/V!@j":7m!,.,uMA[JbA@p.2@Bc8238(&?CtSl:Toj!^(-%q5F$.dg^l"Y<3J!$r:Xe0^7B1YD*m*a'`95\0?f;
%D@*HsS8)%p-!1>J/C>N,&iF7Je$Dj]7]"0@F,-.W+W>VEHC[]/*pMe=q-c45Q5''ci`HD]m-(.k3aCg'YY@RU#`nVWREhJPaeXmG
%DZMkiki&(%UA2-_M?Y)7!cGOs+ef)W.8s#[-K>mg:1Bh&d?Dsh3'ZF8W>O>3W)M,r3EU5JE?qD7q7_fU8AsUQPGH/Cb*:0gKFo1N
%4WNK"9*5JG[`T3#AXHjg)QhtD0/",4fEFpH`hK8<GJh34UbI[?VI_o>O[/7C]X]RsJS8B^b#$Q/@tc-X&It$^]RXDl;k5L2@SpY"
%Q+#=D77^efP<^sVGHMal\c7.#[0836OV_k'hjj9N1.?e($"C@11"mD@U"EL1k-h'!6n6%@G50LukD.VV*_9mPGa+$)?UP)a`._Ft
%/gG[h"nIq[F"9ti^@mL:#0[FM,,6A!`c3D4RKmDDL*X$G%/&:%8V9jX<0'dA.%q/%7,E;36qdq6ilLme`1g;1m?IGVa@74feS9J6
%2PYh[KOh];`?!G/O,2@ic8Nm;j"HOeekhk>l=_B(RA-!gV1^$R:/8',*8PXQ/EFT7mmof)9%$\O1q;kHJ9sR)G'_n>nT.=QhisuP
%oFKr44e48>G74qe4oWeiP(F21&+jgn(TXV"K/A=Of@M-Y$kLK6\dYG_@ooaIKC>g]!0S;JOU@P]86cj\>VPb,6QM%O)8'E3(0:]I
%]H_.Y&75VpcE@r>-cgbrEgk(KT<]PCl>'WAle">mP`)4;P.cqYRcKW!di!3tpJ(Ln;7*RnOY(b,s+a?EI\:W"*i8>/aS^<'K1Gt%
%,Z^O?mRCrdV](n;0gcN:eJJu#'J*jG_6"9H%!4iD]b=#V9b"Zl])-cln4L9mOqL$sYq(=e6A%unO[G'Tk#XV>iacmbEPY@7TuMgu
%nf,o7:dui)Sq6JP)fJ>hAYPA(MWrP6::n4O*V'gr&RDVIC5X<r7>HAS)iJ?_%*L;a#N,M+_Di4&67"D6-)-XWMF+"^$e#/r_N=3Z
%T%Z6aN(slje8ak!f$i^$9Q^A[2+3^#&;;'l#bsrP%TiB83U%4FXD,'goTt%(P&_*t'f6-b2!L<V.52&?B:iNJ9;W$m"=\=9&Rhhs
%jtjtCjiVQ`MI:`V15A`,+hjoY?Vp,<m=]b>NW9JnE$V_inqkD]EJC3QhM@=/gd^i<)PYJ7GS4OS(m6.AoR3Rb^eASXN9d=6g(QV,
%Nr,M)-!DopaRnD,ASf%jnP"\7iCU*rSp'q1-L*=<l0[R-*?5e!i=b2uU66c*"JNF?c5K+9,_FeOH+6sAaA'H38rO4"`VG2\LB7]l
%`X]"4!QL!)i>H+/F'XJO+I4?PgG!2al>10Z0GkS=e@=t?3/C"g.iNN]&`"_uE6,q<bq2=EMED:$-<7X%"SFi)+bqC`Q0X/l88^d!
%,03hI[@!Qum,a[B#W+cY6Fl*-n0W<'SQ.r$WbR]QYu!eUOhscDA76XuJ3gRWni`a.N"Si-J.d0uTS+ubKqaj@QV*8>S84'bJ_11>
%csU8p@G!:6NGDfuTKAC`NXb?p;d1q"o10i.AI%;WKnVkdZ@U409X!):ku2^1j-Z2O*1d+c--5bELj0Y=W[mKNE+pK2L`%/^a+a&W
%IOT.=%NtDf+oKoTGZTKS>f/A[V&[fFohSU_%i\(c@HJKbm7T?SQ`+FbU:-Ida>JnSZKY9or5+s:@Y@=;'r\^34qQ5D#@?A^08`sP
%CcsNILkg`=`+V"DB9Gg0fg.g>;9X\(7%a_S$ji"&N7p?oSd\7!,KWr&3&o2o7c^iKSt#j.TGcSQX#38uatQ>5Mnfo^*YY3n<XVr[
%X!./A+X#>r-m=Qi#q@0c!q&5$/I-UmA/2[%dl#^R)58$3(B6JmhX_&4H3;fNXtGOU%t-%N;o*.K%Z4ONOG6XaiuF(:kW=uP!e(Qh
%qe;sSl8$-\:g_:A1/T7u]mp29a(^37_L,pOoSABt/XO?t;O8V_E<Yp<`5%+#;i<69`%VluN11u06u(pr$.Ue./8?'9'Y28_-$;'-
%6_J-DR5BZ$/qMup+J&sR#jkTTYp@h$/lq&!#S"4sEc]MrER>0r;_*o3-r(tWg/OU#FW"3#af[Ibd&IXS9^.>O%/KW"<@&m1PrquN
%*Fj)Gh)*ljS;IUrEHJ7E&X]L-&eo1f"p8GHaJD^Q8[rH8r_TbNddZ9geii%N'<%YM?7C/79Q[>F</"5EZ/!DP8Rl3\bCEn;.p)pl
%i#',rb2q?2ET3p=jHsp_5@bM1qumaYlDDd)k,=@Qpa/BldJsI'bH8(,\Q3B45V]MU:s3U)QlKC+7Eo,aaVu-ig&l5fC`i)18?=+3
%9Ct5a>qN=d24glJCl$,h?!m>p5^<CKT6VcbdF^7W!%C#X#/I&Jh!S+$@MkU$a:^Rbj&`su@A=$L=2JLc=LW/qehGc"0UoV9;8QdM
%Z=LN(W@!bP>\4!H+_5p[`g'8Y-$`-Pa@#5)fCO-?98-q$ehhsrHs(\-'8RgE&q!X;k4L<90&gic'#n]8TjoqRkM%[8X?9ppLd;h`
%BVD=#U0dmFar+=k3Aq]<TM/+&^S^`gcN'(="";^(J6n!Zao0eLisC>@*=69n'>8%7G$c4:^;H(%Hr!aR&8O*Qc,(H>n?1f`(apQO
%KM(NNN;n#CE"h&(*0i.M(Nn4R>55U$RcXu#5djFPjAZUC?RRk,fDoG-bn=o[.WS<ZUd<rVLM)DR#S^g#3)`I$1m4$BC1J)b*V*rK
%T-da),K3#J!^p3S0#pMu(^^5[QqUd9%7*Q;#(E\>`o[A;,WM&tF<sX%3LX%XX;i$S7s?XdjIh:*dgtM;TmNFX(JBk:Pe26V+SRSQ
%MIKL7Z@pC7DJsr1p_e=l9([pup52R#;4Nin7"PcR.KH']nFjad7HPP%Lf:=F'".qS\&+u(M;rZA5+.3X+f8^Ebg)pl0I82c-=X$s
%/(1.'MLd,`MSD4Vmm11%(3Aqs)a"#@i'9mp0JTr+e1985%=k"g^.)Bs>0hm1&dsM18BX?-YJ;G4f-@CGY%O`7n-;'4ek:'G!i^FL
%L1CW^bZ/g,FOap=^nI$u&#ia6AE8oM/a?(s?5\tbpnp5JVOh7,LqU:0Htk'G#nusrd&.pFPq=.:f^L.$aaV]$;1/UG;4R3@d_:VP
%jdh5E'Wru@j,@rA-:1a">6KMugrc49.5@\S)232aK&n*h[@<0FA3:tZZs;V\>kQlDePrLYFYuQ0<Pa9RdMF<CBEJW1A5*f,@':92
%!n]Hk<2(c)=i*kc)K3WW/`&UK$AMob`IY`pK7sC.#!k7<(lMd7P?9t+%E+YeAKg*)@m.]*HB;Y?+X=<1h9$S6.$#7-Q\1!C$%5_A
%Os"IlomB814aMI%-=N7SPgTPhklf9EdQ*GTbJrD-RjIe"\u@EF#EIf&;RHfdfUKaP=]0'm2UrO*&]<=*&_#;Ch4t<VM9YLb-+]hh
%9";8DZ2N%H!9'204G+UtnNP%3h&$Se]e5hC*J$R=@e>QbXPnk"$]%Ff#>*2LO:r4l6s@c*K2V^`$)2&QHS>P2M)n^F6`NP4^c6PW
%-0-@Y.7,C8G/Ytu+U;bVB=$g%+56M!0ZflR#j\1LS/A?KbMfQI7"lOo9(fEX(0nfmmgpmF#0/i7i<GIM7A38OC6g)'^Q_8!(7SqB
%Ok3OO'C/2l0ON8Wg"fk+#-P-T5bOL#1P"9"NM#'QT`h"L!@Y*[C.Uk5Z4^mj!0?q2@fa[W)]$R?l]f>_-U.UF-;OW7Mb2^:Si@$)
%n`dFmMZ]h_l:?BO]H]a5M&3ElnPDArkr`C@5ope9,@jlKXYSHm<<bW,Q,o9+\^3:sTV%9tDLsC](j%1egfWq0e7_1>:5+`qd%Nt-
%7]"$gpJWpW)[8?bs(N_jD2]cl]Zf.3,m$,Z=;_=?!-FEkbjs)"!+\-f')pZZ`L(H*k@F-[=th]/WNJT7p,T<t-!l@!5hnP(BnTG%
%09mBg')+M-%/3`+kKlH@>[aSoTfN:AU$!acO_(+?AV&QAko(87B3gpMSsLqr4O=M<Q?Ng8,fq#Pgc7&dJM1h\mbWLJB0Zhd&(JRl
%bW;X:e<>]+/gc/>#W&:Jd-T+JcoJadKuC)#G!g>XQug89"G10m7"[2E.!>\Q7u00l?Geb#gP,)<6(E]K9k=XoaM[1T/-=8;q%D=_
%igV`*T0gohYDp/=8IdZieK(p=2CF/2oQ.B"oN[Q8;9@r[9ZHph3RF,$C-TkOk)@7mK-:\n;.@2pMGSBT4n@.BNI*BN_G2YE:Xn?3
%=!o]86o=)h*sq,#5]]Cf.R9R>5nd7$`gN<@5g(r2(qO<fk57*%0$7&G#dtBK[A(kKM(PY8P0DrO3&;k@H*!GOM_WNf7l81fMKu3^
%+j1F<S3!$5dkK!E8N1>hk,Bk$c8*2*N^.Us75N_g6dX3';b^G$L6j9M)N>3<*41]]KQT_Ma/Q;gb2i+MOkeV*>g@"FhilCn.[HJg
%7*q/E1-?5."QCj^`-YU-Kg)ZtEg2B:V$&Dp.>GISA!YeB9VNX3/n^##b9eOJ?DM4L""qWngbFi:0W!b+7([+=>E1+&Re[B#*,/NN
%T#$^K#mqDq-#U7--P@@LQ6XH##_uMZJ<%X&QFQ$)N[8@(\`HKr'5?C&?7>[''"9u'35<FuRuC7">)m!U:lg>kZlGQ,W[\,9](M.s
%M</G\r9oNYEg5!/CO"r;R`(e!Zab%g:FNB)H1X&$M2P\2=ljA!jB(B%S]5FE.$;YlJ>SINJBF'P!f@Ga*)Y!R9[+aBOf%QPN:JY;
%ER,iO_ZFp8?dM,^2cW+'+=DQHiKK&VAQkspLT1M7D"98Wr2W,IUVK(:g4NfMU2RXEPFL@4L.b:^9po-EQ(/$k3aO;#4>Q&(_^#b&
%*F0s:3UBY<#ufjm*80\3iU5s1jgE#O%nnCA_3"t_nLIVc!ecMe)T%ZTa9+jM=VuElijfJU*!L=!f?,N4r,,+NVf=b`=[o<$L'\GS
%:]QX<PaJDq*)@Y1E(\WE@`T_G&S,4bOF'hG8js)ta,Nh>6?*8l.QHPt>kM9U?m(-h,(gkD69L>J"?@#MU%62p+GV()]gW5m:>UpS
%RXB-Y65'K8nDdrUf#\PQ*/>m3IgpcFc_IVo+N9cEd60f;-Z5bO-k?`lgi1;.G2b9#*9J?J3%K,68<$q^U#Rg<;S-+ANWX(BEG,@4
%GcOXqS#/Gu1J>N'i9,O!)1s@-]*SM83>r(<0dsoY"63-a=Q='JpC`)scO5W+EQ3qADGD)\*=ZR=T^gCIdZc`OTh/d,39-\=V_OS/
%:pVO8.-$84OYWrqEM=-dOtt$S6&`]M`&M(\hp)eQJa-X-^B':KJLE`UG]=G?gf2!I$=mL@]K"Ih\d"G`ioIca]rZ0m\:RWCD;aEH
%4\:`:OY%%NZE3DM((Wb)co#?R9QHR4942a#\N"''AWTET8eHsrpW[#LU5HiiTZ@fXN"^b.MYdT6?QtC)`ZN2#`KAJI@QTi&c31WA
%,E_$)4TsfTEh*b^,eKg_M0l5#VFi+RT=.ej`i%VNe)2Vd9@OjV^;?1o(i^)l7";BSER+i^)E'R26#KjV1W1Lq`L0&Jk>Y5"(j`cJ
%YuQuk'F<\\iIs9X4>JXO_@Lk?N*+)TCD:\^%sQMiB&V]Nr<)L:45:Fd@ZCqB(<YQS87CouCcM,[,c.s%n:6@E-#u9163AqoQ^H_<
%p"s10B8/JL,g2>/WEOMg`:-`cPD0q"dnbu3a00LB*nfsEFa1C"E)uSD!\5847hmCX@"kXbd%\B%$,4_WiO5B^$Fcjd':u5(_pH/t
%P'#`s5[H6GXfnk(o!Dt]k62#W\1KOjE6ea/)F1eMQ6e^S66JTmU]h9hUDEGo)*58pmACmCTnDAH?5P$o%kbYQ^ru9+R,Ufi?,hLY
%KP1.1NX)2S'ekI!S.?+d6_#R54^Z5PVaPVd0R.O_EEG93B9;."3&hE7[$MUfGY.uqX;NoUQD_[)*C5<FINT+cal!XN)Q<*.KNJB6
%B<S78=u&'*W$"Y?js&P3Z(NhFX$qZ!kTG=J3>ie;V'&_!?uUKH=8acmR1aVE04Vg]`B%*N\F3#=L4t4h0b\c0+qkqk/s5;EO9HYR
%JdO#j34)MqMb66R6=M240GS5EM=.]4E"pZOV1\rkh>C);0#S+4R35Bl"*$@3<C9erJO>f`1^=Am2%6Q^UqI2",bI$hC1Rsd/N"Me
%3,gPQgL.hmS_W-/"e6,A5L(G1^;aeg"up?odp,4iUQh<Z#iP3@E8i,JJ>3/1;3OM$U(LY7%/npVKe.*"hfR>B$sI%g#KEmeTYD'm
%_UF\LH3;tkmu7tT)[@(@=-]VEUHD>)PdLZ@l??R7d-iYgG7hajr^%7DAT]Ot$8!ea^EkO3*9GC_qYW(@d4i?"n]9(-,4Z[oQ`:4I
%r'igM58u71n>E6P.MBL!l5$V[1=j.g!l&"Fl\=pAi&:iZBaf\G,KU"^^i04D-s51Pi:CIK[C*egpi_OOdf@/%RE@`dr$Fa_TsodO
%9h/(G0+IH@!%$@p9>k`a$i=(`hs@7#$?P2c?#F<_/0VdmAeY#t7=N_'L5IU9r+6[F.Hq"l++aiuRPr6*HJpnn@$0@9+;0oL$2I:S
%IUP2do%PIQR@t@Qr5J^O<,i6?:%rMi@L_lI-)=+7k-r^9P]gBS.d9Qs/W9O]pQQLO%J$![d+!-'OPb/DUFOk<^R6!oC0X2VZ[cQ"
%K_uSj]-o%UZN+W%9Dh6c@k,[CD_t+Sg]mQ`O*"7()rrs6WPgDo7"-q)Z^Fi&;Q!\lm$*D*L8#nlXK[ZoJ6IuU@KZO'6h00D]Pf')
%PSBephKKm,\8MP"ZW<UV^2Y)I=%fph1bg#PY]$Q5W+.`iDmY23CLu-WihDB8T<.M2<<B0dI?TdE+\<IA%DAh'b>cbGr,X.]>;>#W
%f^VA+SQ!7b'4.tu.c_NPJl,Of2m*N&".gaOTb3NfDC'[/lUXe[6hk7[H($N^KPrd'F2XFi2DI^cKiu8O_LnU+Y*B%FWJ1CW^,M7c
%X1a5Z8S4>+p3$r?7\R"?i+.2p5,*E?Zo8ZE3s$\8A8df`'X"/^,l<\>eJbg(lnb(l1Ild"OO)NP[`j=nF@@Z<'4;4C'3t3'Ci:#'
%bdasl=b7>PL@*4e6NtfhhCN93Q=5.3&OBkshN6]1:eR!URI(IF2LPrbgRB?,&dE9K?P!Feku31\1Q[:(g'6u)^^Pdl)7VW?P/O%0
%iSL_f"4EWlHS_ui2?!gJc'Su2krUo\S&$tJ$P'[*9;l)NE,V%5'$_]VRpNP_@\n0b-C"oql;YDe5i7AS`\PS]MruZPpknfX7A?F`
%hA^g,A<JV)]d`tP;G>&Vk:X=Mmu<LG5e;$L2i:$`;7ngqVuS]"DjEp4Z6J.pH9T?o.c"=W\>TLn&<`^!if[@EI.M#?QPMs`G)9tb
%j9EK[6&Er+MM,msk$1s(2fC$_^-_TaJ`Q,F&\aYJLCP)Sn1BD#AU_gRg5g;!IST[(5dF3+";?W-nl6_bLi8l-&nNENLi5>M98W^<
%I+)_6-A`q\=X(2GaS9@%I7+M(>=&ESALRb.IT%X_Omt#S!-1FePXB7Y27ii#hq#WYN;07Yab8RVnVuuahN8$4/\7(>KPr>2,Rdff
%hc,VT#;hBX;3s\.6a;Sg2c!eUN,R7T,WXnS)OeV&;"CMr/JX]!0YStkMRhQ5HEdL#Jb[5.6@<,Kj-.;K&h-Jl2pllQVWQ/9hpa;P
%+qI+iA&OMk@0kb.BQ>^A$/Z.;UN_eCHo$2H\2PkqS)V3G#"JsVY4Z<ZKPr<]q;,JM)[^3bXNQW\ENjh/fHP#k1jEr*+;%,J;BcPO
%c:I5,M=8\u\iqY%)c%"UHNX%4M0S!G!8f1?O)=!*ZTtUU$M]o">25!cD`j5/apd/H(/c%n%,Mrc6j$?2n_Q*Y11JGr^!fM83"<87
%/"a)`j`KtD2tgZ3ND-ou_tK*%B!6O<*:8_`8($)HG>KDQ,6`G3?T\qF=FMH%$<DJ:/(H^:iOGag'W;2;`:T'HWObNEa0$?)%&b*_
%gUR?MJDS4QVa4Y3V!F^6_@u*L$VE8E]Mr=rM/N0Ud1(Jh"LJn@hJoJTG[&E/Y)jrTgO^'Z4"h>/G9!SdXhf77cp>0JM;iB_jp'fS
%,r_r'L>e*na_b-JGiLi;iMK3s0j[<Ri12hgp.P>Of]69nphg(P,eKl3])dNrDJ50h9k(GDs/;Wr#\V'CNa9J+(<PA\9@\TSW$N,\
%>)S\u=:s75Cj54_l`sF#A'KmBU"q,)k\Q+/*N?h`RGH5p1.&r&]43XT$cm3Y[55a=JFR<M2Sa3\>V4=X!i9&b9.BfBE1OdJQ.DK@
%#WT+Xl],5T6S#2VC1"Ok(f[t$=pdmq8;WEaTPg.T,t"/B\mmnfQ8.2h-CtE%V)simRq6\3#(]rEFRuVd*70]6bU=UQF5qIO"lcb*
%Ohd1iS3&JGAAdO^ga4Ci8&dr4^tc1L?Ps3[>oH=;DGVl1jB8J;=:3k.Jib]$2+pX2,Z;[0>:ihZ^EIX8%l%&1[KU[b4dlL6NuJ7b
%IS/V0'BA1P_JprX!,cK*#k+F3d(m.W*G6/>,)SIYf%eSCgc0<&m%tnCqg41;SX1g\)n[/SX.#_uM6Hiq&qi>(9Ids<`c4rn!lNr>
%l,^']%W_h5MWO>;'RFj7,3RHZqf0&B[W\5M)Qm11J/JJK8n,e8(^;qbE9\5Vgt6+Jmk>1<1a'fS!4["iilEP<\$ICof4+:)Hn0YU
%KAS!c+Yg@j4G!c8-<kB_gZ0M'MDCM,Pci-l?K,n0;]-^Pr+uq(:_DUET^AaDAspEY[%aE4U/m%[a9><>gg<ZIb>t).ScEYC*_@.u
%!Ou9+(CUE((58RQjhP^_)C6t+&]%1A(`f%RJfC8^cVOa':mi:U,m$$>JV7DL!dB)G2?[ocl%s5_"V!0W#-5rojuq%DWJ4G.)QDX-
%Q5-.r]!2BU'So83+`K6]<`48Y$/B3n\CMN!2hn#FZ4)=(_P$\@Po/;ei+j1b*3[AO6tdH+I)KJ^b8K)h@V'L7(GtLgL;Ai^EGR-[
%\B3$hO-F'l];22PJO$Nk_aTs9:5QfH+ftYeb2B.,TnEb'K,ab?+l"@J2e)K:;_n\s`3'CJ?N\bUc14g<E5OEUA.IO3!V/19'Z8hJ
%JDp=$`8@HOLo\)FDc:X$F9c)?=;#AQCa"%^`L86E/ucK$A'5=2Rh,21aXG2J;]Eku/;)hLcVr/'n_7be;!A/[2PQ(^Nihg<,aO(h
%AT'BILbE+'D^,pWTY-Q&%2VjH%LdSD2F3HOmWKT7dV5r?Z&/66eEtm^V':%$-_jWQgXNUK$6qIMD,:Wi+I%]:EG0S:$J^YON@%`^
%2?7UDr=ir"a;Mp]gX*CnpH`VI_R:[hE0aY]5bq7/B2I?FYM#6VZq[E$/5bIgB:DJr*8tnDBt+\/US2Ko^.BAFKPX.*B\LD#dp5gr
%((;0O6NTbc'00M@4r!X$1k]_5$TYU'?lS/gMQJ2=2N3I1=rY+4:^kj`)7k!!U3'%ID0UBG^2YNRUS8>G%9f5hMps_d)HUT3-]oug
%^tMH_kP7,>)rtWm6^=n0LfTfDL/PFs:obJ42@`ar^aq4J;9JKg@;<^3.T?g7&)crs&q"7&WJs&oq$%7)3t*qM\T"*mrg%f_4O0(D
%Ti<"YkV,,9\A)uA0B':c$9le_[)4.b+4$J^EFo8=0>b*6=D+46Bnp;A1FR+QOg!umgbb'TLG:Z@UlC?`0)2?!M'b/1@C.3PM`*jM
%g3>\FDC@ml?<N,SQ5SDU3Tq?8FrHepNJc(X,;j'L$/0?\QCq^kBW$tVhXIiTVJ-C#h"t5PHRV'=<<IncB;<7)/OsI&_SUqZ6"_,U
%La?]O22s/P&i_t0:!sI3Au>i`C9ZBj;7m^Efs("f&;mP$^n;X*Rl1dRo_:(:ZWShmG]htdaXpP;6'XD3-,c%HfdKTe9eb(5;Rpn&
%Lqe[=IT(i1(N-1uCm52Tb<WC><s&HGctk^'V.gFaV?NJ2Zj)sN5R@%=/#429e4:*M"3m^nR<tNVAq)7Kk%_eP%*_O)"^.7]SYe`T
%YfLX"#8e@iLtRkG>X`>hr_]m)d;3B=fdMr<DT-2I3a0WtZtopZ#<=:r28!]l^_Xn#JXrnf*$2!d&N9<4jWsEMOKo5u]HSeoLC:\2
%(fE7&G4[FAUhhM[2;C*f>uRdRoPatFoAq6k@[ua[Pr3gYdR[fhoM8qI`&u!cY/SkORj'5L5qEXkVOVH\4_BqHEjBORM3EoLKcFS^
%fpJY\hdAItOMV&*f-taG;(O/j%4<)@FATE=Cl7ZIW=gVKEh+TNBWVF.6=TosPKaI$\Ip6Ymmbj8_.:/9'og%?1B</&EY4M[dQmD@
%#h'80ZD.^QS*M5ME(ZL68u8-!,kuC$E@'Dr@^8iT;&LZR2G_i.X!f=LAQ5<UhTGC-=Ap'9;8Ql8N(mYt_o]p/R#s$+P:_N$5<+8:
%VF$";'SFNi)+u`;-mkF6\j1[G$[R9J3.`)C2?@rWemfMCL;I!.ACKq"qDZB(ZbTWj2RS4N;IJ<L9K!<Xg'rq]L=_;.o.l\Le<-q8
%_IO=*)4<(,VUndioVhk#V5i?#6*c>&@oSSm(krr)?ms\fIEF5n;6m1J-AKuGZ6>Tm9O]F'cprndX[L8HP#N(WP\g1Lb*5jt2G4l@
%:nhKY:M?!RP\e0oOj]tgCgJTrAjo<Mp%!j+T$j1ee^K\TAFhc1+S[-,>9#rX,c>1Z"X^%3P\fR(KIB`OA><+r.?JAGdH'*tP0FUh
%RnAcY'FT=d+k`qE+%.:*]Xb('6ukgV:Ig#N0aLZA<CWTIZL`Y\,eHmSODI$G1cL/;9jNuC(DJ%G3,ja;BIeCT3&?N[]V()%[\\_?
%bql'g&L\gWNnlH6Rhg",)@RdYbQ'[](d^,4R3l!-meFo`<5h@1#@P^8ED$SjZq$QlD:"A(j(kP@EALR0T)iK/%Zem]5dko@-Z2]#
%<jbM^'=+S>99'(Z8QKsrPE3R\b7k7$#*@*OB\X&Sl&5ZY:CJ?b-'>CF$UUp("-L=?J8FM@88^,3CmN-p-\-"KL`]$IONh+)-/B]L
%BnN=iSO$dRXWS4Y,t'Yj@[_n$-t50W7?UqS$/&D]-1tQ#OA50WcfE.)\c<=6%0&r@VAdHu]d&>L'U/!'&_S^D?Pu<k9B]nh@V#(j
%oH>uKChdH*%Qu[DeW?X`,F`/HV`@+DnYUOU$d#7H,E,@r%D*V5@KXa7#+.kG%a!jgK9'o<P)WogF,#j;&om@qP\epEgK'/oc!kja
%Tk"Q#0TL0G2E`30F%\7aNujl$4?&L@p_e(JZ'9(YL+!%g.+qR`'2i3dfo0mI(Su[i6fqeQ].t\%7k_>JRMqM)K2&`W,t)o_Wq\5X
%7hR;6!j]R#$@IUr#J[nbk!2!L2gg'e[q>0_k\`VIrY@P<Uq,^3E9p+-\X&3qWI!9mYnL\SPf_R7WZNhM>!r1.13R,]?jVd_:t\p_
%9M!0hMOeE[9c8hJn2\'r.2/32-1hTY)]gW]N0f@Q##B&df^Lu_@V7+<Sjj!PGh=E<'Tt'$2'QHL)&P96=fHn(L$`U(OC_jqJ;Mhc
%$Cej6WeA]TFC^?j$m[6;A3buM\+#EW3CjrPfEftLb1CU:%?ekCY^M^+]L9Sjb83%a#(fRik9.kafK`K6AH9.\)S&fBf=jiLD"-%5
%F/__hVdI>,/lj`]?R,Il<(JoILVA@99'C%)&s$_If=l6+1uN/:`h9.WF0?/ZA<JZg'8DK6/>,%k&8WSeo-3ff0W7^`]VagFNH=/<
%4B#q,/eP9q5GGZ*JCj:WM=_'=8#Su7s2qk;a>&oOV-W+B.cV!))L&(LYJe!^e`Y5PY!\DYeW?q$h8ma7CLfdh((HG0iGh6&UN3MG
%(m!eIq4>cNRNlk\a66Y$=,(]8HP26D,$a0lkS^!KbahiJA<q.nbErR5KXZ[_7kC*$[tY/SY.fHk_adO4H&?ER1cWq9%l/"d9bWBs
%T5$')7o5g`!aA=a>Yqb3CO.k:R>Jr98FR^4W-)V`_&0&WAHj!IFeiu=1=;Q$F*KVI>3A3-b-Ue!5e)cZ%Lftud&b&aVUa/2X@#3B
%o3.G;fekn]#g"2GC%2VR3]%>V-'0uVIF>'Z@niI&O$AN,`m^</UkGu_2#bEkX<H.d8l7I'd]B%_i@S\E_gk(#[6[oI(W:T3#hH`d
%$C(YC^<Q>Lr+ZA2#jYI[eO7P/Ji]f2>MPEn=8T8U)q@?4!g7\!k\:SnF_p*@"3r"edg`h@_V7`=C.-ZF%&O4Sq4@"X6ETrh'3"1>
%1!>er^^ROfL>l%18a=>eE2b-k[22C7KB6+.J-chk=7)E_W[1hk-4DTf15Aj7MX<7%lB!Nu"?knGC*q:]V:[?(Gq]HTOK(%N4f(m9
%T^!(sInl)\>%0XS3MR9e%BYnjJEr_'S^KF^eh!UXd%'Wl;&r;Olk)X.[\]kdZ6tHC=1<'7W)hO'17pVd5tjqVXbeR%@'"(C9?:XE
%j.SVE"3oi&i\=1fFeXXW"/e&Wq'0QfEE^Q-e?R+bTjVW]A5"UsW?V^#ag'@\@;2^jZoptHAcYLuK8U&d`%bHSYa.h>n_krG,6q*k
%1bMc\#'n]8gj5!C8])iOc9s[Pg/eU(^o0C@.2WgXKDK^>[O>n/r^@HS8tcTI+q@DlTgn+6_Q\q8C@tah'^Cc@#<.E7o3B9Xh@bKF
%4C)D\LJU?6S"95HS3fs=<6(5*G:bkjRYm&k5Y2N#fGm!B9<%mET+%q^a6$WE.+CPW)+tElg-FXKK0&X`PAh+"%Ae`]A5LG/i.fSb
%aT/821C:G(`WZ>`,3c!-9+qmEY+\XHSsgCPm-2m,5:Cgr2IQBc)Y,_DVW-oJ"AafH&s?4$%i8?j6OK&IC27<j[+OW]2.gbU,hFu2
%F6I`2MGg1mS44r[71=2t2-F,lE>n1LXcQ3MWN07,_+c.*9b`7a%=b$bYQUFj'$[q'=OS%eC^AHSHr).AOeuVYjW@D.2e^nK%;4B1
%PVCR`e5E/Rh<HRS)@jnP9U?mNn1,8#Od7>sU1=E^Sc;k=9UeofQmNn:%<B1)CbRFe]JQ.\Kta@)kr;XP\tMcl+Aibl6'aBRjUGET
%2Ek+F,TVYT<@s?0_>,i[C(0gSjE<4^C!7bo9t"0g,ZHMR@&7#a(U2?;R(Gk]dYXZ0.8r:TFE%L6D=Z2CJC4F-MW%fcddT#gj\p0I
%E$sb6/CC7FUWgNLM85o]:0H#%cJ10I)A-2Vi`o23U#a'J,\[s;Wj0l9dO`@LAN8,rB@5I&1"*&)11Q.bSJJPG6G+JG4*G\$1ntVq
%,7&!;dATDg"DP@^8;N-)V"nkuj9Rt21#uPkO&#@YB'I^%SKptA!0:/o\4&pJS^Jnk8#O)2,F>sgR"#Md1t_$AKE<$+FQ#DD1HI6+
%@Y9V7e3%@=ct6i;"/Fhp.nj^>7>'5.`<?Zl*9\SN_F6tLgh]Sk;5\`r^nU'uT*.YddBI%>RaE&='E%8J;*#:Z&WJLuJtcZn1P+]*
%VKBc3@5606Z\=k"0R#a=<4Qlid?09l1Q6!O:dRS5V+QQ(PTXPR`&JaKMBU7Gd7AOJo!'6L&D1PjQkX<;%9+mrTg@oU&qI9]EF]]@
%W1ou*R.B#W?t^P$>X-BAcoAKPIPb\CT`,F4.WhWG,8LUqP#E4[8Ee]VapUUN3+<KkBn4PmheB/66bj"ooogU[BZb72R+%_i9H<.J
%BV(Z&mg':>-gXgkder)Q&/9_jTEFjC/X)h.lS@qSl!g`6Q32P7,[1306J(F1TT>j0BD901rHE83It+r6V0?B7Lk>@s]:H@r70hMX
%cHg;%;KF449&VH'qnK$6r1!#n+4jlU^Xm45\,,"^h69-(]l1Q/o(ZpCX3%!W9fhB3[q_90hJ[VD5L*mpfP>=D%[qf(.f2!7`mHi:
%]<1d-Y:8AWX5-nF%.ZXB?\;,Z:&a['-Dt3%F@NO`T8iQ<f%OuLG'4*<eE\sbV-<QsVW.92DU)UkXhen/enDa*25\"UTt*0cl5k,W
%ZI`@HrdAt5[Q2]@G$9NIL%^dH&$(sq3p`Z.(E;u?BK+mKKdM0c?5")Uh_2DKFrTo+Z^]CsWmDM\\mFc`7r:s?*;29#gWe#UoB^B=
%=.T.Em*1=6TMB]Zcl-_l[,_sjdq??1X`h%nqGF7UXN$sCc>Hafffs:SftgA$@5Z(e].KSkrF_UP`h/OmW*"=Ylf3R1T&$K-7_a5P
%fDKl\c+GO,jcTBS(RpUli1AMOZhN;<MmF1Y_Q0<c%n#TU<p/fZl5hd/NBt$TTl9M%UV/4c3[`1]dU%Z3_eR8=pTV-[]\dKEm'\gQ
%[&?lTL-At1]DDihIVVbs\pUEbT_s01$f"iuDV&c#O)cJtSEWmgHBam?jgrJRjau_oDS+NAK\uLPDQ>ubbY8Uhs)rH5bePqqbZ.IO
%:![k/ZeY1(2a,>YcZ3B<p^&;5/6Af2@rdm)pEngg;lpY,J'qJ7rn2+kml%VcIn`X=AqT(4n(V_5UFJJ%#?r_'5?mD6;W3^9X?N_/
%D6sgLg8Y)1.;,#G_#;8]^Y`dJQ;2>RBZnX8L>,aoAUS?Ml["gS<*@b\L:F<dRiWfhH?H^+qour+ZXJgUqD5Qs/8'5IU+j7U2S8?o
%n)duh-_FU8qoks](#>P6)qLCW?tSjLp9kp0c1T=N[0Dnr:R?`ae;XAmF7\)D8b6O624PClDD_3oh<6G748hI?;l*K$?8An]3Ro'n
%p[<`PVg5ELk*M%kJR^lcS-km%e5*ub;lLWZINHcEop)!9\O&)9%pd1WlaAj,a43"Of>$3YXQri6XE)3\$9]&8&ice`A)o3DPpM(_
%[Z!"+<fU$]!@e@iHW=\"h@M&+PrAD;g>ELF%2H>7]p"[?V)AIOh1h-iWmh5sG\q-d>(bZ0k+ISPG-#l,F6k.s^FOb'HhibF:P6&E
%lbjIrFE8GJ6h#@X^#S,$nYFjmC#VdGV6j0LU.o6LI+PipHML7JI#`'(4$d1:s,Dhoq632HNOn\hdOZ;Vea;A]qrM_)^!pgU5?BO/
%::_O2]20X\]%>SL*EJSCVW+g@GH983<&$.heN%]V>g4b*@;Kbc<Vk_pY92XrhX'qGG.[/0:5.eV"HO_TASgFoYt8'1-7NK.8taLP
%nbRIjl:LIkSV665_<s0Eo6Ua?)W,=^O0KMf"9ukI)Hih!f-`VjJ"qlX4>%"E"]t"EN:!gq6iT9WIq/fA\849;%Oa<Y8#Nl.<=M_@
%Ea1qr5rJLf()*rqDH%HRA$`dHC!:j'X._B0Gm2sNnnt5OBsuW_mH/"<S^Edj%'+f7(!KG9Dr6nJ%!f<bC%W"jNQpU7ZSQjS3#Kgj
%B>9SbY(@+,/5A6$c2:N;i^^KMj4On(O&b7>;fSU7`0&rP.d5C%B9*r4@.8NFEQ\UlIWF-d1"tqtV7mf>fhj&_F=_\Z'm'W>1[?PJ
%B%#L6[O\rRCq&-cC9Ct3iH8gYddCJLo2J#e8?H;XUVb/MBTRZ;;ni:"9fl7&=H..(s(Zq]csPHM0kg2//gjP<=AA(&3u)@*"$+4.
%:[pXtF]P4,ct)bU]sN>i@9#._;K#Z3Bt$.J7YT3Dbsm'O8[jS4HD0W.)V&Wo9NtrdD/HZbXZn=q4'Qi\-)g3;GJD:l`+hZoP:E*P
%]2d/@h'&CA)P,H.V+'_HpNhGu!40ot;brX?31t+`Os`ke`f,iP@d8e*9)@45,AYflqF#\)Ceg-@8ejhK(qQI>4#mC5G5.'?ehcI&
%-l#.n1%@]31oNn$(M+dKcco&P7B+_&W@uED(ZjQ,D5P#q,BhWu_Z==(I8MJrLa0Z)9p./%Q,\c@6p9tP.$aX<e7ZgtqP%e$OtTFm
%`f/*Bs-?]SEV-60e<f?#229eNisj>8jP_u`M=H3sN))rkf=)UZ)b^s\E,kRL$CNU:^TiN,*;?Wd)S[`cBB[.:M+bR1:<Le&>s$BD
%(/<Dg$D1_;Y"dNUl+/bgle:0$<\bEA-;.TZU/Rtjg2p?lDm*nS@;V`l[HX\L?.Jr'X'3mpoR7)>m8<a+'gBGu29ClD!H:)Zc9I<J
%kqoF0$)Z0b3fQaAk.d#f.<K<5"ZJkqfB8D]'ao/>eZ*El>\j;oCp15cTAC)%k&JnjEj*%24Y`IVgu'cdc;o"ueN#Y[B$%1@T\10`
%<'n,0l40k/DA@iE(k?>G=tZ[ORcB.[PY1O1RPdB1Rf3>t1hSa[8u3ChQ)<^#nsl-fB)d$hg&KsPIa7q>/,M^$qh0Y3mf[YPile9W
%7['+dmpA'<%`^fC;PN]dET41QSH#<&s,]tis)jgSaG7i<S2$eQ5&YW=&%_`+kkaZ8UikrEY%PXW#aS3N`c;fmTI8Ho1/IUu3)-E[
%i?U@T;B,NW*nVsLi?Z$;W=?[W\)F-s.^d)5U5G_t)XQlN#?>r/1#*d"Mu4g72kFqd)65pk42D^\@Zqd%6c;"^G&3\"VNH=+qsW&6
%>AVpTfRJYV*ZVSm4LP2amCuTsn'q=u[Jq<*W%kRW::$+BNW#2a'eI.lF/u$o27<7?VugYNod*P+n'pJ][J?Cue?0p-\$iaVqp"5?
%-^2b8<Q<Z-<t&lKI;64Fh7q6Q@_9%S43/nqDZ[^WTnPui(tqQ\lH6>;O^qh!4Z'.3_GYj8gWma6Wm*"p+7ZaWe9>)eh@m7F<Gp2`
%6Y81p;[qD6fDQ"Ih-4URSZ9f/C9jh-CoSho5-\iX3N(Zdkr"s$>FC`.]TqkiXe"m^5?lreF)\23gq)&'2**,=[AWl-@;NeP"a+G;
%F)1epE)J=-dP*L8LG]F6$I*:nZem7tcO+fMXJT-7;%`=8d`,+3;c_tPnQ<c%YoNJj@Pl1FQ)X=_Um2JhKB?bm,PJiUjM6j>*\*+0
%D>?1+Z!UfmdaLhGp?pfCg#:pq%EpJn.UK!0Q`8tUWd'p]?D`UHWT%KhGWBiCJso+B0<0`"rai*S);u7m<:OuM`QRc3MokM\)&WV+
%\fQ+9>(\Z*TS^bsV*10.AZ@L(k/oO;Y_ai[J5M(r<,'5a2DGiYOAjfMYSpQu_f#*ja7#D<@n<p%@'.g;;;XRn*(P6>)thHq8n&]u
%c#H?b)WAs2SB%aoh]St<-tBSB:'jUX7:8/H^J=#d;u4qHL?X2?^9kEHIXS]1ebs9PUh8&LngdP7VG[.6,8,r`3.$?IO]s38TdATt
%^P=bTWjJHd[T-?HmHH@rX&jLl]AFT92Y<GB'pn!$S+FtY`rG$9i+mX_1(OJ^eh`MY/:2\0S%'-#lT5p/*hg3jC7[f$iimSg2lP/p
%^KOj,4R9B2d'iEC`9DR(%4cO''rcD56>s8$<"XJ4..u_KN%&Rg_Xn\m<0&b'B:?*W@jD_\a/IF@W?,P[:V,REkGNWbW?,R!H=j1t
%R-HEG7$$lq3%O$B2J?(\+Ii#pfljR(3G>dlG$@u%ZK8YR^PBN$:n"ceNP0Ul']6YhBFQjq;Ql>qS>c1VeZKU/>cKro*ibkMR4)`E
%kA^H(2U26&e4%@!_ePFB:k@-&dHEOXopQs5S"7eR8%9f:7sX`$qQ`<h%96S7L(5,j&C++;Q"#Ug3d,G2@YVTaZ_hQ1Z!m6'P!la*
%h>JhX'WV\H,o)SA%D#Qb=5D#Na7iGWS-L#*]bE[a%XT.Mm;,--:Sm!6IT#8-5/cru9#lT>;:V6kaD7e(X`E^!/;LE$c'^V?g#MMi
%Q.T(tCrG/CW\e/VS\9&0jS_XYKE%$FBlKA?2K%Z1M:TV?[jFW^?btE/$ruiC^S6W.VL1Efb>$<'_dDQ'Vn)&+DL.b@T&rN8-o=*3
%rO\u<$=_V_TB7KI4`#G9)kZ_,"UN*bT'%T1C3lD>*p9E@\`n,%bK2M&c;ck(KTgPKX43[(EGgGiF7\f&*9aC[@e>_'YIiVmSR/)6
%[Q`s=\OfFt:dL>;!Z?`BNiO!^5:1+&`h"\8j^V&r&nB"J(h2MPBCYgVJ;iG8UYD1Z-`P7,DR:@PHad`fe3.J][K`@A<`6'm#G9^M
%[+&8t=Q?Pn7eX*T7hsc70%9#*#2WJ-U5@?:INA2qjHZ68-d5ON(uhRH-g5PqZIZI@c^1PD.$qOdk4>`r8iV.9YQili]9U7ggR8t,
%rj5\$fYF6u%'+fA1Mj132CaQ'V:rh%<<Z0]raB`WZ.Z54XE+!u!VRTmUN0PlZ.YJD-eb,1Kt$ALR!Xh=Xo6.0`\Uh?=</>\TFEd5
%fl%VUh1`GXC(e"I+Y\2UQh[r9U5\TORW\H&pO!Q*!fqJ>+%p<cdcI%!A2)Gp_7=UWNfA-W6-(qn5K=Z+b=dT@^'^@*H/#r\+*9Th
%F#>YdA1A9fKqe#a'MW/5DuLsH3etaZ.%3+1rhMP&T1a!f$:.U%pXaR_KoL#Sb&#`Miaf%:L6KD&V)J+Dh1h,@'2!*I7f$)gG>au0
%)r0D[U![WbG5%Jkd/IO_6WR:PNrJH+Bhlb:emPW-3q3J9h&Jq05o]LAYt>t4S)\1h@CeIZ_Z=<W2TY/&b&hPAs1NCl29=6WK;0pg
%I%RfVI/;m8^;X37L^@Ve9NG3aM'`k+aatC'"8X;*I%,.g7su]@De->X!6c:<2;G;oqTj.Gfoi[Gb9*cY1/i04QGSdA[-hR.pJ5d#
%)s`\n]A%[Qg0>TaAR_s@UIdn%I/f#4@EtROB4T4^![M9iJj_QgP`5(/AK"0^T)D=PYf!"0@gncm38_<N)/j"m,<:PW3V#fE9F9pU
%(Z15/4;!=21$G*h+)5\YFLks2:DZ*m68[Z2c(_HZW$cGuI^@ksh.u\<W;d^B*Zd-rWq>^]BICJs"Vj6@r2QdnYuH(kX3&&mcK=`'
%>Xg&SO=eC.V`*eWm/D*o%==JQPJ<J:%FmIl7i[0b^Z[O9rTu)&'Lm&c:Rp_1gjoYSYOslIi&MQnZuj`8-0_Doj1*s>bM-L<4[%bO
%m<G25=FM>.bO>'-k=gJLEH0NOhV[^:fjmW)$W6QqBt(F7h1^f]GqEB<m^,$o^\mR#Sf[B>M>V4mI@1!1),oU,0=87>h.YB*HADIT
%g65"(Z.&'iT(TOtG<G2P2>QQYUYThTaSr);?Z`pI)munn0Nb:0CGuGVY1+6Z'scFD^VG&,bR&3@GL#+1$Jg?OllW_;V>NRVkM*ag
%.Xt[h%G!iCmUu.Y;5a:mLVI9G?!_>slLu7dn#p@kj(UC[A56_ecC[g8km!LN_p2;S($kG]DPPa]8X4W`[a9gL>3GbPQ`Uc:RsSdQ
%[aaNM2G;Zo\pM]N0Cnm2qcQ]F?U(i8ArZ*dSi8U?fc]#.?_sL*Z/D5Hk0sA0c`'(OIeo.krDdp0g6:6/n!r+_s0=jQ`uhYfDW1S^
%.CF![>qXpU:8@17Qq+P'CQ73/fQJij4'RKB_+@?^rF3/-N:2";qf.8$p!9pJ^?f5JfW)&b96@Ml\Y<DG7DH7fgk@]pj:D/;9O2Q[
%FT]*2+8Ui/i29?BY',?!FH-ms*rVc*jnLjBAh@TcW-7uJ^NoS"B'7juei>qc\,T@OK'tcm&Cm9S-VF<d`=HDD7_%tT'KTrkrAS`6
%-paCL%9tik]kIoFX.90GQJ0U/ej'"#]YdfEVF'V>>FaE+m$bP92`D9;1@dr![dWG&f#]D[EOl`=%L8P3?euip(%*TEp0Ur>^WUTg
%^<^cr<pTWA)A:q;Z#dS!9sR3;_2Hd`O0PEJ@HbX7mF#g1o2$5"p`F6jr>Y$:2^'D\EnYWL7Jm)<f'AAiceZR:]@02q\nFkUmIN!b
%ffC,JWCIg`#nns%A@51&X;""$kD*B$eJeGsVT\XS\c1mUqJ!;1/3_k!p?'cfFLdtqf@/jX.qIup9X#EsDX8]PT,g/i*0,m[f1O[]
%lJQSp-=8j`-%!46J,PQ/Cjg1#dHe2eT+C[n9D3JLShA]'V%uY?J>us8#Z<.)*B+FU&[\8/or0#>@OK;en*-i8?+%Fjec%7)hVQo>
%$LTs5doCb+C/7puo<$aHV!k4>mXNc=\9E/+s3'!R^[M&L9c)XMU,uY&^HtnCNS6B!P9^ad-YFSt,:?6"=%iZ;P'#crE>2/ZjRHKX
%7m]]5rk7pcak#$@]Js3"Vp"aT\c/&Z3_Vk!9'FD5"_".KFWbR<faeSDCFnC`'ZBE]\XkG*?aEuj[1Ab7VbL&+7V%o.c?fAX*i5GA
%a!&YiYns=PcFG@oiW,f0XRpDHR<7u_S9)#SFL,l'XNc&H37<rW[p#j4`GZAM;+uHq0D:RM'+M"+VWHnfb%+$49$:a=2`g'L\<HMu
%U*se8>475Tm$]6S%j4,M5D5-"K3ZD[q3uU:PO_<),i[HY#Wsb`bTXku'$nT,$D$PMJM@js4n[l3i\,P?nkG;"pCf(s@5`&`<#_<T
%,5"gZVO&*RVgOE\>CMC5P(I86q%4#r$bd_Z2!6iYUT=!<Ds[%gLdB_G`[TM$j_K=s@J.m!KWL#1A\*@:7ZZH2#U;Q*dIk66LQU8k
%"5/1*)C$14iam?)J;D3]5^;706l\94JfmY'SJ$6$I]Lh3`_e)"EHqiS^iT'[LrX?hr%!D.Pf)X<A5`77g1$@lHen%Ipn5%$CXU7a
%kb2u5>+j@)O4f)<b:fJaEM:c@aM+]C*bX#mjpN8P6!!GCCX?sJh&:V>fuAg1=\%AN'dKJhB=6bh0do(%BUABlAH"]02R</M*1sRd
%m.X4/KB<t34720&o,o!:rFZa=+.=]\>$3ZWR>^gu'sAOh!rB0DZffU"Q*XonU<C<JjU3Bu^=Y=_Ge_\l+1)uZjOYo[S7b1/UJW9u
%_^.KrE'-o95[=i9FcP-LbRB2\;W+FBW9<&;^AOSCIgc/:o#Gm5Ib`te2Ld;c4L>RBkW8b**UR4!>XQir+ZW<H0]in>j'm8DJQUq6
%UJEoH_eDIi9X8HKC7p",US=h;6A\0:qsKediG,uQfH1[e[*\`_H2RM?\jO4$S_aJ?d*?/L7%FY?mCpAE!`QD^DXEe+/0?p*K6,7e
%l)K74<Snb_<F7,?bC<9VE.6jod<'6/[^LP4(Q[%mofJQ6c>TC\g;&*@>``c>DRGp9f=HteY;;g5J.VPNdLIm:=rJ4K*YlQ@Japth
%L*s/\&`Y)5Np#8KQWNeGHIu$mV%3J8W]2&3ElAa22$EZK;:6j6"6->+a.g(oi!SJt4TFfur4ks6cgtpil::A2i]HRXJAgQZ;+a3c
%PBp]=9@N6dlcMIr8>>I#pcMLOf"\harK`^-%blV[`T:pL[=?QKQSX8o-m!Zd:#AA=F_ltAe$$t??YTU]M0D$c"^'d;eA\gb]9uAk
%Bu\jrp%Q2ug[jcX.NYlkq<eU)^mi[FEofO`n,LrsO8DP9?giT[X+.;K[2L$'g![&??@I@XWSPo"J*FD:7;GPA_eo"ja-h=F]mj`)
%Ph`s4e)hIT^],%BP[ATlh"rUIR'%Z`>lV1Gd;@oEs0%5>4]6US'=>.th9Ek99IO(Y%'n3*nbinqJ?b)@$Zd'ep=u1_[H?'#k4[_u
%jg/RL$d@L</j>\rRoQm*h1+`KhrlL:Tl)Nt58@1GnbqR[:B19bNF)Y9R@N9<1B)5>pYW\Z^\mEMJ#Z8QF#M9'X4QcWmPVI'I3qnc
%>7TGlDr=*cZ^&5ng"Ea=]%NHRD[rAE2&.$5XSsdV`BXANVp_4k^9@5Z>"Ea4BkC?/l(JW@o.LG0s/`pcT^HJ%GdMP`YWq@>O21>\
%?&.XgIKL3-G1^UP<Ze=@`k5G=3sk8grB?E&Q2B<cNPP<1K9a+,DJ`.o17ia<K'+J;Od8dZp23eLJ^3\.;fsA:n(:2JHp9TsI=JZ5
%BPp#GH!587=uYn2_#e^2B/T/%r:9CkUXH4lneYOY4hKIo9KCG.pbX2^EfD.+`:e"h#FVB=j6EsWCZk&c0790@0,b_%Jub^n\ljV_
%Ho.XVCpP(;pXjBo)I&W>oaP4SrPpQI];6F28n5##RmknJA(>^;<]?5!8V[PYa,SBi@:Q3<>O*=M*gdOaFS>NmRI(6=Xf_N011U"s
%rOnt;rIaOrBN_+d11NF)ZZ5<([@h)^(2\6L]t?(XX0opa6+?R#d2t2lXj>7eG@dgKMed[1lq#tr*7T.X?/(qalF-QFG%8n#D*[2u
%]MV;/e(R+JT\6C=>Pj3Cgp8549Mf;NFFXUUXM6\YAWL\FA^s"(NsnEUD"IoNh*u=`QF3r4RM^@%Q^h0Wk%/IDa2+0dGButFlHZKd
%Z^Qe#%/o\VWc%>IcE(5tLGLIDn)-ZainLJFPV+mUIl@/hV=.RNb-bQ^hsC<pXM&<H4fI2mC(2(#X`eJf2APQ3HGA:lBXFBj%h@@m
%]GJbKaQF+oMOMWWT3l[NMLWhtic3ES:/?LS-Q>*o`BgW!3lt[(Z7kdEg#'2IRj5$.]U=c&_ne(2M$omq%M#f'IE!SRm@RERS,MTk
%h7jK34m)KDlt>e=J(4C<b[b^.gU88pmFFSSD`ELNSb:`4G5)!&$V^)J*oCu:cfX@4lg4!82`dGKojdN\"4O%$5F]=gW13ZSY?:6M
%%UNcuD"C6mc`@6*+#F26B3+:VGL6&Il`G);bEH36^ARk#YOU4YJ(Njo:#,.0f"-PO%hm]KCX$2cTLiA]rG80PcQRN,mm1Zi/r[=e
%8e8mL=8ZrUD>ir(+08hE%A`^AI'YW?10Yj,[PhoL>)CLN#).o6itpbQkJIL9<:+\scY!'A)b5T$2`cRl/Z[_^pUoi^$dM'n1%!iW
%lFk)YgC2)'fb_b";YJ_"ml\['qNo+FHbZ.h36PE(SohH1B7G1tA>Kh:jmfN*L93Dh%iU)e[3'V!Ob2iQB8,B"2Hr7i_.IV.V,Xr!
%pD93KGdRG(NM8l5aEr>Dn]Z3Oa4Y!-eE(gqj_K)>bJ-2SDRBuK$S0B3/#B)fX(=B`)9Z5mCgd.[TNK.*3+i/W4"b#c=k;-bH"hEs
%U@'fX$L=PIl^UrA76Y2?YV9Ta8!_OAY@NJn3k@_El97;@,+\\;gtLSlolGL4e3<2>aZV/'0<'?m#:nCfiJU:(MP!T2GiC35<Mn6i
%Qhagc_qda;WE'r7q7")#T;$4Nk\_pk+B)`-^lQ4^(\R:]7_=(Z^)X9+heO6KA.@?VUL#TX,CBB$QPg];YF8$J&3djj-B?Y5,1Cg@
%A$.8Zpf(M8LORn3=RBpKCP>dOX:K0es5F\&G4tYGp)C]YIWp-c5n:K(]HF7n?ro_g_gXCGO1<<ndn.gF[F`Z_)m<FLc0gQ=h+XDU
%(2$Y;QM?2/^3F'U*V\q"TY7QU2s3-*]lX+";-iK&:0+:B4kSK7G+EfSqHFqUSU";ACudI7)bJ`VYOtZfnl[8eY*$n5n(8]+.Mc#t
%EI)*%Os2WAm5S:O[@^13Km'oX)Bn.Z4%e$hf5*la&tWF;=*T?WFAB#E)P3;%JX3EZ>IBGd[?Y&F'(ep9@(<plN9":`KL`f2agF__
%m?F)_).dm_m>fcpU?>[=kL24fUTJ.C[F7/(KR<&(Z_@5i;t%hsh<e7T=f#T&^X3td2\+,<&Bk%BAWtl^L&G6Z4K6J8\!(t3!,@D?
%g4?8IMqXi=cmb6,>797.gk-R-e(_,b\$I);4">X'O/g6$j+_g&=n'T>mjstm!k"2rhR_!hebY\egU)/dZf7Ti['[Snd,+\BaoWlS
%2EUk9a)Y3pct\p>1afXcl`bQmTYfm=MPi=^gK(W_1&]UU(tJK6D=F>%b\FFk(FI-NFgDZE5bONj1rp=XmD[`s&+T&.>'.nVHrd)g
%?MEBZ3fp^PR5f1e]jAOCn''tS*4O>ZohXnhZ92":@OfkK'\db2jl/I&5nGNY8VPmoRoH=kI$<UQd<90,YgkpIoohuQ^$T_#e>3]K
%qM-#5:AW$(<^1A;XqiutpujAIZliJBf'3-e:323\KW!G=!<N%W1WBtUAm8'oN4ZK'gok-*Gl0Uh<UB0414d/bg=JZnjoFZR)gocr
%EU<Xa</ZfAqu8i^-u7'%HH0%Ooo<eeh!fus4'trMTqZFc"_GksI@F:P:!snZgTAq*PH4u<7ud)]pOo!kK?_kG*7j>Gf);\TF]e#V
%J)nI&,`qAoeuu;fYhJeZBCiLH,*c,W?jFpGDoTAJ:<+8Z:8rF!R:10O-q.G05JOs4>J7Wg\S2c&HOK75-aN\EROcO.a,,p]-(M)X
%4llu'@!'5Sqk$Uu]CMEH_=!]rD\4ddRg<YD"JmomE=L+27UJ$YImG5nfCnb9I*l1r4G"BW2IWbh>AO2nCp,^CgWebnXuH>r508h-
%Xb1fG.0'.%mIki>kMk:*P+Rbn1@)X\A8?:qe-L'dM\O`0F4Fc6LU%0T.b\.A\>oHXd/om9@<,M)V`AC;M_@;_k>_>g7hs$?oRERr
%8rkH%%iQJ#)kNm*\boY4\POf0M,[Mu*&kh+p"!13]mnnoGlkOmbhs;LfbCDCHHfVO7r#%6W+C;kr;$5t^NQ*;>/((W7eXB.GdAnU
%oC`&9Ve_8Ur[=.clljrE\kmb,kDcftpZ9!7NB_OrCBrO)<pOpDfg:V3n29:(3saVWFl^,;iM0Y]AIl4.k[`/H2X'-iS'>,p)T,%H
%h2pqd_<BW53,#cZ`?s/#gt]jVYBErk\BSq=:Y+]?,OR74lgArq6EP_(Yd9*=SqRi("7lO83P4lpYB=g(IVQIT7Ba++m$#o`hJ;`g
%YF?K7>0XfW=X6^Y$)D5Looi`8Au3XCB;t2jm:@$CZ7/f4[F__5^hW*jE5m7;3*d.M2_^T":O$Amb5*5b0=&]LHI[QEV^fd1YOMGu
%$/AKD`Y*LTqnD9*_tI&,+n(?U>dT`fMiJS[:$j=a:3Vol74[%f('ihPQg7RV9ME^8@!)ZhZE%L*=mK[@b_Yl2b-'p6".q]CFB:,s
%#^9kM=Df+7Ttb/mnmd_V[QCE9]9dr(C`*3&mHp0n^DB@PIIn>[&=8n_c>)u+p<"'&HF@DYZqf&0=m^$;+"?O-;X^-iHC`Etk,W_S
%FD_"Wno;&E-0sP[f,ikqf,aZ::h;a?DYCX\NPXYpVe5CrnbVm7Yah=-+14.6Q!0U_0:u!Rkilkqp5o^.<)`WpIA5`D;l*\1b>#t7
%l;lKLXmMDhN%5=S;g^`g5?f3/Z+a=WcCAOfGL/@1B6O<^%Lcff/K0G*[hVm8`]:BCoC`uh&=iUM0LAPQ@jc!hNX?Q*RpS6J.P*EE
%XHP6Lr$^`1@gZ:#4j0(%Y0jc::PB2%2chI9$9I1>_"_C#4B9H7dicC"Mqj<`KI]f?O#_&@?n*0]*DRQ)p[OorT_W'kE.=Y3BXK>s
%S+;:e$BC&[jH`L#kEgEj<6CiIQ_I2E[Slj!).rhd"'s[K%%^r;<VZWk'rX(ocOb-'qj2[8:LE=Gbk,tY'#t;jKblm<%p@`an#XiV
%if8+248,i4P6H$\*]PYkB92pnfnlN\+"V5O%m.=SP8s'n4*rhQR$ZS>Q<NGEMsJQeX%Bga4^s>nKT#MLrU++*p2K8ErKeUUoN,om
%H][*qf=9JF]sPNPAG39XlY4&hHgT>GJd9WjgjF9XOLFR?H2BUIp<2F_]t+$$%mGLB>d%N1A#3MHH>06_^\i$t]580E^AI8<rkIeS
%Fmi)ok>aJ<iBe'i^0$?OmBj2A0)hC>CF6U,FJjCkhIpdC'uE&9hL3&"rG_!6J%ba"k3>>3HAfNjq8ob2nEVm0r8Q>QS+q,i^Fgit
%qZkdbQY1:/*u:'J&)5c5=)R'M(YN<d?WpRET)E[E[:Z#f^UX$fc[NJ)'UR]_DY7Al^or.9E+S#(Hp@L:hW8,5/N8"un`rjG3e-mb
%+$X)O%uop_Bt36kDY3_)ZmO&S/IM7D$MTjqhqe8Or>H^ChVEG8bhW)(j`#4UJ,IbqJ*FuNg>\$OrJUF</m\.UmsY#fh2Me$Ip:U?
%o\e`OUI5'*IPlRM5J'(*i7d1,IFh\+oq-IZ(Oj!\r:.pXrqZ0@_1ga:.!jP"M-eF+nuHuD5/22LGQ5^!VGFM@nK2p2]("giG2^ub
%?_t!rf*f:YlcdZ4>@2a'6<p+I5KoRBl-\s&q-M6DT"0\1HM0Q"bNe]sKjtU]V4Z@h9)Q.o(Ynm\^\mqUnbLa3F%^^qbQ`Hib6pBR
%J%rG_j5018F58cVmk;A6r`Imd\TRkra'W"CKb9U-p)1jhmTfMi>B>-5(\bO'L\H8-\,%Y5*c8VpDV]b\o@i"JO52l>J(fjbh0j\>
%C#iV\h#.*G`nnU'okQc%HEhpqcGQ-0ldtTIQ<QFT^d5p9Dgu$52Vk"b]>&7@>InnIl%cqkO1)4qnc!Ipb9QKIjOS)G_6^`mcLo)o
%8&*8cBDqYbg<tBFo5?.[>H=*rgF]i%[/HhEG]=sgDtLO;`STaWHYkEaLP[eXo>BqJO1U>9L\9J=96\):qho?1rn<q)9,if2r5-\#
%pAA-EAa.=#+-1THp?6-!k0N_R/+.e5p;Z6DI:hf]LO+C1Fc['hhK$=/e&)4CF@J@Yb11\lod`hqI&p\gR9nu_Qeouekj6"\%_p9F
%]A-,NcdD(Sp9d!\.m"(:1ljq/T<$;^]t7F>]tX'EI_iY);83r\ZZtp3ZOjJ$dS8nRrUNbOhs+;2Y'925+5L,!?i,+\WIFfrn#u$J
%Dsr.R05Sj>WSc?Bh6&j:CHpG,Ib_%%Z\&X.s6sT!&*JCd=HBW2ra(ZApUtlnkD<PAmfa6e2db-cYM\'h6oWY7cb5A)5Q:HI=oG7"
%[s.+]3psEPd`ngCp#Y(Chq.>Boe+b_XaRi\IrOr9D12*1_/0(tr8D,`ET?'UqU;(>?)b$P7B?*R2\oWjp!kEUrMB,JAc:0<LRJ".
%me+3b?f0bt`FIc=Go>4`s1/*:rl9rdH@=i(oC_t2RtD+AmB%HPf6=id6%*[sGu3D5q9-g)pY!F^qT$k4+7"RFhLh6mC?'8Fp0d.,
%bhUY5gs"m92_SgH/cXnUbkEdi1#kB1gm[ch-i;S,B#5';+3l--03t0[FgL[_k/U,S+(js5Iebt0]_d))k2,QfJsk/5X6l=qD]_*2
%H+*AkR!IQf\MNhtnES!:02?\c[u9XARJ6%?pG3ccfqZ#pXa2e*Qe;iAB+NkD*3:HeGg,*ob@l'2]m!n.0)0.)p.B,\p$DU&oO-8C
%In=7i3WIfLZJXllrp[t1mFaSI5Q!RSo(:nIfa$ig^"LH0pMS<[^&9sYIIZ:ir9Q)C="_b39+PWH)f(GiCia6;J+eNhkX5'2g!93N
%h:_e_im*7GB0U6?\9*.EkJFXan*aS%DE[i8+frH6^Q?0Xs7*seNt1FkQ<2j7(EW@0o,"!'HQ?F;I_C7._WuoFpFj1mnS7GXj6#]H
%(Ufqug:a`b8,r(q_;P=0`VQ^SgY$'hcFnN"pu8^!95cJp:E,j_d9uLu`?1\srHN>(fj;F<J+r-^MbbDM^2e3V?FY(HQ^P[ZMncaq
%5$m%@d#'H)GlPh<`ImR&rOMc*,FH*M\+T@J_VG.,>S,6:R_-,mr\etu[<O]YbhW0\eYBZ&DtZ550BTFpT)83Dq\sScV\RGC1rJ55
%3\.BMjppRX]Y65SIm&9q^3Sb`V;Tn9KhJn(^@h3Jd\C]!C%^0Uetod`5Q5chFmJV7V;Df-T3U*1I^sW9s7,CO97so>5@HF^o],?8
%jb<*oc/g@5DI1'U+W4P!HgfOTb>5E$o(%^aqV:2AD]>14[iQSQ^>*%8U<A1c7l+4!/N#JjgfV;!FsVV8pr=mLrSCnkErY/ls2s'4
%hU[rN&!pX1q4h/DFJ\Zj$U!Roa*&)%]t!Y'g=:nfhe'&]moDVYrTQVPGP-N:Tm?=o\SgHm0AYdZ=#\im[o`<-ms_l0ke@)ag6F0M
%n#gq-p\hL(%q[`&Xo.-o?[I*IV1%b(P;g0jNLBdbCEK,n$eGS=cf=@Hf.Xn2?+TI[>CChrL\^@VfC/G%[B;aKm*B#<jkZATIIe!L
%me-O<^";j3SJQYEo+unh2BUhH?^tJNqXO7VU\8kTr`/aETE!s=lR2:N$dX%[%sNJF(9T7fp1,>8gLr7qffd,\(*:0#r-I>Piu]m)
%1`j>XYg@jOC#>;'kl5U3rqZ/F)p-ZIG[pR=_='=Sh&Q2KIXV%]pD_e)$u^MuqgHAmI!P5ea+$+]kPQ#PmPtd_CU;<eSX%gP`m9+t
%FKu.`(KW7Sc5u#W:TrPmDm*O$F]TO-'DH&sp=p+$\a+D[XM+0WIV^T^hX*tf]H=b0gYS^ehgb1Q>[=l.D)KpTn)NH]9E(3Aoo:*t
%=8q]U_`qK(C[oh?s'9s0NrS).:(kd`Icb1%$#U0;Y6DCbM!'AF^Kd67hH[`J#b&M5kQcP969i,kGBFIoYN)&?rpoX!nE#XB=2N5X
%*@Lc0rG!<X]t3i7Pdl3*M!ckN=H?cN?[j/7ZnJn`O6J<=n^Y*7'W5$@mU:m_s8/QMnZ*bF]m-U0]c-XSYh;-ap,`$._1RC$dIL1s
%r;,HUVb-4%Sc@$l]=,h$gM"L^F'\SPEY9acP8P04<@jc=nKG?qB?OplOiNV:>9bT&[(CTI]YFEa%=f^+>uK2.,<NMa8>^;?8J!.5
%&-Te@k!-T[Wh97_G<VBIs7t-Uo7sOLpu;44l[PXoT3qNNo?Z:kiksrOJ)_&8Ona7ac0)jOro;htDgq9*CXgQ9IsU;/SJU;-Rr>t/
%g1u36jb6K:qe#H:pRf.tQP]'s)a8UgGik(O`E,ia](t=j5G#U^ijJ^W`>AQ"j3)qbFS*]l-SN12m.V<'HLKRKV_;?SoM=qgFSG/:
%?N/]Kn(`9cV:WHYk2l?oH1nA,YC?:"VSLB!Dr1Ha.n<)W5JQd[HhY7"jo)f\%plg?`nt*Ljkeg/o;g3Ns5nC+?CJ`<?N'YeVk8;.
%qm2p`?@(nkDgoD7Y'kHadd,e?n\_3LIe`9LV4[a-mDmD"H1C'i0$bV'34o+6h;R5PD_Jm$a3/\qSc4nC3B;QWfl1uRDdGX'q#:6$
%:MtRSk,5E]l15/;^G`e*hCl(GrVl?WCYsO5j/(Aqro;gq?[qLi0Ah0UEdm`AlW:fLlI+uWT0<)2NPBl7dk>XPnD')r)t.)4q8sZ6
%]mp'K2kPEqi_+3eU\sMKDd@`$c+Nkse#2ZKq9Qf^]_D//Icoe\YC1BYkJ)NGj6JAurTr3A5J6Zu:YpBmX\0H`rq+d,Y>.mMqItEM
%hV/hgq"NWoq>)35qY%t%r:nOk5CRqWj`d;As/TM`H0NLj5CJ<I5r/hnS+ekfjEk6M?FoEaP\]m\?S4LRq=2q;IX:a_Hg9((?bUg]
%jP<V7h":(7FSUWghYZX2_iO7l)INO0^!G+Khg=hY`NNWqs7kD/??lLXD[6=A=+>Ja\+fpuqTjZe_#JZHNuu%-b1@.f\9e20q]A#p
%c&DrMju;`+iPYEQB:bu45.pF;n`!'b4SQ\]d4=1Rl(_&GF0Bt5p>2(D5CW%sT<EY?k&VVmp[P`]?bH9X;h+T=YFjlO??u()&"\:5
%rD.mPJ)e-kc^oU^a"*LkHKY)S?[hq<LKEnlo"r_FVJfg^T>(3_bO9n+j3Oq/o\%4,+%L).ZV*O<\FS=>q<:+kG43GoYCAb8rL9EC
%J,c^u]^Y_-5JMRA`F&Z8Vs0,k^:Egj(Z0W%o9W6Y]6WG[kC;:"o&V6KHiD<WB<P[tI-#8Do'BHHKHIr,lMGM7Hhluc0:b<"ouYZA
%^\mron*[pfbu<L>s-]>Ok(WQ$s6c@,++Cluk0>?`VJkM&nW2SAs4!Ao^:cNiHfaP_Pq0%FIHqb0>s8/aa1qW6@XRLX5>H+.TE"HK
%=8,LorTUHQ^:s<`X.OiamE8Qqq"WQq[m'TV],*[-i.LJ^rVk7V^:X.+G9<C<p[3N'c('7\Mu2f3c9#rMqgSIt%mPLBiTY=Mqm0)5
%\p-BP4f%Bc]_(=IlaKVqpuk3Bq`dkp]`6[J%rV;mj43WdnDUJkhZ*As=+C#@QTJ"A(d>V2_N,d$GP:9^[sl&8mq2LoiX7\0]^ku%
%2fHI?JR\K)pqc3!5CNJ&?dF24qnlVkrB1,Uf(VCYqV%e1k?i\LHgTCBYCDpXIIY*Y5Pr@]B.omjqVoP.BA`PEhS/rTBBHtaIf1qf
%leA>`%56Q5gN7iCcJ*gZTAB>5]9cm;l\G67GkZiOYQ!SMS\IA]2Dt*Pr/[2n5<jM\g)o`G'ooKTHhI0':[_S;G'`bHMbi5ts1aoT
%M:S/3A[/(=G`BUrj\5,P$a3b2elY>Q\HsqHeI1c*mp8)hH2@gdRTmki$S08;PK7[)TC$?'Gf+CkmnK*-2Ps,N^m<=?aBcT^Gkcd$
%Li=L<hL,(ph`^!Q?J+&q,<Jc2Q8mpI>H]3`rRLoSrp%H1_P6!=I=.jq-\9.8aQU[4$U=[[huE+qq*0)^dbU'(nTaPEi`A>Lio</D
%".4.mpZLZqAq#q]*of*8+(ok2]qr;fX=%=Ec.C;t*0>&BZT'd`@o-gRnI\l)qSquRGNJS6RkHmFn\XI]Yo.M_AWoES.rB7W_/&GA
%e]mT#E*-ERJ,eO>cJJB`K/`eeK:cK`MUk[&g<>^7Bq=,DA!^nU&A;ccg__^^0Kp,V`G[kTMEQ#KSV\uD_;#,t^3o10B)5#A3r`ud
%B#.9`+bZHL\-6aYBZUXC"J67MIMdBW6O.EAYU'$Ei!Idiq<_nS[_Rk'/S1![Se/_.CD/Y(PrXr78,Ht:g2>Me^(e&aOsUff@IBFb
%"mo3G#)nTGD=K!Ye1Aja$a`ROOr#/G4s?A+h&(H*#F)&s8b/pt';DZ_(.4hN!prmlPW]A#63JC4:#*=]]%OSVg.,r-G.YaA[++76
%3/j'i<a*?+6?<?iNs#pc,hAA,3%cqtat.DgOl2EHQktQ%2V?nuM-50&.e$u)/*k$ukE_K@?^@c`@8DX3UQrr)<`1jY[g2_BD5qL(
%pLMj@T9!K&h9md7?!.hINQo"<6S"NQq?3+LTf"GF];Q-Di=X_+TbZn0cl('RZCVIVIc^<fTh?cJ+jDS]]9E^q%u6_bTh!iN;qHsK
%la/ON7k<&/=k=>@SmkI8g&'.`:DL7[-lF^&'"#WM`"$?mNa&/^:6rQ^8FQr5/8C`L2fq;f<gG#G$9TL.W\.pTFBbDD?C%le@8D^;
%UU>q_[D$N:DNFM=g9f\=nU)c$$P^f[UWX5[Hr'@T07`1>V-t"Ce!NW9C^TqZIM@6uo8;(tY-QG4o1n!@mE-FSRcHJ'h'-,09lVm=
%SJN*$JSMRt:L@DpK7scN[ZZE]DIK2!YDs;af/1b0`G6"Phu<2()S-uoXm7s$fuK4^VU'^K1;%'`*0*N2P*[Q`l+\I(Dj<VS+)q[q
%Em8bg4<",T7Wc$C8C+P-KS@%3>OBI7h+qcRhu)F0ci/4c,BrDClXiPG>o>^Bc^^2$/rs]UbJV&Cat`B)1!WL'iXoaYD0Z^STLaLc
%;83V=)Pac1X`t:-(qrFY.C]FBl&ki<ocJ\Ziqq"#]G^_'NYG'-2e#J#1rf+OoPpCrF8Q14J>'j49k0^3'O>l4gO6O7gAT@kpQ=+3
%0m%3l5CI[^!uC<Zm,+I3H7\O_cOZY_qu-8UVb>iJN[`;%75MK5`A`Il%t&55m-7mpk<[s6,5E^ooOr)[.B5W\9%15Q3Ek09[VL8R
%"1h)h[^B+$]$^gf`C&Q24ehCN^\@a"i4HaQrm"_/U@s2=h8rCMGSk*MFO$"hjM]t@k@5FTZ%3i%;NLB2kq,.L^'^=g:Md79HU.((
%+"V46[ZrrXmOJ$4L21.)lA'KJ4`-=I+$L+R!Eunu8-;Sa>Ob__f,2oc*Y?!8#7G`C\(ZnN\pn:R\rS$KVW3JV+1i+*rGd^oT:-4r
%K3*u7K"oHaY4[>'[6@^&+1ek/XO[:8.QmSJ2Z,NVNtX,3DFEYYle(l/Z[m;hC@P<n<uKDn*Y?!8#7L8n\(6VJ\prhZ`nj1:0K?^:
%)*=u(59A-ll6g6I:"NV><UeTWf@:r#r3t)Z$[2]_g5iYQIm(-R[ds#@04+?C3mL*a'?67pfm/>I:!rR,NB&3?4nN%Q7.PI`P5t>s
%`L"S=knn\(SY(t\&CjgaR%%b8,X'C?qKJB8lX20T=fLp,:P!/^82o<tZdDQNFnsZ9-WeCm\nRJa1NDK-bOb8>>MjNb%[$b3oLJUb
%6VaUcN[2t&kVA,:r3;c]TnlAHnUWlqUg1m9iusF>bdAdbcY$&GB@=Mud8bi-dbcb`o,3Z3dNA^mQB@:Y7[e!S+4&H';s@]20lquC
%s,>/NW\"#jn:sA]U5*'eEFd"?=Jd9RK.n%9a!X^>4q#DF*2rlob=N.a(85X/*2HsGC&XbGWeoP$0H)qTB(LsK;?=:,QBfi].YJJ!
%#P=7l(Yq20&;%Z9Z8U).7.A*=*6.'-^bO6pT32`C2q.VuArbRA%RZcW"GBf$rFuToR-5So%P-aT(h[L%<Qu*X=V3G')FcMkSu>]<
%]%moq)e(YfZCMr4TTnS&8I>8sm1<9_BhE2cnW[270"`MF$dV)_Ut8QTUeVC[0KE&=ZS6kO<LWg2PSSqoTh84k?U\7TZjf^I^BW%)
%QsD,2&<+,\EU,I>+6+V&CRV%Vk@/,GWLU03jC/3#iM.G][eb4%NW/u*GXq$t*aB@/B,3=5`Og@g$Lna^bar<[K0aH-U1&Q<?j#mT
%"![]!0S>Z),P/tXB;Sh#7coFI`3Fs2kf'PkIqRP-@mk^ABu`aM>lBH^hZ/f_H!nbD0LIF,#Uqq?1kO76<HD>o`7],G5rO&^YB+eT
%+?@K%cU4RD8;rE^,QJm)o*O6N-01fEnVF`k":"-m&.oc0JqsqIp2(?Y_9RVs7lP^Opu?(-;lNI+No&mM/d+GTP0LNR!#;R:+Je%^
%`mG'B5`Bp/G63<'^uI8V9Ic[.A&4.!!&UJX!/%6N5Y]]]R>"B&9mJQg*T`*Y3J>e/<r5hHs&KZTqF<=DEdua7Da7V.Ht6bj?WT/,
%)2a5&l^u69=L,E^8GLCX)%"Y$,6AccA,oUuMq>%TDUIuTfOOsfo.69oB8u[AICB!^-3KDY#qr$rBA2Xr";BH_gE5jm8T1G#"Pr;U
%Q>e+`lRosQBSuHV`&<_ReQA+R`&\)K;YLB--uIU8QI1Yr83,*d!\FZ2<bYZ)&<A)e%FDZf/3.$b,E.Knf:F@\'g;nk,YNMP:bL/Z
%:87j;@?sop7^)t[_CXkgYl+b<;;b(cAWD`]h&E>1N.Xg_3<dIYb**JR`!Q+(e@>TR4c&gJIRUSV@Uu970h`@VY0'@P&<?a0@OC92
%;`$j4:i!GuVhQnmYQcCd4sRqDLU'>^+Yt@BLgYD2=)J<MM$r15e's$iYmT&JP&=\FKfqK3f!$pm(8<7/IT:2i)J!%jBu74)<5^^9
%]oGI=WrM4L-J.IBK.pUDcp*\8*-qF\T96A'PACa3[!7bm1d7[n=<r/9"\2B:Jf?KG_!&E:D&;e[&c+E1\Wg$Sp@gi>TR+8*`CuYH
%AdVueAEO@rAZ,d3&gq>b<"pA3)1XgZZ3(Z%4;1#%2N+L?o3@+0_e.:&!DGM2gnMItaFmt\gW$5"(NW^F,m;YF31FJQ#gE[H40oIQ
%V9&nojltD28sb?%B9WE8N@?0A9bSR-`Lt0nac8R,XtW3?qLWMl@]?BVA/-Y:kEZ_V[9f;[F.TFTN!)rZ2aXupaaApT3u4Z-T4e3r
%gRKec"J\\1Jhmtg6O+TrdPM*T>F))I6ijkuB2T:s(V*P!6_tej5ZODWo]Oe_I&BmeD81WjBcQ3Pk9l3Tca\gBRp/-7Z$_&8Uoid(
%`dtT$ks1Ta[$W\\/D.*tRP#cZ7a5P)6p#!Zeq4B*#24p!IUY"ck0(34UkS"f&';o)#U+((Afd%!C,6E(c<1(Dd`$L]P9GS4mqE88
%D"+BZC?/Y.<RVhJOcXk9OX;gl1B)Cjp-n^e=uU4;=;rPIpuS03bL)?j]qgi6eL"p:qLV`Y%`!HUXKmf1GpBE.S]I:7[ACG2N'p8T
%<THS0('C!'+ENQCYZ%eMP+3.+AR$&PRJeZBT@FB;1Z+O.$IKq/VE#fpkCl\^M,f*eb$c#H=dh_d#$!*S@5'dCJCQk]6.!@lB6"$_
%fMK"ArJ9)]N[eYXO9M<YQVTs$^+7i1e&(o\YRH;XOf`NL.u,\1'1dpV[6#dB9P*5N8PK3?QSdcXkZENuFe@&';76Bg%9S91>>hT<
%JU4KWWlB']*+kmQnpY=EcbAsQLA%dmN_;@OZp'W[8@!rgbuVkdAhpJ)eW5\abCFn0@riqQf.fGtD"8k\UcrAY*s.m^CW0@@U>+cq
%4Dl'/CLC56A?g4I6bn_XA`%h="l:e9m`sProR)EICnQDlPd@$^hEgPuirULr,'jis[3#RB$[%P%`*+:pZD72r!hiPKXN2h;?<TW)
%CS?;qJVJSW2nqoLqa)\8XBN;mSRRD7$<2a[4jL%)(Nk[p%0Z>M2QE!?I0WriDm?OOfNN0r80HsUhuE\"A$]<&^jeJis2i*RaKB`c
%72L0_gK%R3)X;mV=E6!0\?]$(/YMIsq!=9sQW:)h_#)c,WT9Y:?'O-n[YpmW=a-^;>P;@%E%_SPMXG3=7F?Ob]I:7MSTer?f-e\?
%`Rhsgg3h<=ITBg?gsb[!HM=fE.SG!o(YZ@b^E'tV"W2p[@fr#,m:-;8&!aip^ala$&@SZDKItu9VcBcOi"`jXi&r[08CG+Z)b,g6
%=bjEC_ENoZ<\20)mR6cKPo0"JSJ^jfQ=:Qa[M91]QaKqR0($VnA,d*+Z=Z,*n;aqeE-OV50hUkH56eZF>*+(kZ>)nti8#s+6J,VQ
%A/*kKROl0MHeFT)+\PiebC].j>Gd#L>*i*.0DdL3mUort2ts[6.u0EkAuTbl4#;2fQ_bQ'pTl`0fKH@]da'Ll1MBpr3-T>J0:TM]
%NZ,P$RXeVK5Ju/f:CB":mV.;CdJ^/n;K<j@1eOoQU&j^qM\]4aYsqBU>P;`]pTd=_kOu,OUYsQMD6TVC29YXG]P@&ACaU_KC3=T&
%g8LhqHW[8$Hi)HpKt_sdeLNde?[HAQ=L205hQg>fgp1/egpUJj?*R]L]Onn_]OJ]H,qCn?23PF=GKlF*<,GdE"l@e$/KN`SBFDJ>
%9cHN&XP.H\H1Zoq=h"M$C#arKkakgmnM8q<c7K4oZ#lc%?FF_cgs=[`hQGMCm79>B2E($Cr*?XV$bVhn>K1V8laJQi0Dft6dbQJ4
%CFj_kXC&AiGAo?d"(&6gGHd?9X&a3JGJh%-)=Qj.B(1hrFa-d*MM9j&$NaD2j=;cd[?b%LfZO<!=NgfLfZXB"=O!]1^$OlZFN\\7
%^ZYQ3k:!lM4U8W/5F6Q%/Edl;7qU#'h@7;djs'cQrKA2XrVV(kICQZD,5na\Xm>WVkO1G0aCL=8VC.N/3JiIPbWqu7%bMe)PG!&g
%@8OrMO0f0_8%]5:]@.?[*1SAZA^GtS^,mX"m?gJ^cjiX_i*`d>HKsKl!L+L"MDh)YD%&m\"6l?8J4sN/"s&riN)q]00G+gJOK]*P
%7Y+6o;_U*?03^:-"VqU#LD+d<db-2KifYD7%sF\rekA6$Iq'MZb[Mhh!`fDY=jYls7]-Q^2&(Orm/h798KN4fD8A+7RugankL+3U
%R:<XUd4,M\QODA8E2?283`fS>*9f*oWXUa7BQB&dALK'*Nro8G*;5b0N^ejbbs6;p'S^'e8N[D[`o8?ge#W^,;[3RNettH.J4n9e
%2c@!L,=iJG(0WRO2S%VP2.LN86dSL61/5>PEVn"odR&Q5FE[57<.]?C8FtOJVTVpH#ru<dgQc/EJ#?\$V1A,'\m@TNbc0,,%be>u
%Rk$d9*"'ZCZ-kXhNZa@eX;r<J^1OV8WF.POq6"1:aqj?p8q!0t3!=')U_T1>B,8[2*JLM+W:\"hg_Q$d;D:.<;ffHiK"24%5>rL(
%d#JbVi12(PBWEifi*%CWS"\:ukX17sN$\S,W7Ki4='<6O&e%iUfK%>;/H6UCj&1[gEY*/*;**8&#"Q^<52<qAb,R@:79EJ5oO_iY
%-=KdQ/iCcheUHQjT9`oOJQWV"<sJIEN>eNV>F?]k#]a`ha]JVO`Z\X.a`W-c_gTL;N+TeoU_A-M.D_2cr6&hn+FmHDD/."_&efX,
%l<N=(+ces-:@di^-muTe2A.)t,-cR:/7kf?.oOSfeg<t7d\;QUmA\;=hQ!h/7d.<X68K&Rk$s.jXocP<TTZQhYWN&k3?r'ujL1+1
%F'+VLi>uLW63CRB9sFK10M/$0N23'k,pN)I,\s?/13=f(R#bY*Tp$@IkK(-B*ke,kOMcq?<2+BB+X5'[l,3$b9,GN@"&9^KLr*:I
%;_T&Q+KmT&!$i7tK_/#i.8gOUkG)-Jd5oYYk0Y4dR$p%_^4kr3Hb!X_I4PAkl?2Rt7knKjW%6:F@bAob119Nk2=^o.=^%8!idHU3
%HdCT2*ouXoBg6\2Tp/t:,>*3F1/eI@-ZS'IN>V,H2l0r'25\E([f[G%;>N!+[MK>X&<AXtSq\+uPGI8E8gR/RN(;lY6.I6a#p=q7
%;@9B4F<B[>V3(Cs('DkRMBN!VV>qab:_tThKLa!.Ugama`F34ak#n`N+(c/Q\/k<)B@4_`-X\3t4YOfG1([%^:9V1G*[Y&3qO>[T
%^d]5Eo*H@CnU'mPJNPBc$ohV3S&Q#McnJqb&O8k=`5'1=bUS0C8>!$jmYt(X^bQlC@??m)&aBRY6^0e+.=<VsBNb)e.>Ss?-;:Z;
%'?18o0Hn8p?p_LLNrTTXBs*![LbC:58!#sA<5[E!QqATT-)P,fieSiekk!YflN8+%-eo2!lrG6c*7e#>iQfio7h\oe!H^kgc%?)[
%T4+\XOLdQZbR-[ra5nH;aMbqV9?)eike8bGZ!eRdqj?BF+>+^LojcBF]]DOi_#u[,1A/[-Qm*>kq3I]t=lORTGN5U$!@il\^Wc($
%Mp\HE97smMl+_ksidAQhEJTq6NHGate1`hW]*Rdr1B=[%@<*`Y!<jkb'n'd<_-]Wsj,h=7!(j'4BaIoN\aB.LG,,:99sEP`^Q4%b
%RA?KiMe$kF&uFDnQDF^9%0++X6D[KZ*@!cY_0cCU/1]Q$3;%e@;,ii`@Od4EJMpTV_hWrgdn9.^nS>0!$jhUYND[@u`es*k$b`1$
%VFs/k>d"VNQ>hOXFljQ2+$*.uXa2%"e?%puo2JKIUIfXC<Xir4A)GeSX0@`(#1MAkD83.2>qo>h9-$IG/^5,4\<9b^j[s@:W,%HQ
%g0M<r5:VVkeJ.H)[L.pC4_5$/]o-mY[=rKXheCoFC@n(FXcV)D[@gO1(NjR1EMq1@=Nr<-Vga47T%RmlN\d_MNWbjo-5$T:*#+r[
%S.27H)MJB'_22hL/NH?jX;`<_1tORA.M%C!#&sho6J,$C=lm1.D/eOR+!F2_]Bd[3(Jt/b"a_QJ;El@2+GNkGP7!E&:u&<+1s(.t
%1N!u?gF<CBFOIPUUf(!oAI`e2<+D^/$o6"`n,#@kQ=TJ'A;1Jn@UFmjXAREgY$n^%_!\eL8=58&dZ!L5kjUC7O=qQGG"q7UNAi;j
%iFA5uSA9CCR,J*`HLtYN:.99qlK0LBD+Fh=<A<H"CSTMn`[+*>ZA(?s*Y$scS>?t#-sN5_XUCM=q(*IA7[#_`h'P^4Z8W45Bi>st
%kJci8:(RY??8/_,%<BY5ZP/Z>_^t(+c4ImliQS[<bh0B\`WA8rP;led=C9$YGlaRsqOs2fber0&q'.fV6^o&92jL(r6eMdP#)`u.
%(RueJ>@+VpYd/oY"mU;&W$TU&nPhKhq?]&`Y@/@b96/A6@IPdt:D,cfoE^taOTEk'-Wt;a&k,I9S<MVan`W7"KH>i2(qZ3pe5_#t
%M0Vg8MWQ-S361p]S@N>eEt=aGf#Rk1ST0[k$aV^ILC:*l!GpBjH_fLiZ9L(9iUWF_eI3b(K>%`'qSrLUS<o[lAmb\F!9Q!i^pu!k
%,q,,RHr5'">em*Ri0UIfb^5KR7]Q_PfKZ6^6;uC]r*f=r*\Y%--74f8hl0"PZUY<qJF#.DMg$O(Li;o)d#<Pk.r4M&b.9Bt2Q2Dk
%)O=R(hOM]^nSq;=j2"DaQMZJB7[M&ALJ9R9;R5GZEWhs@Qq-?b8^9/Rm<:WZ<<sBTZ`\BEed\^TnQOZQNAqS]8[-Bj_lWr!j)LUN
%hnp0(-l0ii%NX];0!$%U%.5YN%U#D=(hc6q\Lr<LW---&Z+^bG`P`gD:0]ocUZkXEgQ*oapstP?n8MEH%.'CpU4%;l7`H!$fa.&$
%fjGbObt)[tQTDNj_/?C)\(JUY+?G?r%dnEqqk1.f=ffBRZCBu&2Q&hfl\*4u7WHPinMFnM)o`t*lij_D#ribtDA=rSF\_c9A_:J>
%bGIlV`GR,^H$GWu(ss%,B;0%Z/mJXa@@!48Q'^Z6$tnhH9g(Cl(^:O[fnY66Z&\o$,aj<UM#ttCmc:-#HbO&Ln`*"CrKMeqNmGA1
%FK2#YgaX(uS#8t4qV3[ujnLH_+0Hd1fetmR2g3dV7]P_dF&U4u-QZFIc>=q(\6^,dNB"a3+S`AY-^`ume2Gu:<ARn9M:6]cPW,4B
%UD-A*m)+[?!cVq^qeunJ=4DXX"`YK[qeuT&5$Y@u%juTBi7t1+E/K%lA%1D"(CM';au52236[#\%4@YcVpK:u`'-@IgMOH0AfIn?
%DSr4_T8L2h@iP^+%dGrG6c#@fAK)[jNn#^>iPojW]6uYM\bg:eBlHSuLT+clQ7]Q5_[23iCYLP_$Cn-N0X4-J2;9g)OaW;W2OkDl
%7+Y]]'d:Iuh1bB(%(p<A/tCjl*`LgId>;\JfVC^#Af$4!&mU[E-ZJ]f26-#[G[W3"d-\\hqd[($>o8TE:<#SCi<krX\6sJO0%ZWL
%Ko(-LTs39*L'im=]*JTsk1I-$O\J:#/duqn\3\YN(t/c9Q$"%KJD#].Ai=*L@PPIDI@-t'Yb:;OS8bGgkIM6Q3&f6T[Ms4<3pGB_
%N8]JS:u-mW@.n#]aZc56^7O(;SFl6kDSp-N_BuJ@0`@jLC>8.lQe1riM2jqPV(tV%;Af[/>3BJR^l"0!P^-*g9mB`J`j/Btc5Tm"
%E;7KM^fc.3=;hi+,PBWFiqWo],KnAP0ZOoYCP&m/T$0^/b>5:0HN4K$2djat1nD`FaL)Y`H4gPsD,'aX5H21BcDA>'Wu<555Hc4'
%j>kL@W>AYX6ld,B,2q%Z_I=X-9(e>W^ZU]sL5hQ&oF!Qi3;*cLNF;<d-pW,(G9k8BY(P2ahr4crl,!ZOqC3i6(kYaN,3t-.&#>'4
%fQH#%1e`>dEP90.Yb6mYf'tlr)@bS\/MnOh^`gj>fgg*TfKllQgVgtED2uSO=ZHA>Baq@/@4AaA5u.f%S7#\1?Q!m"Kh2[.JPA\/
%SY8'5,t;<Va(RHPnX[_=]7Dr&YpUg!]bI=^bjADsT&?p7q'%!R]d0(r)ZX)D(4fAg,b%#uJ\dF$8##bsHAk!T[cZ[ZFij1'8h>[.
%p#%@L#"D&J0kS%bEM/^uqh1h!n"oO0K:*"M>C>oC6+ZDpgiEs8h%mnY%1:kEGRX8SrME.Rq@3iibiA+b7\1JWCgjEs&poGc`*CT4
%:DKT[%cT[m.N%S`7nru7$W!D6.gFT:m+_kRC)REc6C8?n,,P_P:1]Z&fmNE29JNN#[(_s]6"Atd2k$#VlEA@m533?M![dTU!dc-K
%G*%O$R\Q]gL^=CA;qbrkg`kbSc?!Zmk=P,s8Qq18D]n0k\M@L(s2#Z[FdTcPPHj.!B<H6KW=se8:/[M0]JpW-F#bigaq]6JgkJ54
%2*dPP7,sB)4Gn%@fu3rt#)=]n16C9JFugdk$"&dGD%rIaQEubdIZ#[G2$Y!0fVHY1KQ=jC,>8qb?t0`]K%#jkSQskJ_LTG$W4$"0
%@XX5b_Tac\3V9(#S.pa(S?-S:@El6=Eg)mP=K1;+#2O"uY)$[!iZ!kk(DrEue[-:JZ5hTg!'l3hD?_o4Q3k[`54T??;G=\;BVsSi
%2+&fn,W)PZW#9bUP':GHfEDS\Zg.f@TuL>DJ]qF%[W%nn.V@onA_4.uf<lIMFTLu?7-qM[3DEti.!Anc<.#q?XpZAk1B)E.S1[\`
%$n=?n`KA,Y&VJsl$-GsO!4L^QgRR15V&<aUnH$F&OQB5ne9)t^!*m[)2J#+A-h._rC>bmB]"Ta*$Yokg5*5VI.;loD2+tjJ.]-4?
%G;ZM!G+mC+d9E54Yhfbq?F@tOf(Jl:@8<r%E6u$nfN\_4j%q.1N0Oetk`1ksJ^bj5I-bs9MV1R)b*i^6Xnm>Y!Y<N%/j+@&Gm(.d
%c:D(mW3'QTO0;s$r1S#GRhg>\jJ&E[cec(BF2Iht^';CJIKJd^p_/$8n!!*hS:R_Y_QgZP>`.$m=\c3td3-V`GB^,!%VeaTq-hb*
%WMI"Z]P-sX)`T`nAr;A#k@4MomiP_hToRg$"Hffph#LuR:CCun,#B7I2VJ?LJHa%d!]Saoc+No'_atoL"b91PSu`f!4S4_lQ)DI)
%q_RU2,QLhE!dE<QfX*(QO(JJjrC!O`PUD9P#,i41l,l+k9V^fj%Fml/RDkW\?O3k>pt<7X!TUM?HN)mt1cNH>r1:1J)99K'#>$aL
%Y13QW!C?Y_lHaXq?6T"<j(??qWn1S`=gDHQ[m/<cBc@Go])C"l:6RIkO$8^/1a@!jCMnX;P+P)8OdIrSm4SSTD1$T.DL[2TfV385
%+aCDAWS=$KMVDLWeEmdSd"*iN[m'in/ec7l%iB(5ikNI^WERI$HN<U^s'FL[^kqJ(*k<gFl)ikp*nSBu%nmKnh]'$hbR7P(MUrr!
%MbfdfrAC6nrA@9]r_RU[iW[8,J(ukI.u`(%k[XEeh#9!R*5PO#qU!]IPHT!("%u-DL:*)4lIY=r(W)hk;fhjELeOD9II-Y%bu\u*
%o</2>o<2Tfq$-n+qUP0J!3Zaiq1n)mqa#6#"2I76\Gh%gm$u)e%hMBkWdbVrkpD;NT@>W.j7rpn_Q+]ro+/X8C'i4Vp9T#C<NLHE
%E@'7oMru0c*a$[&SpsGY*3/$@IZLfpb-DlhUZ+$!``U6/_IP<[Ip=cBg_\!q-3b?3N8l!6Qc3(BNdp!W4QTN_ru,:`8&a!JO!as=
%9p+Bs:"\+H*</:36hZ8opkP[^+Wu^47=G;?9oXN1M>&4c7?2+HKq-(,(<r`Pr;i\$PcEU_J2rL`N;`a#rMi;oq#,&$D.<f>D^'OM
%1qu85Z/6XR#qh%QmuKtqVe5Pt""#rClLtN)UuZQ=l!o"\B7o@@(\j;2)U1d^54Z8\rNU/[iB:'Zs&^DgO:(:J#=.FY3rV"03W:m0
%*WL@3(rcN@*WH,DmDM!`"\r^hk2Q/khql=WrV+Y@Q#jq5%isc9C?,'/EaS`h[?sI]PNqh];i#:gea$!HLH*nif3]I6p%mD]4]O+3
%2sdiil`Xa^ouH(r]3Xt'@g]+FXk+Y5+g=`YY<R-Rj$KJ"o^U.;7B_"8nMD8WrCE*U'W8_B]D;A)W9j071L%H`\;a,6#]*cFJFT1<
%EV\Wp1c8p[7U>W\j"=#G25hTo-RW'Vm.&,dJ2B/:J&3hc?eGY=(g8@pE;an9,\sU*J":)P[B7e."7?fWKjsq4G>Yo9!&&tnMd`8_
%6!aQc$1j<M`c_g`>,8i8$2:ah/cf>Ca*,Oj5u#^m0Obpn"a$BPYD:0QY(_E!k[OjKU"DP;?mrK[+;i8g&IKl(Fq+_?@_7DJ$!29\
%#a7R,3@(]MhNb<!X`4piAl,6HQl:pW@AVi*lJu+V'=2@6/HX`<'bb]`?nmo#,@!p"m2RgW#nqLm)+1qtK#T(XipL5bP+?XV^bKP@
%f?c82aYJ*7OtQ/D4sk>_pAcrt[rVhCOL\j4RBUo00JZ5u\SE<*9'm9aL2qVDP=]rCS\rRF[9WmWUt"fUAO>JG6"QL2FQ]k`Tl]tD
%1/7JRF(gucY[)n):hl'\1<HT.H[se,cu47u;5R@qc$K$P6d:95]*Ffss)ni1;ZX=J^mUGA4lf;TkfuJ,ZEl+"c?/+!2=O:/B(sZY
%1?L+GB,9;L!)<3^SO:bG1@H39<cT_Z)MTU+m2h'1j0j"WR]pl-@'iED#?J^iHM"HEdj/Ytm\+>C[mtD+Ua"YQ4ABlPmhVQCKm!u(
%'9;E#UaG2H%T=nDE'%#n/*qo=)VCYa[KG*hlWcXX/4.r6FnRH(CFHG.^*`(3!Gk*LmNHBp[mpuKMJ\-RJTok"C_gk/%oU;#QqbY)
%KX46.m6s:0!P9L\$Ym#HV/%Zec(`GdU.6:a\4tCs5Ak`#g*Bl/F-EEJb<S!T(SP`8J9pBd2bE/FF1<0Hm1\sn54'$S-KTC\H39T4
%KY7[NQ[s&jD*I\0h')Pf;M4EVr[(4LG7T4fn_-,/%Xd.DJePT\*X4"&`chlF'2Ip7$7C\nG7TFl%.DAY\<Rf?FY6c&Mj*81HXN@;
%Wa/!PF=R"#EC.Mt4AMj22*ap6dI&/u.P>lSP*63YCREm%P*)mMbQ6N0R5:d]L,LoVYdp$F+/2?."OKa"pLOW$TZ\H=rH?dH3_9mt
%%&=!:*D0tkmcn75S.6Rn%]C%_),g5$e[;&2c'Q-MX#"Ebfh,qK5tu<h7<]'APB&_ifL`>ZLu$N]f7N?iB#-h]b=]:8Uf1S(gaTf?
%\J')JTK>_H]mJBPb3^6pLJn#&hFY7`KC;WOTC=pNjY?h^U7F?L:CuC3=8*'>6]^pI`08U&3><"C[Y++'XZM<uU"Jc6H(%TXf9!YC
%YO33kp[m"DYe67O\ZH=BK]gJ:g,VDoqRh02T$G;DOId#g#h'H5G7N,dH*hXkSdLB]KCrcpll<2&W-%W8JU:1"h(*SCMCjJT"Pl4g
%n*-nM"n85@NZidJA6:<G>@DmolVH7cTmVGEKD>XUL@Zk13sP<`HZfk_>MEXh6Mm@g\ea'+F?@-2ZDT>WquA?9r1:X6(?>^B43ULS
%?O$?UXc$"?KD%0=L\is5f4S/OrbPdjkYKPof\[#D+/7#]"9:W6Fh\L'Vm#M)"=U%LCD\1mgcZ2[V=k/u7'Sn,!KgW83uh'F?NpW?
%\pHu@N7RD_JMQp\LBXF)*eAmZ^h%1%d+s<VAINbn%p\<!gHgG.b$DmfA`._B'GO:p6Nn4\/Qbh/Z>6u.URk&]JV3N?QdA$DojAY"
%.'FTV*'PdqmiF`MEdNHNb(BuC+@95QM_II">-n'/.%q39(0:*nE'aYMHe2FlTga=.[_iG(C9?duKGL<3@g<gQ^*Ks(AD!Z<*G1+:
%qZIh3gchEd.(;^NTbQ6Ageas)4lB/HZ?sZd%)U:ULH<@hJVR.`1A&qdrH)?P5?t13?'SP#6j1(AMJ,g"N+gTZ_@bl9OPL!O;/W"f
%7!U@pkFb3l[L>e3\fI/Od)GKj#:Bki$r>C(('0;EmMqrLSD#hk&Z,1,;d>_\&".;c!K.`$:8hqoMh:@8[YP]B%U>5b4,5G?_L7"P
%;/VHa724K(J.^o:#[rt[Fq%mpSh.brJaO2m.._$5:dunBF"j@c\U-<20R3>B7P(B!65l]QmQlgTF-!Op'\ak:;-M^3Zr'H_*o&/3
%mMt)^IG6ct;97NU`)28,pE2to@Cq7SU=AU^N[V;2W8icRhm+i;Kfo(mis.^S:Nd7qPlC%ipo#BQkKl^J[sRV>#h!"r+(]4j#!hJ!
%Z!.L0N6CWTO@@i.$&#\L/tnB<($utLWDe)_E(Jscc2j'UfZkY&11Ij#7I'O&3@o3c=7\>:l17PdV5pfWrdJqU?e=`e*@Yt'q@>N'
%1PE@#Ih?5U/f`92G`nHV1Ot/YfR3Gjh`^!P?J+%&o?U^RGQ5(?VtY,d\UEl%^FhXpf]V^@Y.XG]L$(*OF7k$7]6a"a$UirXDR`:\
%dm%*Mn2Gag!r`;\S<r^eTDs+\^osPWP"5HB!C!3W4j)q0k>AsLpWKh>+%=fk@EG8nS<?tu)RqM0_PT2K2aAn.NnOhX4H(5sL$.=(
%IK./?++O.LeW53mG5(h\s13QjB>F]AIk51TZj.(4*D!UdKVT+IQ;-9@']o[WPTtuLr4t9kE$sUi;;0T^dQi.)ABpTnr:k>#!=a9X
%dR'.Rl3<eMfu8_S(Z("h%IFo<LP<IfD1peC?*o3]g.>N7lAMqTj#/sB6XHJuc.RObE>63[7o0b,]nI)@&_?piMW\LnH4<7m(Y:2B
%M6iT?:V*8(h)lC*8qs:`LS5"e/Yf:2>QkBO`MdNd/.`Jdi&Kg,Rb4&aNZA7NL07FtYT1uV,J'.;O&sLZ$@LSn:lkc4+F^nlBq>At
%4rl7E@0EEd?A?3h'n_YP9*W7O<fD<s!d4IYp7sis`.FHWrIP[XJ]EfRLO<$enZ4BCVM$nKZ&0l21cTVlpc!dLM8Qub@#rFdZKt8>
%Q'<N:>97TKR84U;R-#j?OLgi\?:,Kl8*aAQSo'_!pZ"";CD[T,,Cpg>=_mC$h2a==.c]1+Kl%;>3%4*eBk91R-]F0\$L&8S\_9co
%L9_VaUZ,.8EGiV/&,!1Rh*V>.q9DuDKbNls"rs?nB&l3,ikTmpFF?Qfi`::pr/[Y=6s!tL3Z>[ObJ?nCiYH-jL2M=%[$R:p6.7=1
%arRda8S(`8k'97\Jd]F"Z2ZXAQ9ZsD(gUI.l`KJc&*F,!:$#^7Q<Qj`iU`d>3H4[gQ?6Wlb,qG@n3Q^*\<(:CPRjj',Xa3\"a=?H
%*[ZeSJ*$8C6gQ=8Ti(_^:JnQo$1XedJut&n*cNj=m4*5+e#9556Z*qsReZLm-JO?-Pa[e29#6c,2s7W\d^a5O*%E^<NOX9(DTQ`a
%(Yi'@1,6l7gHmqs(>QoXHlb@e,<FQUNnXmm\?4tHgSMDgD/$pRL)P[[Z;#J<F5+>f7rFg(B6nD1TOEnUL5B^S+6F&"(qcIWg^\:j
%N3hVh^kI(%k&u<%DAT\CFtMR<=<$Lt8rZ+EfnS7XF5+>f5AnAlQ&?o=k:0-+Jo5*-fS8-Wb8pepP"&t*>2bQiVqq.,P`@Q0XU\Eu
%$%pj`<G93c72O`3`=3JR,99a_0k_`b<*),ic're8[MM_l"h,4PE*H2_6s@32M80.&_<V-Ic'Hm$R6Fl]X=d>ql@S`2Y/LhT[1.aF
%;EBmg2LI.5g?-QRn_(fm-nf4U6$kd3e1_Hfkc>aTcm73n4f>:I&Jf^tSXtOP]*^,lXltAeV0M$/D8\\39trnnZ;#J<F5+>f=Ei&4
%A8j=Hk6;o1#)jagFTJY9__CTEDt]2iJ.Zj3!YPd3@j#mWM!Ml2_XcUi#ol,BPTrX9)KD6s!sM&@+<;HKLjLn3"rN[%<9M3mk9r@`
%R>Jn^nHc%1pakGfaI]=F_/Xor&j'kmMiqGaeccT"65hf*75^g)d0+G2EK`9CXq1#@Sb_nEeaZ'l#UVBb6)?Fon3&?:_EKcSNGlRl
%TXD,BJr9hQ_'F,elRI".F(R*_^fq;>SR<LU&<dN(nC`8G"=lZp[PlF20W%:FE/93X$I]fg=j/Z^Ysf#Onh;m&8u_H`p9rLRpkR7g
%E2^(;]eqB:&"BVe(@8TR7OE$@9MkGFBdb+m\8qfC"Y65Her"(43jB+crcenoFpGMqMH'(c4`)NLJXH2AjIXE[_^+1A%.R$3ljGpl
%?)pAk+-kh'%KMlDZ^YbQi'ZqbnE4p?S]E(1IUO0AZ0Ppt.=4nki7Rrn:mBc:Pf+-RDL1WMiR%fNm$\PTB:1]?AS%hI;$DEmI>`nM
%#f-niZ-/8J+B#T=)kg[9RJ!0iNQ>i7aSE%Wk/D^-FG@4!TVD6U^^9_XL&tia?A<k$h?kZlBYHc6BU_blpn\)`+rSOh?tYinVde3s
%7U]?rE9(h0[^I[T9!]lh#"+?\a3]-l4;1:$EZN8%1j7+f'J%oY%j1Auf+E0s^1.Dd2p+We]K((#gL[9P7bQK6fl;H0!jUC^h,R!K
%`Sj2X6PVYZ3a@3YG-&r[M?r.-?ULHJ$DeP..VO$%`:g-qikiKuF^"MAhG9)_B3ODJd3dWC(=;COf_bX&D%CSsE%.-E:Jl:on92*2
%&j0_CYE1M'k;7<',!4bJCh4@G)Js/aY1D2#Ygq>-\Mql/adS-0%(Pe^*]q8L!gih$?Js04\_RQG:ugSlm%ff0PQmN=$u0Ni0,WP>
%&<gM+NF9Z^%2_)4/R$>sKlE*DKXD#<6i2NICMf8g:UE"p39dD@Pc`JN@qfV.O6rINBu*,q'T415(n.D&:4'FdPsa*t@2?Vs,M9mI
%,$?Li$eFjYJ;/KB-Qt,S]fifsj-tBoeK@/8X[*+cHI<L=M]^q,ArEBeT6P_3"tW[:kWr8.9jQJN'n..F@:ZHY;&)2XQCF2g@E!O&
%.qi(`EnWjk[k)co`*)!IL?pA<A=0I68PbnOC:>7s[j[osM`.UfoFR4,db29kNbb]ESultnr:oXOHt)nVY`@$52!f!=;rd'mM..6J
%/glLqk:DbMNR%q_poN\2c\bo'C(!2CV"B$e1n3c&cW7PrYf*IqaQn\Yj0N2XT,"_\7d?#UFcbnH4eJdXhJ2ZA@G9F7TU3k+m3Qg>
%NPI+t=K%?k;8'HGeS3?1\8mW$\J\RST:;7fE(3.:4uHDDW9Hhg/P9i[X_MIE9k.Wee/8pXR=N8pdO&liYo(QL=Nl.F-5KNc0sPP9
%jZl":.3:E8ose/#?XHIJIc^*IKAtGOlMpXCX&iZ?G5n$1Fm&D5g%F+ojjsb3Y5^gQY+Z=k5.c+#VYp,dm9;Mf?iP>q716sR4<AA+
%%<^3,rV+T1O2m4"B@&I(cc#ig]^X^sp[?qNrPO>%/ml>78mM2UN\I1T@5_D<n<dN\#j:,Mrm!5Jdd[Fr[@LZ'"g&/3/&.*.$-+H-
%c!qTPYb+r$X@-m4)VEW-L*:*Qgb1]Drbru!J':H_$75oN9#;gF4WcX3!,jqmK*7>r'V-+SnIK@_+EeG_K"'AhOn-sgm#Z]HAIFCV
%$!BGCeKLO0?*MQ\Emdl7+@qnI;70)#q!PA>XUQ,g:su%(ZDjsJCn!'_8rYNfN04:Ej`DIgWi,$%KPMg)MCUsq\]!o\Q0]!\rA/+q
%KW._WAX[J+2AA&E'0(gLZBV2*$Y&&!6WkP.j@%#C,@8ts%MHToo4^!oM_,0<^kXnn$*,8J1ejS?QpTeT6MhHZK/o`W*cZl*1OP_h
%(G8%k$KqCJ4b[CIk/=_U%GY%smc:_LgmIZuW2\\d@;l^rrf2GV^nC!BB$MB,;Snbbo!Z8mg'Km<U&s"dgT4UL/RMSIeMEN5?&h2O
%+3N4*M)lcu+ioZ5&JR@!fk2?%n*")MAcIc0V6.ul"UDAD?f0VRd<&NnFrVE@ed2P6Tcb1fe"ObM]ihJri8-^K^jhhsUc=AW3R>(3
%MgU<_n!^5s#MNYcPST1s8@D&nDOdM,873Af)Ff^7i75ZhK,1ci@m^J-))g#6][&?ikgahaF=Ooq(fU/Po$aBYhk`@9g"im+Ktp_p
%lc)tT%lF&E@3'Yj?2<'ZJ&u&)gj*l=_0=Mma!VDchmmt&g+E-n?T5a7IV2loI^3.as1bO%,=D-g+MFilc+-1]mPM!\geb%+[i3iF
%-Q$61YR)5I8ib&.oA;8Ni\r_WfV1YUW'%4_]f:9\id:sk-/3KnB]7>>pGh?qp*Uq+SJ)Vf)[K*kZ'F13`V$U:C@/neafLjDLB(`j
%.Es4g>>aF;AD/K2-NQus5mM8uk$1%&fn8,,I.dl&nkD50YtIjpDcL;rlU]gkU/p[2]WGRl+s`dcm47J$f@)^[p"sgG+p0+toES"p
%SL;/8-'V1b?qL!X+;^Ki2397[KSGd^ZTaH1U-d;-F,ot3c(iW?qsd"b)"8+tK&h*ap1:;R#N+*oerMdL5-?ola3E\#`%&V@*:)Bi
%3HlfM&>JA_4:hf001CjfiEblQ7nkWk.<A*S'Z%o_e1hXt/bkd<YoStA_e=c0CB/A'.BA1[dVQSsa<a]P!a`,;*Me/Z-W7CGUifJm
%qhU3+g9L`nlW(oIJ?h-ZO'_.GHJYj0inspc'ZYc3m2Kb'%"VdZUKnp%CC$^TZ4S4!)GD-$T^)#29i-FPTcf+;+!LfMR#9!$1F[Q]
%;*ZBWftC*c,n7fg#I<pUU)@[h9Q`eFR!&kUAW\`.ocHYngd5)5Kj))'D$8GT=uWndHghrATJm((AoU4`,V9-Xa=\)1\5[RR/(VPp
%e#9@1,Uo'Nks@Y4m\QFEPtdqU"Vb6a!c^OP5[ItV1,i[\:Lld=jQ^:/5NX.Y+?:hB/`t:6JEYp]/i7c^9N1X7CASatkiKg8]p831
%a[LXJY%VB0B=R<`P*&Y*p0!@e)P#jqk!YD1X>?WIguM_)Ja]C=pQFUL@YcVR-c3)bD+p3PWOSL$BYi7%LRRfp%q;t&",5g_KBoI%
%jK*Sd>:@`/5@o-R1u-r0)+!/*S1S6&B$"m0jK_q:^36[K5l&A7Zc<:r?ZEoB*?:JW)(?V;'pni_Tc)8A33BBP1/4X3\])K0fLkqB
%o5Gr<i*tS,KP9P?2-Xl[Hqe'Io&_dS#T^qI'_.On,kWR$Ob=m00^S)#6fP$`(T.d=DDB_`Ih9J1d#F]oW`dj3$Gs&$%W\KD*Z7!$
%*@l@D9ZMD#`R[Hs),B5#;2%bk!YkkfUR.M!VYGu6*()Ju(dpnTOcn1dZ^<2GFd6i]F62=Clu6e]^<g;s6%-F)?;T4m8UhW_MrKGA
%EUIZ$(@mV*(P?9q-crc4F_W,.m4*5+e#4[u%u1i/('QOkfJR+\V<11gNb\PFA0^n?/@KBZgbs'\*&,_'Y_nk*7F`5KY8(>^>>`;V
%@`,EHQ<_j$[gD0WLShXBaV1'8FJ[>U7q4hDK!KCM'ZUYY(=?5&l(CY.5rAqu<*)/jc'q)29dd2TUG6h:%$HCTTA---oLENg8#1dD
%2Htg$RGGY6k=f/mAsu36`&7aeM%)C5nOTh%iU8`9ZYdWGL)>OYU.od,BA8A*7ol+9N@0oYnZ`aSbbF9iYohpFlE,'O6=q]iW6DeQ
%?(ICc>s#;1NHSbip=/)]M7&HUWmhlm9PhW6d^a5Or!/`tOQK/e%8$mNDpcgmU8V7(q!$al6GQ:$Lk>[j@I>6cDb-CS,Z<-++MajA
%M^tK8A3bkmecRBZ"Zd6\1!X5e:imrI-(h;6ESM?iYJo1DCEYg:+fX9LW_S/S\ll?.g3+2lkr;^?QBk:O$CTnuDWN]k_F!6i`t^N0
%Q8+%1<3oSm2QF&tL/4M,I]+"CGn48'B>:iTYL85XXGO!PG#/W/aR^"@OlBJWW%l#PaFWeKHT"'d8<of8e#pZRVRJE=a$@o@e"Z+O
%C9(9';VQ*\6a\a/5?.8nQ6TE^Nm)QYeu!(B3+=#.EAT$e.24YUY#^"9<A\D"-aVC4Qg2EXA+,mK%qfT8BW)B\;4Mbi6U?"G#2-^/
%MA\HH&:1m]Z]KLbT?=`[kR[rGfW#>M`eJ>3Tp)';75s%BTbXcoL";'6R$n[KUsM,t-TatE$er3DhAiUM[W^1iEPZK\(Yi'@1/VPN
%/>TG2$Z9b$Q*"r`/FKrL5o,t&:sX5DGQSja\i*q=6]")@JE&97b%e]"fQ&C8>I,W!Wb6E>HU\h$nBYnFO+m(NT1UD^C)18_*O6Uo
%PN?n;qI<>fqdWGShTe6k&HaI>r@t76h2Xe/F5+>fR+nb!(3*l3XltAkMHV?mSG!uA*g-nK-[GX9<i<3Q[U"S&]MXp(:#$\Y701Z.
%3*;J9$tQ=$:l]%keWnEsoB&ke2f73)lnM(4gKnEOGj]a^-pK%(O\o-P)9@X#%M`\mW[fjVZti(<U!\\_$-I%h.)3/F0RIOZ*E9!m
%BHc,0=$*n1RrdZ!&_SDgd"\b9fqTnQ2kl9S02];\A/iSq8qRn9C8t4;CRT)agJHNj[c*432%2#F(s#N_:_hZ\ZJ)K6[[\G7XiPBr
%Yp,Z4jCoG_.^.:FdE4WT)3Jd_,#(dS7HU%^NQ="7)Nik.;i<RUej^'YW%hs/gJh69\&FhXjL,ZReb3Dtp*f0MND(:"WD&kum[u$R
%%9d:VX/uZ_eu024L-?ib%;SRM_na]RJIF+N.cT/]=1bo[QNK7m0$D=G4=0YFBpZa,ZGPE\]GTS/.(>:_LIIr>PGG?EP;DUeS4,A"
%.M9ie=Oo,\^\FPfn\](N#LV%6-2^:ep4oqXn7-B_ko?TmQ0%R]$goai&sC/+P'X1+=(q;+R'$Y-hC<@sRVIq6+UT+L6?\+SL:!%Y
%$Q<=s\[,D2gY@1@&'_XEEOhCCPj%b%XnG;(mFa3/]98s2N5\q-;Tk*3Df!$&g!4<7$,2kJ1IToj\<EO`M8A@'ocBRFRGX\;QAN_'
%(5dlu>-!8Q#cVO0Wgp!>&\6_e6Z41ongdIDZ"OP\B^AQ,&K\$AF2pgIe(WoT7X8i/oH/,-n[Y^G6B1"7m3cR]a.cf:H/d<H+Q#O6
%^4[#G\UI?R3k]TXpVHh!lh_UPo?m6CGOF"[Si\lKhKm&445k[_e)B>!4beaW%/Z]?4ELiW8P@+AL0>D2>/;]`AAWO#[WT3tak!T#
%"hG_;4P\I`5^J`NitS;SKq,ecI3N5;2,<C!lB'Q41]ea']MWOE.F9Ndihb(srt&p(gEp-I(?0L5Uo^;E`f6YO2!1qs[?9&%/`%Hq
%>29/`1Ugcc+E*[8L'J@_BloY'!uYE(eFL1<KfQQ#b/$]-jn.L,,o$4oUj8E@\h$euh,):.K@ZWY2Hk<k>WJ%nkN%Zh,,nRPcr?X-
%d2q>%>p`+7'ZFjW@[A\I?;0PolI,#Fl+Zse+1lFB63csh8!ef:j>VH\<G75t1t/0C.%%s)^4?b@G4DJE;!V[C$<6t%gP:$B<g"j]
%*BdBc[A`fB<i;KqiU3E-3G$tVN+mAdPgjIqda"NI,'MG1/L8H4Ai2Ep/m"jOFOU.aeCJ#(e!`Q3AIUMJ<>H;SU7ST3Ya%EuE9=qu
%r%hZJO[LWM0WK[Ia>5rJ%^][W)Le1bl>TTTq-]nPPAg3GM6)G`L>sG7QaT1STTk)t?&Y(E3i>NC`<L1'k$5RPn`!2P`d(bQPPA)>
%&_k#/7@MAm=Zk1L_QIkKX@M[=gud?LGFM,YS2=X"aO^&G>/p9OgkKq%R)Ps],AS":qokO^cVruI:5<&ffI9M204r[pnOg]QRaHi>
%,rkk.m\&L8"&!ZcN@hjO[c3)+LsJ7e;g08K95="KllB_%WYt7FnmKW-GtC6Zn8H3$)$m9p?f=X9:W91u9*Q8'CCM;Ak:GY,:kr:_
%hV!R9J4?_2k>C*^2,pSU(.aUeM.-VhPf6)!(hujBcVY-0C9'4.^b^fQ\6\'[lq]1P5SHBB`<DF%h?OsIYt&l,2^<97hFI&Z&#2&p
%;rrmH>!Y(f>*=X4h!EDA<'`e]*IAN19.?P#k<9b+^fe"4lI-,(`(:tN3\=7qfnUX,*b/2Z\rq$N)+OJJ8`+d5V<2%H9leOq@O7H/
%%(Ii@98J:rF0pM@ZO:?5C?7;Co3t&G"j7J4&tMHGm3ar,=c@W_NY5+6bShF7/\7*<VP2(7*L7(HS)2EK>X#s.Tdf3EYG=7g'[W@3
%M?f8teBb'X[LBB[8MIG=2$V(-JHn^#CsE@kl&I@_Z[2%QFYu]/m>ihe+M4?>a-P;?g.(JtOt2;/>FNE?q2@IFNYVd4,^ceYB->**
%K,R2uZnTNW;HRV20s#9a\:'b6DHo,<"u<hLW8Y/ELQoEbZo2Z[[od]"Zgh^IOLRBiCb.R9-*'`bPGgP"'`nhTQu,[;CkEMkQpqDn
%%5imna?CVkB%*WQYKF6;)J#4P:r@+%f$:WlC6uDSF""Me.E->>=b(89bt_4E1m$\)5n1:4>1d='.82SJ(iD8?;#@J#O'6Z81>Fdd
%iH@"5[Ec-KC6uDSF*O&ZnlBi&JOG:aM=o]@9/,$=OPpr2[UL$=s'(KbFM&..ZBW>C"XgFO,YK^3:0M.!N*8JWT:!gtP+PU[J<RHN
%%46WMVB1CMd?\F6;rjaP9Mmu%"MB4r;&<^K7+)i%;X*C2:i#CF*j)[,n9`@p2*TE%3+a5+#m"(O=#CL.*(t>nr^J61W23s#9*O0H
%NE_^+L?eAC:s)]XoL6,!8`ZRJHB%o%kbPZu./I&S"O.4G)Jc>(U5].A/Xbn$^XAa,2q;)AZ&L:o7(boc)bV<G'2uppKbbY+oPn\$
%1#mQ/Bu-JQXTT1R4E#S+G]g,ql-DA188Us^LLABeK3=sF+7-6Q;5e,(5p+9lV:bte%'jOk5gc0HIOo613sRR?lM96[CM99P<V:9O
%*08Lm(-3%%D]IPQM&=_n14u#!C$P*53@Mt7hk#!$B3FKEq(\gP@h#Q([kamUI++2ZoaJ,V`1XdI[P5e(8&Lu@<<e^GDR`Oh_01%J
%O[4/I=]?be@o/`UNBmn'(h?['6$m*`61of5Sj<``(fWan-1.K1N$[673KQQ(h5Hgdh>Q`4Mu5A%W[a]m7T#^hH!n.5)[;'//NDqa
%k!;l=%&0aPPTL;(SVa=\PQZ`<77BstiY:Ll.\>29(3N.j.kfS?-@2VP@aTMKD:R1#mM8_2<.H[II+ULE3ms!L7@7`K+HL5@H=g?n
%;h$oJOR8W.Kb(&l_Ca6>@<NmCn@C65<Z$BDWGfX?m4;Q[9fqRig?L\Bad5@4NQ6Xk-):"[`j!Eq,Yad*dhq)CEe!_`LgdUnKa"?V
%_C3m3iGt^>E#J+qNdY==16,WJ#&/`iYgQaVWdS&kjA6WP+o?Q.P(4p?-+Mh&(f-IpA5S-6a<gPW*>0<%3nL(B"B/UbP\JaRg!FF-
%*:TE:Cf)"(qQamNUk@rSN^Jd-XCSg*C?N$MF!.raYj^*fhGfiUQiFdIkM!W?kI''RM[S+tS%!9`fDb$_p]#C7hYiqY+NO&:Fhin7
%$QZGm_tWGPcIED*WBPI1:7XRkEg]_Caf6+`"eUJ2eUtb;Hm2e,`*1%+.BiPbK1'X@P[jh"4IEL8C_o35TL#\@6:3Bk;je,6mblL+
%A#D=t66tfG/"oc\GV1W/Yk#rmY^,kl[b*mKTjW7;NY"=T,>nJ0I]R_R#Z!^FPG[u8(fS(NW/hUV=4W1dGoSZ2167!')(R*^L4aEn
%CcnJRE7$X\JAKHt:N9SuPc':/DZ)McW8+]4/8=FVR"C.aG[-f:Firtn+l7Q:LSbCCie6R)VTgH4fEO-7c5=L#lpdN*nnd:jO.Ze&
%lgFS/+YCX<-#%rdWbU$#n0#:A[RiVAOEZ1U#XfD4@$d_r<In-sgs@DN&nAf"hTPCA-9bV/4h>IF/6B`kWflqGZr_^KJn9MjZ>(Lg
%1=."5>*2,)ZcX7TP1<#Wcl(h0X/_>skhi)3>Bk>pI3Bf[atTVjR4X5AFY?Nbc&r1)+b?PWQt./7:IDOi8@M0H6Ye7hjHSgb%JOO#
%X1YW928lk(_+Ih3WY3(s`rh`Q"M#_[@LZ'fDk6t=ijd@^,M_$$;.0PN*`<538Kr,2Z4/CKdT!-uS8EJM*d^De(E0l/UlOq>S@E1<
%l5F3fD.k6"<EHf;e_`aS']@lhV^EC$g5(%.*Pn>=j/c9Rn&1#o[Z'F3:G7Q^YdMLP`QNtgX7o`;,C<?"?67iPmga9FINH,h3B4/#
%I85d8-W8tIq8I;HE$DjS%7rt9bq<0*i>%m6Xq\h4NlWX_eYe-D9eoOjhkq2@D_n,$CB@RrS-$*[;1M,P.EE\aCHfoS!n`V29\!/s
%&&0n^fU&1O#C4)e#(T9OK>OC9UU&4*no2B,NZ,^Pc:eLX@l%rahfL\oOu/d>ChL6.GD%-<DG]+<Y=XmpTfb6V*_mL!-rX'qb9MnB
%r<fRbMbkoOSetd@<]!bl#dT["//k`JTN'Lpe/H:0gCX&6;1:aV+N6cbMnQm1a5dhk*1Hke0-/A,#S2bTH4"EJZKB72U+]muQfJ^#
%b^td%N;"4Yc$'G#j4TT7;2M%0d\/)7MhI'ToduEf^jX.9=3(b?T2d=OH0Gg%eX!V!JG;kIOfF_pEDncPP8^Cir2<"?S_FFR>kFJ#
%E#bN-_L5)6VeiG<E:i'_2BZA+)YZg1%V:jK;`#UT-T=cr^54g?^lpFP!`hgIA5+-4`IN[3c3`s&V51ZK3._bfW=b&`4HIlXrJ[2l
%88O#_l]MS%6CM6738*=/1ZtF)'e-C=BM]`,<jni"[F7Zm[h2H49YC`5Vb#USN`B:74a<'co!ULJlI,Jo#,u>P"U-`nX<5U6BCMYG
%9MJ&r3lprIHa4o6/P<7$1s!V$eSp6VRA`-2#=;<(7m3Lg-IiFT3f_D):kEKj1.X`_;NcfL/l)QmBdlP^FO1HigTi*mnG;L.BOuW0
%-I]SdTVR(VNX_cYD"c(VE:qRt@]``q.TgOK'6'-4Ka#G[)mUdkPt`//d$aPXJlmgbB:r0n,8M4p"J@27E_'KW+c9r9A[B6A`PXu>
%Dn.4-7sgJW]=oP1/5V^&,;*On$8'0KQ0UnB`<If-]p7,J_o0n&Gq@e5GN(N4ApILT0``ZWfQ1fLd6i[;i'KBdT_"lL9MjH`P!K-=
%]=qm2KNR4MBn]6E.ecIG4O;ip0p!G!D:o\qAkiBG>/\lKQ1WA`S7[GQKg^`_U:N_;;c5IB9@sHc>;fO[,$D38#Bb\%i8c97\W*92
%<&.0h(1Jt0R-&D)Ws)E4*i;?kRU$Uu!(=*l!M"mI,:**,V]OjU4'ND"Rk2/ZhIP2meS2>S?*9<8qI['rTEap]I#YP0*XATOeG"(i
%`rfco8YskXdV50B8D.2c]<lVu!H[D8$fk)k:Tk>k0guI%q/W^\g+iZ.bb?DdhVrQ(D1\XT3NtHSH.#%ha.f3INm3FH>4rLmWT;jm
%=3B-sLY,s>MTYiN8=BcF,gc=W(\t=J\bo5_?5fZDV#F2V#1fE.E_D";JE?.JfJ<#UH13h%j&@bS(dp`=FD"F36k,bKRli:7/TJiZ
%*uf7Sl+H[F=+'bHR+TQ>gk5HJ'IJF3XgI4i'e?.)Yn1I=i'akeH#0?D)T$",(7q2=bjR@?o.P8>3_/E@GXQ#_'n.4l>^5JSk't>R
%"Thi%/@$-b@<??bJ&G3s%Tn>bHAgOQ<]4>@aNGR-=(F8`gD,<P7].tS,OJ2AOBP0r(ar<@^fR:u/4\3:_YHe.;&_!5)nn0J##-lT
%m0$);*k2Tdh78/,@@d':o_>Y3-E>QHD]'8=*:sL\V:%.6jFY-7;4Vkg[;$U8&=kmZY:80Hlio25/el<,\W&M*\(Gf,aQ^@4M9<i*
%"cB9IN,`/E4TZ-;O+tMGhol3\@C/P_f&84+r$L8o#M`P\o&fDCCCb<Tr[<9R]6!i?Fj1Eeh1K'PhS0!40CnFqqq(8lIrJJ<gq@pp
%VsC6Vpte(10>+cCgr(?JO!nuhRt-iMTNgEQ1a)oR(iX!#L^-Y+Uc`GSf25bgIo,8=%LPm3oPni5[Lh8<GS=Vr-q?V00,l$=k'#)o
%M%NN[[\+d>nljRUM)t"9XV"b-nfUZ%VF%1Ij!89'p*$$$JTtt\FV)"iC+9Q/3E+k57nIM>Tjhf5Fa9H8#FhV%f%^g].$s[:G4Nof
%%i>e3OJ`h)VBaf3Zm];XEo],$2OmkT@U<Af0keRT>*KQ*\t&RB+4I;8-QRmJ1<2u6@oos>(2#i+Tpc0(A195]Zn1YuR+c;q[eXt5
%eapVX.qZI*kuLm0FC=44WhP"`%V'X$)5OC:$JM?,J\2\#"*MF:9'j]pX]Wn1k!MifBWJI9=]l3A.gtR.8l'\C[73i6\+oOKYH4+"
%Hg93_bSit,XXg%a8_m4Q-Ug&_QZZl52Ob.ZVS/s(f7n"JXfG'$>?*NQN`h4@"hF/:(R9P&)$\V[eLIVj>&r\O/k>Z\*!5jKZ0K^D
%PP5L2$sO(IYo"K]YSFX=b^>sa!R0@SLj>skZ\iXHdAhm$EE7T7]HY\D'J2/X?&UZ%'oEMY!9fite#A$K4#)T;C%u0`F]sqV:;SdQ
%B5qBU_c(4aY;IJfXaPoMZ^su^2\.-_V1qK_lEQpi4uh4+^Wjj'Op(J"Pe8A`em&*-nuD5KTXgeI*1K./KPOT&5R,>tC;J+iH^_O%
%)>l1eBs^,Q*J"B*%dX",%HW?mnPDPh_]kA1*mAm)e5TKF[DJ43f<CYV,hIGY5ABam/A;j!7d$-i$:sTgBksA!L7QUT*fiZ`L"-Y*
%Gj*FRkN&1'gTEmAZ7@?pHA8r=-p/%9ihj03+`gLp#Gd(h<CMbQQ"eiN3-1+mSmYb593s-[i3f;FKbM]V>"'3Yj-`;p=Z"74Z*l^+
%pG9gLf*X*SXltAgMAjcT)[9/C(;-4aF/l?9]=,SEoA_^qG5S@Ncg-2V]Ip-kiTqhJYD)K0Ve!`P]Uk6MB'ab*j/UIM]N/^^CIK&P
%<n)(hgLs-OV<;tEg/M+a[_eGb2=&/F[0\:f@D@fkp73Ig(k&9)rJF',@m@lJ%#@\9()l6<*U6Wl#Md3h!iI([O=S@.JgZ>!V);up
%`&/b!o.V)ICEuV9c!sg[]mrcq#%:\;FfZ_R.\Q3t](3*n;K^`m6;1!2%URY*75l70VdHud[AXbZ6hG<Vh!^!$>6FBLqej4[*"a4G
%\d@K<:[4ur3tF\Am@"do'\J\`EnE]q,^P\FbZ:XZC>3U3_U@(K"`2Hon\:rG5^k0'JC[6r<GDqGa>VS6c>E18[pR.0-lB&UL)^CK
%%-lVS;*^:V)A'Y*AKVUhr%?TXPV$R5Qh31!8s4=U;PQ.%Ud-AQ*"q>>+.2V%@s>&U6/(No5;#R$NjL(J0g2LQ[/Oqtk.p)4K.#jY
%U)M(8o<-bI$Fo=c>S9hYk\]G5d8n(,p<<[@EnI.K*CZtf46nGf7`\^hE;7MOY@&)]jU^Tb4$Z6qFjh%RHkG@?=ql)-UQ]p-D#,($
%d8n/1;//(*BJLPbW*s#5?kkdON`JTGk:#+ShuqDJ[%W4uVM96cS2b7uZlEp>=cPDI1!`h'$D&&(7u8DS3EfG!NhZfd]PBC+UZ]VD
%<hnWPTuh9'TS@`oJlV<Q3*M@%4\(G%?dI,S>2HY*f$X*KBWKO$[*`DEg/,]"<l$814rfQ'en64SNl";S(#Y+I%;iba26<S9_bjX5
%j_1F2EjVO*H+&<)n@U_a4EW2F,Ed:kUk.W_74mt3%I<5'EO=9K3,3._#9&45k-YOs_=QZ"Z*X0E/][a[UCFWDCGi2gkJbhLUZH0a
%a`=b^L3]nQ<UcM<MJK3HmHWgLT]9\(%,XbCFnD36BkfK[X:uOY<ie%#'OCshLQd*+A*jGGNH`sKn6oiH5_\._LA.St']`E]'/<EV
%\7.mH32R?`kb&4u's93*:aCHTd'SK<+lT=/;OY.4dO[?mNK^5I[a8')J)^MS1U-!1BW$_J`AYpWW(cGu[$CZNc=Q.H[p'4o"-7`<
%)B*@fI]Hik4J2:ccks2!D**K[1YjH;e;dY3@3%M'EARpoNmd30?jWs.22J^3lf`W=[r_%UWqJBI@Rn/^?F1Gh,H+#=<A[HJ@tSGI
%&.rE-Lp;T7Z51AA\u?$&E^"Vt;P@FL'pL9`)6T);AN0X/8@=9qd.buAm<!0oicdY.][inoNZ@Jaljf;19pn8pZ90^=Ug]KH.A<:m
%IP1p;^K_'nO0aNU]832N*_d9ZhEr9O@3GbJ15CfpW1YVuK,WWic<I%%l9<N1<dJt_+jV!/XHD8&JBVWqFo'A$2`pR<f/mja%kjLZ
%&F;4QF"-R^p*R:0e:n=;R'hfhQ5_cplh6E-Z@!$kM>fP=G)4PjC,[4\;Z7=MHILD1]Q6B^J)@k@+91)#^L.#T:]Dbk]lX-ZlIpTO
%keHk&I<im5_nNc/f-EPboAts&D)<hlGq3RAG$FcboKUil(N'J?ht)PUSmV:V!ua0!O?imVr1n7!>f,^e%a+Ih@=ocmTfuX$7cG<+
%><N*Xrk9X$PSPP[!T#86N08jb$$,ND!AmK&KhbJ\iQo7<&2Cn5m](&!Y$kK<72QZ-Ai;f0W:kded2Kh_-$30A`$fXM]Tjnd!i!8r
%1s2nc-%t0a2@UKo.63NbMACYZHF+/UdKj5:Hs>WYi0G"=H3UZjb^b(?QoT4W8tBA:9oimaqW(4a>JiMUC,l"4H4CaP/+fFTr4j%S
%eY1=pddMRT>S#8]9H4UR_&YLVR(M/3JuDVDC1T=Y+*-jW>UVCmWseUfjFJPBUV*G:h&CH_dZ(nk@@TljN,#@X#`qIdFf[+#JJ2b6
%1aJs$0Skq+BsU&Q$g0fDS!jko\mq,m%+L_'TMjAk.m;PMkb7DN1@t3'"_71Q'IQjU@_8_H6(X!Qkb^kDi$L+@Y19b:[MfW;HL795
%Y,r)c<8gP&SSTPeZmU7Dnt,]TY@/Gg2>fr;N$a$GEB\Qp4@pnjH$HHbRi]f[!uJ1AYR7i0LNLqpBP*d.aNQVrg:>aK=@`AnAt5&A
%0Ndh7NUX$EYb4/8h:/G>XFdSPD`6F/["AHA*F%^$f$Q6D#2NAq`_q9AHIL!Z<RfT=fS"#tg4dp&[0rb'Adu*S<l+B2(p-9>0H*B'
%@5QIdJQBZLqV*Y3Ra-r2om9P@8aJib6d6f/26<Rf]dTJlA'&#6HO;[YYWd]\_DE-Pe"^YTg@R8(UTK9'k$5$n>K)l)DA=*_c$D6(
%XeFpdMG9(B'cTci.Q1sEYbm"Pn=3OaWR7eV6]kNj"uY_se?Fu4#HZpZ`ch5`,LPpt#.<d)eZb)5p,h%D,ca%7/[CQGG>c]C%GgYi
%ON\u>^4pd;eSs02X#1YogRciF/gs^icNR%DW2\ag.(,5C;/.Ce6`gc526<S9,oK@8]jrZNoocRWC1UeJBam3iak1@8P-Il!-"B<%
%&8W)_K'+Et>E)Z=2N"SHCoEVMXbLujHmBrOEIE*(+!b3M:Jc,cfb27C_a#J?/eC3C!_Ua6!ccrh;^iVFm7d-s?\/>.^\InB!$qVS
%Pc'%,\d=6n>Nciq@HKKWO;eICi/kL4nNM7^GFaO`0'IC>7nMnMVU)gJs/_ntK;+t)#,Wh&3SbS4-]>n',\&r(*_CmmFThWKqh/%W
%k!m]q>WHR=;0+$3+64nXfrEk*OEMHdPZA,;SQ,9h!Q6^X5ko_]7d%lD`7_LmKp4DhZ'g2oGg=A5KTk?rEaqp%<LDmJ$g9;8I2C=A
%k"49?&>uD5eS.Rt8`-V5"?DbMKB2\\SK7"="W`CU6=o=sd7<M98JPj8:2NPhap`9e:I*AO<]EU?OsH05IQEK.![?;jCFGF<r>P!s
%PB\-.*eCXI<*CP1Q=3l?O172ErQM]4CoH2=/GcHHX\mDMG"(YOT(ECI8?QC5h!7A^Ope2TnTWJfI!h-R3BgZAr-53;8s]`qQNXK,
%dXL>hpu9Ri!,=S5-)dH2dc\Fc8BVd53:6?qTkd.EQ6e6,aDUZ=qMF3lP=F+83g2u\ks!A%"as,J&Go/o:m0UM4ihQKpCJ_3"#R$]
%RR/CFAp"hHEDWPu>r7G/XS-/q0_F9Nehp+:r[L!H>EP,5fRnD&470l=TN4'k26<RfrP<iN2;M<:?Ik[D;_K))'M26@3dOQdAZ`4=
%0+1LfHJ'](MPQq[%6ZZCdaVs\b=8I20,rV%8Q3GTGY[P#WR7`4N?YE02Uj.<VM96c[m,+uaHS/$0lui%,hdm[6-X^526<RfrP<j1
%=OV_9N#DFCa2Qc2BYOmH%I<6RXc6AV=W<)nZSi5,Q9hQZ'g/\-d:tLR_bampL-b2VBJlldrrHn&YK?[<;(:jt7RQPeW"lCcrrEK0
%n&og>H/(i!Nct#7\i&!]XB*.eG[Ak$eS(jbUW?3>L>%L7C03uUqrsDY]PnK!$<8=u.T?U0;p3[pNrJ_Z<C3_^H"kME2>Q!9,TCL<
%bg`kWT$Kqod(>tg))sK64#/e?7:4H%T^iFg7H)uT:?>0h#+$Cj,8Z@Y"tc\R;dDEVR<B<+l"O+=,A=5'b)A[1N;Q^aD8\c#RN?%G
%D0=RC(#Bqo?u9]/!uH#?BTDbC1:Os0C1[rg8D1j/gY5TO5\^K_Q'!Pp?3]-Ke5B`0<G959B%!pM;:I?u)mN57`hHeFq:b,@F"=m`
%5An)<hqc.q8o@B.h8gFDk:CB#K9p%6O&S%`$]=hqX\4X1[S_a)<Yr,UF[6HA[1/$n;Cj41gUaar.pP))5-&OSq4*Hmd*U.!TUa-;
%U#8WrcBrE)0aN^Hnh+2QnhJnMV1q_!W'UkU/%XZFU6^Aa8.QGE/?2+mlEk1SN&aC/S'/3b3Zb#?p6s/^;G0?DZU$0ie?c?6p^6>o
%)n_@$`)Kg4&59\>lFC3IT%aE+9Iu0*^,B_PPf^Ahf$:Dek!3eh4;="HQ2kO;OX<^U\C\DKi]Vj$Z?mf;j[p]K]s34ThIt9A2k'$S
%hItV[H_VahD2h@*r#BP3W]7@4$tO&9:a*F#<dM3nQ\-.ba*hUp\co"V^1^VIp-lm7Z7d-;m#)'"qkC'mm#.as[P(f&NN&OP0rVdm
%'Z\B_3@3F9JWuUPluZH")tPo>D/k7e#;[<m:?(e^[`-g3].Gr/e8;J\Y\]4%C"o?_F^$\FQ#4o*g9sFC@+uHJ:1NLF2r9cW%+7[$
%TMfUk.c&h@b/&Hp-:$7hbdM2rCpldMS$FUa#*s\b5\=Nm:tZ^\F_,2BmC&S5db&`_J;4QnCf.FWV9.I]3iGqdcpBWj(M!0IF5+>f
%R+mWhdFQTVH>Rgp_k+.i)CCc@Z%M>ef[.2c[d*/'f\/2EUS6*%N8TC#d@u@Y[1U;26VW=Cfr_j>\S^1CaR-[9miEk)/mOAK3VUP<
%>;`_S[;5N?a^6tJgqJ48QMg^[SQiS+knduVDI<FqPDuo<rYNT-4[t6u,Lp[(d.V:3SY%9XXiH1;2:RB0[2RWD-P9m5?I;,h)W[T+
%:-\%Vb_Fu8q0:u0BI`:e%6R@fKCIsPABWE$oXHK6DXK\VQukn-:V)hqAj#+n.R?G$pp!=AlHKt'#?h-_Ri+gp_U5AG*F,:uQM08s
%f9!`K9mAc^(^.bkYYr!q5eOciN)\AbPFLh(2G;@D?t\A5oA8NpYrVO_3Bp9%o!(!K2:V'@XbLuj]F8g,XaWs(Hg9DEKB"(O#<m0(
%2/]di*[MAi4,S]U,Nj-o[#*6_kDgI&4SIf+UXl)`4s&W?d\-Hl"(jifMb[I&NC?_"__&bk3H9"R#:VMXX#*"tBtmEO=cWfoEZWI<
%39sB_q8IXI4E?"5-*hU-423mrL2(fd."#7KkK;<$d*gW;,gi:\2s[2-aK;d!F+r'"39^lH$=`,T(;(m"S't4.I;ETe!8;NPXJ;YI
%_ef2H5INg'jUmO8j1r>J8a;TU.`M"qU7#+0;r#s.Nj]i9kp7n^R\-.RaHUu_fU]@S7H#15Z.6:;FgT\<:6]oaXYb/_D5cEbWF6f1
%0:n?&GM+Qm)Y5]0St;ha[G5OTXJ=stdorO.Bqrf@e=`+SXbLuj]QaePZoB^a$9u,cQTT,`j^+ur*Bc'Ief$WA<gl(@2UlcNeZb(*
%'2S.#H#S4(kof5D3][X\kV8pcdIX&p1I)?Np(:3RBeRG[SS61\<A'1g392d%*@UXp#;:+B9-NP!S5)fC[%)dcCp!E)kOoXEj@&,l
%WS-Pp5E@6H'Ha*_=L9JYSVABsei)XQQa+XAE:S^'1X-MY(p.S`PMuS1nOt=e1^+i'RHlbtTEdL5_rkN0Kd2U7=dV5pTb+OQ+L/n>
%[O!j8dJD7[P,dQ%UNSi4W]#j"<.C"=WB4W#EO:O!5m,sSk>VrIfN*m[#-3sAV1JRhdW'l0b!Kk:g[=EZa-1tVUEmf'7HleD*)/4.
%6.r6HE=h9@JTK4<`:F@E*IRqJm(MeAJP'ib;<8/Nn@9Ct<d"1mTid0A6BBKUB0!NMh^<;<1)Y`<f2R+/7m$AJWesg^NuG/4,0$OT
%)`^BC%`A[$&ngB1hMjEa5+^6ejSWj[cB-DQiWO-Y6+80KA<5U_j<Hu&H_;gIk`I!S#,R.d@T#ss/8*pPP54cd;dJeB(/k]l=^l;6
%)NT[>ft&pNO(T9j9En)6!iM]!%,Qsc7Z.=go;iLDoiOVRj#WHg"XKD^U!2(F8RRBl<2#M94p<khXf/#?Q6p:0KGW?/!u`0h,H6UU
%,$S"1dhYF`*$%i(a:6Qe3hBcW?gq1F"cjD+bY-"S#e,N;pM[lZR[cS8C^t]Q3d,=?kbP+Rd>afEQn@TcDUJ!_;]@HQTuNaZCf=X(
%gbs'\jYgR0&jOfTBCtD\#0"Q?L1=<q(5:Dcp),po[!C.TSSY0t1*KAMAi^mrb^AQ#QZH6@RP/Cp"qaI&`6'6#BPgA2b"AS?H#epM
%2KQH4qs9go7j;WRhZEB)e>Rnc5ntm`bu@Z>UM8-"Aj`,Wc%[sL\D_.9`'B%mK,0VEFer<s>kq10"nGa$h!:Ke3P50]h?2TFG5(tV
%I4,![g.f6c]&*FN&"`,N;#\4T%tr#ZR5Ioa%HOBP634YjS;,`*T3B&\puF&YfS\j)N]%@l$-'os1g/9sS:'D3a$mY$S2J\SLOPif
%W&r!roRat\n*&;0`ed]$`)X7<%<RK5Usc0fI@!PkC.Wg`Lt8Lk*+<k;c-jJYb?sI=L6)F;D/"P03%:A@":sbLBA,0O_#pZ_A+l5H
%!n!`d!W$6/+(@o8/"CYepp)<iMKp-Mg"C9EH$t<<TeGKE"U`?0=k3fUQ[Cbd@U:f3DF%Foi4An1=lcs?SP7KacAU+$cr_A'ZP>)h
%5]hYd9<-s&mel(^'dub.;U'c3g;j=!jN#prT?;@q>f>S%*6)Pf)i(B_0njI$O)Y?";l&lN[h,VXT?;B<k`niucSghNe#6YB4S,>`
%QqD0;-gc:,)H,/#H=Vd9,T!Y7*1X)],f(iU;R?Zf99;)L5VA$3d]P6"/O#u+)(NWoN-0s2QTX1'1<qR+TL#bk/ZNH$$gC=74iC-6
%SCk,,mF."j7Q-KW(]ug_oHq(3"mQYK4(J_=NArPsCbP"lU1dgSMRK15k2YAH29KEt1i&U+Z5rKMLd.h)BV_>`"ZYR[3Y>oM-E]D:
%aO^J3q-"9<7_W>;`B5d6/#THAhMTeQC5@Qh6UWS89*i*@YU/Md;QN^(,IHp&8Q!9PI$S5a>?k"+;>c^mI3$.A=1#dh2_IXERb5f$
%@YgXP\_G%:l8Q!E>p\0<JA*2[Ba0,%C"?!U?.J)*8#&qUESW/BmeJgGj=hek$J0J(;E?&la9=JDP'@uO^?qE'9/&0KR1;7#@=Y/=
%/QO$MPj`\C2\J,t.5V+I[ESH#$gJj%->Pm2&AI`>58jgVUEoYK@.E20%H&K?heGMMJM8pf_%20Zh1nOs^j`ks\dF^7:S_emgT>RY
%C/8RhXh.eb3H2p,K:bn:#r-14(J'?B=E%b9W!c2koN$D]2&6$YZ!Ru6^l9/qj7?n!Rq[@>"pc7P-X!-)FG:C+ll,deNWm$JL\fm!
%)Q9cV<[`8.EulQ;Z/.IY@>"ed%i*-a=Be:s0^qJrS>b62R)[UDFhj7r'jHuU%Yjs*Z.C4r;<jfWZ=dQ61pfC)NnWJ,`s_8<Emq+8
%+<?%dV`]/F:1-as?%Zt*"t]tdl=r8d]6gKP_etp2^HO_aPR,b:JB1@.Yr'n$@)"_c"INuC0e47h@G]ZMjN$&b^Oteb'()adr^N))
%lJRJi5mY5^Jj"MNCfi16WR^duLWHe97s1\M'.L6lU,e^.7huQ<M9d!,9$$Nd8D_f*&@gd$6f_&G5I@5[]Dk*>n$X`<DJTW.62s;9
%$eQCn-g?u<mPpT#M4&'O2q64'6"qiRV]]P^+]WZ<q>9-V$Z4;/ZW'PX<0d(u./0_aBj<JRhMc&#qiH%O]"E$YGBG=e[KW/qiq4X=
%)tZ`"gq"U2RD_u=8_GI7cQ[t9\n0VG/(asCcZ.X+eiFNPUpY#bS_?PJhp"kh,DBW61ljV=JC6)+^Fl)e7(02&#AtHb85u87a=\Or
%-+:bn`B;FZ?NW]=IJqN^2<:VVF3;["W%8Km4/.__&dkX?T@6(/"^F_Nn"$/,%(`!,nPf/Ok=fp0_R?OM2g)q]1)qU_4>I[>&\s?&
%]Cb(ICg*`KBdj[#k35+?l(p2n.G8&RJccW+$(kCm4QW7r[/o!FB=a<I'lVe;!nP,E!'i4Vo3<(YJqPuEG"1N2EG8cOg$Ff69j,3"
%g6OZd/eHclHBgp070G[l)(#2R*#$U])iM+HphUB#Y@5E8@"`Lr]H9?WIi3@..7Yit6Q60ucus^K=.dr-KUc/giNq"Y%,[sJ[kfM*
%p=]5GaiJ<=Bm%SXi%(JjKZm;?=E/*7Nh??f,_])T2(=B_f=sk0S63u`h`DJ\naY'1'j"E8iT(ejPbnU>G;kGJP,U43&oDK=[^N@N
%W6S<fkY95QZcolU_\MU_!q!:3:$sTBLm2`1?[87V5F^KR,jLiC$)ri+e"UWD3*KP@?QkHH?-ss6nd[3Jp,j&8NH/1p+XQ!V'6M]@
%\:b_#.^^5P1P2q/FuU`fJPXO^LEGO:?Iq_hX*@>@Utr^u;$.Ee(`.F@?!T9EX.Mm@4Y4+(24UFdNNq2o8ftmqTNjjjiH_"ZO-4$Q
%_^Xl^G!FNmWtki)j0L?omDZqtEN]rB(^TfbgjQ-[1T8!)]BacaS+bt8.+aR7"@%AW*@0r.Hkn;9LGH5ndn`ZS5f>JBVIh@='8kBY
%kY[mpH_<*qMcuj_8G'IteZI.Pc<XZ(mWOiBd%",3%0\TSAhKCcDV@-^<tF/nM&7`E.N;4=9d%C*m<!aET0oe6'XjhP3D!D@"W%_P
%=)W-pT=Mu&,3aD9bY<+*`E@,KoFrFaZ1Dq1e92X>QfE2nF`T4bFF[2cFdqW7AjBn?p*Kq`ZieXQaq$S/77V6A?8=*2,4n'lD*H]e
%4"HqlOtFlTLs"sTTEuK\X3\3l+YO_=Eu@!_$If\LEcpMPb3^*h;d/cr&&.T`[J==UMum2VWGj'bR5?iSCZo`3KHQ]Cq,hEYho>8m
%a$G0C5NeC%lt1o8nstq3.tnR'kg!o$2n4C,^*\OZ6nHKXC#9Hu1H`cM1S5(#6Ea]efu*.*p&PI`],d$iI'Xl83W*]]D5AfBm=G&e
%2QQfM?hi'SD=C.rl?@V;\[FYV>Z\>H\%'#.f4o[janKB,c.[+gol-m@na@O%O<ilAGTerpD)jk%+(f*_50MB=dLW$KMd6!=%,!kn
%Sap^4%dh<d36o>1<@o)?2L"@;d(H9,im;_Hm=SL3j@IZ4\o2u)l)-sIOZ?N6A)X!';M?39S60tLcora>U`(BmKM`DMX4'g,P&YK;
%')Vj3/jaQlUt_L)Z!daLL(SL=jte:$-IS%7[='[pF,ZQ(3=sFQE)XUHb+QukD+:V>PitT@f?Y#Qr5^_0c9',e#PYo1-[\%;@<8Va
%Jdl1<%AH5aAedsMNCGTRpt$#Jmb$m5D`oRb*QGN2)Dbcof>3SU7u9mBT-9D.Ut=]SHEBu(>l;0=^ijc"qrYfjhgG=An+<fuI!khb
%)u'(&p.punpO@\apAXe.5Q8b;nc&2cAEEd$DIE@VVAn.q?44i#H:YR#F>u""-]n;?HLXr'l_N;6inM$\"Cg!OOMXkl*KLF8d3o*m
%oVY[f*.;!EatJ7S$7dgZqGo3og\/eH0$#NSX`m^0\'+44T3t(\I9bMNp.LN*(i<XngeQE&#RZm24J4ZGS9W$NJd$<h[Z+E>/m&Cb
%!)mea)lSJ5#F+UEK8$^ZJXb6'Eq$-![OY5M?[=2R(F7Ou<^)9cRJE?f+]]@BNZIs9VlWXQ,JRa&k\!Ac,JTN&R-&.V7+fNq?_,HS
%@t[7s/HRNEC)bJUldi4UY:KOF%`<eh$NF9TL6E/1"/AQ\a`uTj`T-L^`T-L-T-FE#9Ik$Q(YZ>j9't,OpsYbsPQ1kGoa$)8.:^K.
%^T&rR-.e!gZQ:7E_uL/<GM0a'P:HDNkj%cf'HgK7VofJclA&m(-2UHfY94'0Jtd6*k@dh7`TFp7lm)1<_D5nS(u'o6B]lL=%HhES
%E(SIeE@^/rX+.Hu@ZP7`8"[^K<nMGW5B'6^&>uG.Et.<rP;pMt0@)K[:B+ql`#dHJN]rBMM?G[*JQ$<=3'D,LCH+hV_s)lAUEL&\
%.>mQ_Rj(<H693Y:N^aK03dKOR2LXiKL-tY5ef_5\oa4I1k:#2`iG;HcXPr/a31&66Ii-E?nutRYF7e'?R.(uJU\Wm?m"<,]kK+!L
%q/c1ps#:UFD-7C1=@:#83!lFDUDhG*?d3iT5eLi6V$JSTE2BiqfEBIOqp#W0;L03jM?ZC54;lXVT2Clob)R5^Sg_\riC)W)^*En]
%OiSSCs+%Tr"Ic^bs4bPG6aJq]EV6gq.ZET$]=:<PB$sE!L,4Bre'ccI2Ma..J+m?X!U5RL<FSgBWNCu592\2L>U%`a@a$H0!`0JN
%f:[nX/gdi<*I/phQO<laP2Xr;>R/*Q;j6:I;9HtX\?MrYabX,bmG^c[*Y+:q%#u,0/[&:Y\P[LHQ/&N.[m<Camg>r/.ZNHqfb@<t
%"Hb5;C-q[KHI%Va>T=ugcseFELlMa6b`&7>TA=:Bcs/HH328VC?EXjZiY&dGg3%'Og;/@(?C:NZ-3teu#1S=o7/*8nH$L=U*b8t1
%RR/Y^1PQNl%@Rr*4UA?Pdj*6RcFRs@9%>L7U,1L\BI)<IO_?Bfr:MBB,$>3=6MK2[c]5Y#O6H/GDs=4JNZO!7Pkf*elT-6d54UtF
%-bYDKlnonEC=(&-JKr?ER)lTL#RNd&FEr45]h_-fSk!c'j5SobA0Ihh;!-'[4pKNcbmbrmGb\+V]_h6aRoo(iZeRiY3=:!,U58p9
%Z4P>fkY?6gfo_WE1[*pka0Chb+B:'s(\H5D!;e)Cb\WGOR$!%Dhe94/_6""8&Frf84\m@Y%!be)&>"l2<\5%<<>JEL)Iq:X)`Q>0
%:-0'--/m+hR^fO+7P5aBe'=R7c5qn=2d<Ktc3))q"j)=!J?Sj+>&l<7_jFk8,)Y"\f&/kJr@fB_5oH[1aP%AC!bJ)D256iXn*uO-
%b:fSt%V.rZ2N(e&+G%]?O&WZAd!1*U!MZU?P^E^\krSXR\6P<bETL`6*KIkl[;2n1W3Krf+s70iSn-MCW-^Y^8(:cgW"F6H+DE6+
%p'X!uoi(-?lt<t.*C8Xu6)_u*8&QiLeDf[c1t'#6aN`h/C3.neQ6J[f5KJQ@,Zf42I$)&.iot#S2=\#CAdd-:::>(]0],'_0'.h3
%GV9AA3+ar_nm^ng+V2&f0;GG`KOipX/n`oroI`%#c/_O9??`9#:\n=T>.MmC?o3.lMK3QBZOD3Bm[)]%:3gmki#/`V_0hg,f,36r
%]>Gm1P`W^CgO;?*G:bqJn9NQ!_8TG5J36.-?.-*"dl:u8BlJ_0P`lS\pF(SaYZ3e,Uo%F9Kpl#/b@JoK3i_])ba\G(C(S<a[VZ9&
%p%M0V\@5W76#AG:EIN\XC9!,FUPXr.!sX$IrA_jdM@XFjP&m'!li&Ap<_]XgMRr=XmHG2<nn%F"^R^c%DZdJmcm,Sma/OQXh8OQA
%>9+0jdfV=`OM"@,lk]IjNi9HHE[.n\rX!9I)XLN&0^bfaFT^]rRuEepKADF1:a=iY7rBs*jfWXVgGCKaF>CnmYfBTVoL5p$4o)Xk
%;d>*/jBXpf6J6p)T_JFWoLD7<m9kc'.4B'`N.,A@:N!#1Ida&(5cd&ZecD61_E&+(fb[r5G%CoYBib*Y&RuW$?p8`m0b*iI60uk5
%[5W2'A`@%&fU],L=t^@b2q0rbX\3M2^`_KEc^BHEH([7^hILNo8Y_',&ZU8*kn!B"('91?Z?=NI"g$YGm#C0nTLg2l]<1OSiY)BD
%*>'<0QsFOjJ244gL"Rgja=WfBikX,hk'aCQS\0NP19WLul&8+JM)]gWo((jk3AX#eBHEJhrLtUt$fbb^j[:5^p%NV&!6H/QD7C;4
%f;9QWJ*=<!*?hj#e>bgD5s>C?/4b;r9+XPt.m,moC*8%gK/$M#;a&j2#<"2P.t@0N;mr":>]5h%P\GGIf"1(A`*U\&)+]'gY4RD"
%?M_ZW.baP,M"ik)r3"Z/?":J`*I5O_rN]XhAG;b918`bt=FA9P!^.P^Q:Ru4cTLro,&O6oa;]CL`Qq/#m'ROWKZ*Z+dC_tQ%`]p*
%$GFE=]TK/jZU[F\a9JM?d=ZL_])&?g%^&t=E<RT0A*peA)l`Dn*hh/cDcnBR3[%LE6f7A6(^L2s^_cs:3bTkJfAC(ROc0lhX3G;3
%2LrkO<.2WJWX,jFDbq;Q74SV=k%;&Nb;V[-V@-2R(-)HOZ$^HH'GcG5g^k_Y%93E.GDWENA&ELTZ&U)G*gTJ'Fh#A\["&(N\/+"o
%1sus.0WR49r%iOOlaCCj0T2>K4(qK'W2`9"hGB,bW(+@+nM?M[BcD/>+P+0W`c%LA]g=EHM+<CR"c-&,-:?@P2iHE\7oIsuL:Rm>
%<,U0MeUXcHh>0&A;:W.LTP8LL\$#Cb+,>;*^\OsdpFkoT?Td]?s7uZo1O&`jDa/\+-i6,Xr8Y9DH0W)P+$[F<mK`^V^OPjA^\mcb
%Va#Q7L\k->5G-!pc[BG+C9j4j82Q*pm*1Vm,^@8'kLc?0$ti9;Lq@`mF-Og33<A"R?gJPbC+P^E9A<9R]q-A]0kTtNQlmAF@W09u
%Z@H]jlRGZ59-NpkU/md,DhK7"k&r67F$*U[+?$!Q79!KRA6Enh\a6@Z/=*2p4n&aVU#,`:klc:>X[TS_;NO'D-4/JL$TFT83!^O,
%>K:9\3IklaP7gt`$u*7T6CK2G4q@Xu:c'M.J7Vfk@N_0$$U?><]aaBke=@2Y6D1uj:Bo/dCPRX&6b2VuF43[9!k"J_G9j7W19T<%
%k&jYC[Fu>Dd4,_Kf;),Zq`I-n&OmA&@"n_6#UN?4!X[^[,oYjELr?NFdq1J+_(:F[/(=lOQ&'XIfT=k@QsJ7=et5ht5u(XT0=la2
%3/gA#Y[u8U\js,ija)f\]]rA#$fJ!5Gh+:J*u%H?._;B4AXoc5KiYkGXl@u`'*^]7%2Sm"W.3>n-L4U^MH0!m%lT`^H,^^TI\foY
%&;tuj]']VeMe(H,K6:6p@XJO:G2*q&8J[#[M63A[6-3JuZsQBOGT!W:Y_uN/dMCR(L\%R<%:JPce35qkWiZMLKsi>)8lP[caauXI
%lHTN3668S!6.`\$q`ra8Y8=[rD;3j[0:Y(HC#kJu8]NlUjEF$Ma\;/4OWYU[QkRlkN!)3_#QlKEUgUXP>M>YD#IKbablb\"3Udg]
%YXhA"O_)SpMnZ\e\D3r]7F$B!;m4V5HQ:Wa;CrJkf6pL`MoIe1OukNWcR5f!FT?bd?<Nj\)UCi.;P-`5-^2jW[2SIJ$oR$L8)&FG
%f"q7#csuBC0;+l&[NDMiT!Q`U9WRU1,lW^ERW+;;F?j!E58&R"i#e-0b@ducarmjC=.rdS#i5"3m)f=F;G!,2&^?+A+L?9]F0`ME
%-Zm6F*F11PZOb@V4p,DV;F;!N-\,NXRX*f@AV3[EUF'WAEDFu!>+=:4H9d8CErXH_@HHM0:uMj0Ys@LG8W-7-LCjt^jId1,QffJ_
%K^rouJc"V,"Er.]i@;m3U6_E;2hYo!]ES[Er&Jk_oh[^!n/6?90"`P_r"Q>!,Q&ucbc73-MQj]>h"[Q#>f=t7Q([+R-d,Zo()^3>
%7CLs0LuE/3@YrR^dJJan@4@B;CL'+/P"nGE",K=gM:E,u3a_uO_]KL2Bg['7^<f5M'JuoN_@;%+f<l3^ET's[IUWsf<pU"^ZPcSr
%S-<T0@_(6L9.[&4>&SE-"=\JefmYPn]06Y]MR.t13g4YPFJT'M'(7+hj'8`>#45q8JX,m2$8no!hN'(FC)6ec&_E_9]>0*g4i6"$
%Rgk4L#=Rd#m-t`a%t<Q.;OWrA,#,\hLFj..Trs8*Xa;hBY1o6HB[Lm_.#U84Gck9OiEKMe=`rX3prjh,OmLFeOm.gh`MI'>A:TS+
%f[tA$,iBQ5F^7ZE-hDPT2*fXJ]![5oOmD(N@q`oQ25NZC$%0KgD?S"un;A&Q/pb^$@kb=O,Vr2>(V+176#92jRTHBEO_<6[EBt01
%1]L]r'W/uoG\sJj?KX!fa'-BI#'AS+S,PtjCFb]*]0LKjZU3t?Y<E6_BN.rR_G,<<,ai4@b>]&mQeH;)Zs6C/R`SDHO1fah&aM!7
%`4_kGgT_g=Ba(U`&Ku'eb$mqsfP:Qt<'el'0t7jU)3CY[P^Z1D^Cu??f0:Ka%:-a)Jki6J?&G6(aS>MgEV)Gh.jE$5mAClJdAZ$H
%d17"\=Zq-;8[1(;:&#iFTIa$kE/m+RdXFg)Jmt^89FR\hKT\l'_(#.!0e%D6QTfeK\hCKUg6%E5-:LD#'Hhg(1*^<Oid'!"bb=RB
%bL-3CmM[%$:Z*Q_mpRVYQuC^nlBghp>t$Sq*$qRmWUWOEUjEn:d8b(&j:h+PfdaiS5f$3faFcj7>T,prls:]E(Ym_C]+,k,.oQta
%`+YnU3?\]\2-],U,G;J).D%4=\9e5EVgZ:h[J9X)[9h]]O6>R=T%+J2/RuW!:/GMm2(!,Emg;h=6=?kj[A_R+,[XRuBSMR,6I!V<
%-_kNWNZWRa1Y.alX$j!/]!6c+`@)ikrO+N9(3sb2]jtkgKL?`XERohrLop(JXh(g;UUg*cOdCtFri^XoPlEo2c-cR_rHl.RqB,ar
%M>dFo%j1bil$pDH^&@B25C`RdqlbC^Pl;!XQ[Zs);FZ'0,_lbI[=h?u'![_)L-!>@85]4'rH_O<?gcp5oU,?f%O&Tf^)G4R3Dg(i
%f;Dm0\#1>1';UDIE:P:`8bqjp[Vj>Va;ZNE##'l!Yq5%BBneFe@NJm.QF<61#=r+6@^?/-Sa`ktT<P9,WPJ(d#OCogejNAZ*VA_`
%&90bLe1am.aTGLd]8g@E&35*^jUp%TTE1S;KHqp+Ie&e9qm+t"GCddcJfsp`NhkM_W_@6%!,87++CSLQ<12FnVnVD:>-T0urF[LM
%+M2-FZ5r=bfs[[hH`sKdM.Sm5@'m:`s0TpL@&`^1]<)ZH=mq^433"aGfc"c%qp63h\n9FE7[n6k29YTH!Q89H*]uQ:5j!>q"8T(u
%Cn2BSkR`Le$/qFf]AuS$OqFXkelIGufDR/XGLrQJ,'Fok[n2o-!q!KS"_>)l[4+Vr',q6nY#g#dIae\aDh4/6LHEp*0n`O!H4gtq
%<fmW(c(]B^p2&7]4s7:DBHL[M>$(Tla0*PP!86JTJiE=HaM(de$b:JMZ_l:UWq!q%D%o?\Z+sr<7`*;o,=Tq58JIs,hIdV7+Y+1V
%8Q"q[=7"fBA_5]u6k_>T@M!JSH.ouDQ2RNL.7rS=KS.@:8&l/ifgi;q@*S$pL1@<Si_@Uf=XfFC?K7OWoJ>2J'R[2X`E$MYRHqIT
%285XGp;J=k?7c83aAQj;dk$H3oFD7^>!9lC)II]Be;kT^9F.@OR`pM`p,TT(iXM:qh+2VVZjk)HaR"";'_R4?kpf50/9QRRmOBQt
%-ps^2eII3#];D."U(^R`H1=t-11)mR`K)j>FMIU6U6^7+:e=X.&5HK,fdI5hE-66!2NZrRV0=1UQ,N"s9AH1&WM^L(XF64F';BgQ
%rECVC.\*V7in>0aC/nHhWcZgiYDOi!I,6S?%S>&3NYOPrUpGKV.m0.Wk\XCZMAJLGk7VI:gWK58j%9O&>1UNC-9X^/Us,:@ncT+q
%`:L#s^XXDEl<hF,'Vu]gqG.j2/S*GkLQfEGUX/<nl`X&if.ZbMUY8<@7O].G\!j<OH6:O?Z]Ept$;SDcIq=$G'fL+lQYAX>l0(FW
%2K<292G/&q;Yb*;,$s7m+6g-dkQa-NA`f_AF7`Ugp)40*]1`=%+XrTk17b.8i`&)[>YJP_JCM8O\Dj'sDC;e*W)B55m)AnLAm:;3
%d<ANu%S+J]GgdD.9bMupmn'1o6C,O^G#_gNE3Y&'(VFa1c<cT&+Xs3_o`7Y@NgmIm=+NPZaKqF/DHhLW?jQRceZ#'9RfKCu^/g,7
%I@Xq)Rt.dJ_?qd(;;o^T9Et1!iYlIe%l-(cL:<1*?;f[KMQPsN]n:+/pmqo;5k.=q9/AsGhVmid'j\&dPZ<i!L`u2)TN.PAW4E0$
%d;b'VmBXJK/g[EYC#m32I,B\kIo),_a-(CP[VI*l/::8jT>U=:6phU8G""@.Qb)qm[_...IMEpMH05iW5^%jhhuQe`"=e^VhM;e?
%Y+(aM)N1Ck(Vf:)B^nC0/<<!P<*[=[M^uEHW!UMrmIR5&le\8NP&(l2WRLj,H6=0o1j$-CnbtGFX*DC6Fmn0NS41-4E,13QVOY3M
%g1G'ZlH66f@OeOR[[hPF[chj!6H'cnR`%?=F"X642?jK>VUB(CXeB;]1*p$P&+c_/=4I]XOkWi*>6\'@[m8]*?P?Ipq?,1/QecDM
%)orIokEXOL,Css!YG*b5E8S\IO[nW2#stRO+'NF2c&B#fX3B6tQ1Eh3F1"V4L0Rn&RiF=c>\ND,:nWuP-n<H[h\*j#/FWrK,[#sl
%G@pWZg]dhl]kijJY1jlsrY#nd7:94@j)oTGjd)Fj>W+`E];`Fi>i/IJ(]"OQI9h$hPqmXZD94U^!EurfNqS*/>ZJ.gCE;eIfJ2n-
%>^.V!J&=+.6$k0;_t^VRHNHrL<S@!pVb`?rltT/`nTGVmECDUV\k*(%G3c%$E,I/rCg.J&a66]*N4-!j!\Lk\YXqI4$>2M'Lsq2c
%/c(!rO$!pVV!gO[n[U)u<b'a]MApEGo^s4F6.B7.ZT^q=lMP<>g22ddp'?BUPjMREn#.2KWnBSH3h(RljtcgNWD6')3h8(Q>Ru^3
%;:D\\42>>X3<\1d2't*3c?MU=#e^`rMN1;@Nbu(K:O)mNJe/K9eJTPr]nrMq)Bt#OW)8=f/>%Q="XV/_#Nae2^<m*,,J.S+QC$Rq
%RgcJ-`/9G`]MjlU>hi@X+')+O3-+BLaK_L6?;jA4?"0btV;$R_Wjd%SSKD*8]*=6OLMJ?dC`npV9oP1W_Pdc8[9:fsH$LIY88M+`
%b3\>CBLA3&=bA+WKR897N^U@+/TVhd2KqZ/f:\8in;S`/$tT@=M%Oc2(cA"d2XB$@02EhHIJlX0aY/aCEKp6>=0W?XpHD'k=,X+8
%7n%<^4;pRTEbOghFEbgaYIfE!'XE[rqR8n1md^(fb=//[@`:LPfKL+4%l;l$R,bf,DGZM_leO`06M?g4Zd2KM\'NGMfk1qZ%!7fk
%a2TN5&UGCLF:4Z$Cpg?TTrG?SY=Dcf7l20!l8';l,0,["1$D)q+>V@IW^`GWF!FEHL66'c_b)`:?C[DU7L#ea6`>o;eTp=!\ToCR
%A>uQ[A>tD,\(!g?>AAc2;@f^0C9#Q2274BhRUln+c1H7#,1.>ITIp\I/iH_mSU9G[H#0gtNaB'&%XP^s%MHCa*h[DR$$C;`eLc)Y
%_<i-tZL-ksFtZUn#-5I$A8"@$R!N/p+3&8BhRQ-o/mff-p4LVa7hY-pk\fq.!3R72j%^_ETk(1ArT,:B];Jd6(Efcd"N1ekmW'kG
%R\P)?1Xtng;1,Y<;q+9l\h&"Rjf"#af39l>qAN0u>b)]@pC;i]^kFN!XWanh*cSjXNEatlgkNs718(Gp\-QgRNt@&/hAKO#8'Ohn
%Y4^SZO[OB60(QVeLk+V*;Y6W,5^Qh>?>"mI$W)$cV/,Q@:9I%9(0NUC'c56.:78<>h*6"7jE0EVDr2S[(4U8/`*`&kRq-^+G0i5M
%mq7N&nYZ0":),.JZTP;235F+t8(a2)RX*`)4)b*=`"C"(EL(6sI5F83F,&)<To$9;o/G`2V]P^`:2)e9f-=FT[R.qPA>(](,6Z7S
%ib=p2!gU8@EUMTYp;"kTgXU:E(WQLKko5\TnbXF.Cjq@^TAG(h_mf[Arni5#O)Mf1e$n65;;i&CIeO(?ASLp@G(#n\2-h:;U;9g>
%6k@m>QuICm'#'8)ZC>?g5=`J?oA^KHVWXKI*IVX&XN9Zsr*RrNah[cR\t@T&."@7H"]p"u0pggTPTLb0L/2@+k1T#Bc;%rZB;jI`
%KFTlW+pZOSKC8U&9l=``5$9cB/.m`ZQq9Z$rB9d:_$BMRPD"f8Ab$rm,/1%8#4(_+`/!N>Y#2k'\7O0VE'Y(R@I'%J2:pm83&nA:
%+OB.pq!oVO0'8uQ&P",$1.Wn9'!>Q[L>GGM@\ql#)U?a/iQ@KEk7(ilb>D0j^Wf8?"!sA6L3)uiOu>JVk&c\Aj,mh4[)4<8'K)DU
%:QcCm2R]p1ac]KS#Uq2V+V`5I3NsC1QF!0@g.Ia+Xll?!;)q%%b/@Yu%9#+JaDDL6;+OSt&#[lLfBd]h]nldTZ4LbhNi5#-f`NT<
%=(9qq4.[%Mc&jI%]5kZbhl<Hi%GZ/C)3KU,WAbkU5<n/=Z?UJ2Ru/2!<q*o1PpPk2!J3k(!EF]M2Xf0@.@58F?i9$t3kES:`J'Ce
%!TOFNW-tmeJ';T,kg_d4iJ<P_,*:UBN^\um#]/5q]Rf+Sb]0$i2<Zq*BW-?Dnc;SW+s0)07L12H#VBoA=RnPVc?o7UbghaT`s[#o
%%TM'!11Uem_d>UZJSI/SR5_Ko9b?uY:a^jpF1S;U@[gmR[W0L&/<#HJgKM+H5Y.1@SSG1JHhL"S<N9d&m)8@ceV5-Pg/([K4,tQ(
%cKn$&[`]Mjb9@=5UCh<m"Z5kEeR"c1eJfZfKH\j!VWtg,O2O.XX,1T>/u"facikV)Fg27IrXnE`:j#ML[7b>"N5RVgU)+>_oeljp
%=TW]5W@mYm,;INnC-R.h[G'#*WuVXloe6dVdamXJW7?>]^fnEei_7p<K+;(upC*OmL0d!,[5UD`#rA5(FB$k=p.3F![$ms(m:*(_
%%D+m!XBk/nlMVsWM'/pD\k&lYD,N&sRl&NNGBN:i"@BCJW%pkK]k<DE>[G'jnVQNnb<mej4ja-V#&-!Y`"(W=Pd"jBS7b5RQItM%
%ef`*DfnL9L%&f\4Ec"D..!)Enh*qDS'k%Zi8A[&NEI//7NA/lVgbW9YB[^8RmF@rPpV%Yn\b\<_Knr0cnr[WR%oaJd'ZP\*6//Fc
%DA]kf.^@R"\lk&\S'?e54#Cp4d=H'_m_i!J%.+gm-FfYd6Q"!lijs@%JX`RB4n"<CWZBa[keM@3RDes5,BLs4M)4%?m@rPb\[nlF
%Ph`E-#IY()Yhb3B[Cq]Q9UZ(<?#4/C3qpG7'A8u-+nrd\Ta/"8AJ40<_3urg#Z4:irQ)F$(?+QF!fbqlkeOX##I]!LTXHclO@aM$
%He(i.B"N9TJXaj6rq^UoSPmgb<ST..1J;*BrfMqi+<i%,GN6H!kgF4ajs:r9kFElX6Z9jc6N"&0%RbF?=hD0%'EKA^2EOtde-CpB
%E-dim\@LglX!pK?+1Bb/s3h4F$_m+Wles,1;-Pa"=o>ZJ`U!Mle>[op9-:R_;DCF`if/(hS[1>9Mmmi!("ne4)kS5J,P&U#Uc`SU
%_3;VYO>G)!hm^d]!u_f-hNX(8g:-$reRS:Gl2osW#?8\>>EF%DNTig`c:G?7OE_uupa&a<WL@r``oqDuD\3nKLY;e]Ii&[o*$qHo
%OAAVQ#narHJU;B[W0Inlm%$>LWQ8r+6j<$OW@!;`AViThJ05J85ZM3lc$Mm])J$-uBE@t'4]ZOc\,,bj#/$9D<#Lc&+i'T:8I`PN
%)^6rVbnTt0'7ItX,'/lpF"_6B@>7</nGupW3.rlL4i8*[;8)KJeDL"_\ai6'r,!;C2OO(1@G'RG>sR0tUF)YXKOsAej:@<a^K,Mb
%b;/S(OHLDKNF\ME,dnL"L<[gsAB!sE7O9JB4?=n,j2^`&?[8Z6m&<JRO)P'rr[c[BgRn+FJ+?PaJ,&/]Dn`Lr7/eQUKD;tp7c<L=
%Ms1LKLkHlQp#$/h+?MaYiht^9EJ4,X!)RB9oOUu):I&i2]M[4`.<pq\O9]LM!((^jS@85!XZ$27]!S;8gSpj.;DpThQ$^o3<"QC.
%"KrSJ#3\1mqaM*t$CYTY=1(MU6Xo8n<Qe+B(<q;ok,])'j103bV/*"Jq;G6"o'W=*^V">0G$UP*_-Qlj8DmBqX"u?7>:5Ph<?B@B
%9V+FW`Ehb$.p+b:k(S"0Xb46A@QP]PTZ@(F%s0,@Wr\>eXZ%]mTWS`cT=7MV*%nKI+^W^WM/i3C<4AoS:F#X1QIZ"F5;.=6UbmG&
%!Q:VMTc8(jq+WUDaQ\9:d6ckQ0M[nCK@3FaZ8&Q$f);u0T+^d/KLBaSjW1`r>:.!i7HBVr-&>)uRr&h2P^Q:AC=>A"+p"ui!uARM
%`3\[<=t!_al2KX_nt1(?7l>"g@t\Tr@o#U*(qZ4ng_mOa9<ndjZhZ=>b&j&Lb?NZL[bR$pQJZM+QD[7C;d)#t="HhbjqQ('10C9&
%TNMe+lR9S\<ke>g[ghh90cUa,8Gp5G=Q6jqL4Jd(ntqq=m5<koKe3S7Xgo_I>d)9:CUE71$<DC8n,0NOOgo^;JP_7*\mW3$Qi5RQ
%MgP&m@MYc5+D5lJ=YV3a`cnXYW;htO/mE(s.mk*N%?i!0[4P](>>^k[%#IFo6-3j._41;ig:C`sLWTms<XEp=U:T3<LVEa%H0HD+
%(ZJ*4S%FQBc+i/hdgnGGW2uH``1FmIl;q"::5ssboXZ]V`Eehol1@'\-,K8`c[4&UBj`Yifcp+aD%P&ohr]9Ma+S!=Hl3/S1HtO0
%Tg#1Y^HCKtg'nW::&6hBLrjCW/J7_Phj7M=(7W(iD-I3NRX*fUIXhou?N*PX1VO9Z;(Ac<N45R4g9bH58?/oAO[VVm^1g*'D6:0Q
%i#gtS6daW#!KHIqbQNXDbh?Z_aj=`h_jgJ?pYQ#"=E"mQYj+!PJQl:$2+b)6d-o\4-)j-WjP<tq`QPgHTGa6TT&,6@d8<0#6_Y7e
%_!&`l\hInF3!A6!MH!]`2lIY'-IBB!PGC;-.&KFi=qV^Y7`]EUUQu1HWq.cde?20J5t4B5MJg%=bgYPT5pkYq;/_+1P%HsZm&7(2
%mZEus3s`!oI4]Db5-SnfJSdc2`7dER!aAGsjQ.=X#lqrp=dD9if:\7C7n:"7nK>(q1-f+`6="E-c9(dAbnJd=fLH1T%6^q4.$J=A
%^_j@"3<uuERLWD3Z$EibK+;]:H=5Kc'8bQO5pQo5/iH_mSU9G[H#.iSX-%6h8%'Ea')f&++Ua<P?lPO)Q>L"KM=U?qY\ha<D*nhM
%HZ:7W)[V=s+k4Jkl?_V7\ToCRIC\7dm&uo6<>p$^9EM_I0]hk/LC8Y6OY_7S/3l:\jf0l_%^fukaKhQcbIo`pkA:buZ4*\S9\!:\
%*[l:Xa*ZS>RJhpo)gGcD:u]ghEs?/i)qtJ>(0ZO[ZFpgWBukj;6Ou##Bk#EC+GaPG:mIHKo8Yu^niWXJ,YXd&O_=tiU)a[If,83-
%PnCZLY&u#D6Q1#OOu8PM2IN?6^l`1])Vk#^#H5g3W67iAH)D]4Gp:B(R!p;@hVBtBL(\h@EmV/?n-jOdad,balY7NKltrLl6Okpl
%HJmIL'7\jC5pQi3/i-Mj*IFUD.a`N?#P1Kfnpq913iM4[H.a(jB3]W5e)CZDJfU7*WhRLr+OCb"oW!F8fS7D.MBb%qY+mc1]4QU%
%'[X-Y68<D1+VWt7AVK[d)3+!0>,bjVUg0_kX5:nAs1[bUgOK1>J%ksT_mb,Pa2m.cqU><`im7@Kr9!nVq"UCeg3s##Rm4UdUjmdl
%l/RP[5CDi\/`iVoQL8Bjd(LQ\TNm"dRMJi&+\dlq)Vr@)_Pc<n\=OX;[9Pm5Hbh<`9brO^!ku,"^T<5-?f"3Wi>;:'BKe-]+oHp<
%IiX,mhPBAHCC2FL9uQ#.#!_e:FsmV2qLV94Ba@7gU1r2BYE/om,-cDf(>)Icj9'//4pu#8,b1%VG!uMD09]`==cF3?h*^/8Une;O
%?[AeD5a.eAqf3WeOca^MoVJpF-e*4;+&I%'H.b"Xb=doQqh!)=ljb83S",<%5=@?\m^]!u&S0-Q`'@JD[VW&a@+MrbBW2nYU\>^Q
%6S1F,Z]c\Lc?u8sB>AQ^e[HsoLQb.uDPOM\8^sLb?*q3sGV:GlIAGV<kDP$^'45(-];rtXIYnu0Zc+J\34P\F3;/srm\VrK0k<R/
%LVg>ZI6hIg\YaZ:Yu2qp%B2-,aRO/JUk,%T&)g(t-1't=i)V[9%kX@DlY\Z6^.cQ9\:``u[EfP\Gtk+DBl^W39TO$AfHSFS/EE_I
%DajYkjDKtjE;G<0Mku5P(RtL<?^h(q=kDAjR<7>#c\W'*]74Lg8'n`aGH7H-X^I:(g.=U*e3*_F+PG1Ogk>PV9iEp_eG,m)[A7Ai
%6JeAM+o<[ab_YPm]RAW(j>F^7!rbq/lfq@VB:YK=WK$\al+UWt6Y([]p\6Pdo';-E2EcqLA^0O9gE&pPl??Il-!YEjZ!'-u&.N-<
%1f0hKP(mPV1ot^]MZI'!-!dfeUfgol2Ea.!*DkrUJZo<'!#qo/Nu+.qCM(Lk'>eN85YF4.<I$d2B[Mo=2?WF3C%$bhpCa]Sef7&5
%&:<.H]MZ-'7;dN)S>'Ql>30MN?:`2>'E^c1V.kV;LOo51$/.N],+4FGhg!/C!L*aBWJ3R=r#K\O??Mk3Vkc(L<I7t3D/sE2<2kdg
%r:,L<[1sHFYLS$G\(9F,/hC-%;3A*'h9bt_fO,=N$-](*l.p5LUao0:*p2#Ace(DmekNOgIN.XdV)W)*DXrOf9s@o9W0g>Aq)[b]
%%CQfWcEk6Q+^<rT.:dGrAtH(=P'FHSfjmKW$&_GZ$MoHO9<'#KG&dME-#`=8Q4b!!Us/N6U$#$rD1m/L@YsFm2RaiNdG6F7V?J"H
%6grIBa0_t;W9hN2Qm@uepsVO+X`=2obgQ#5H$0cLB/c'9.X"[%?Rh44/M"*r5o*#G\n?qT-G^Da,ANR!#Lkk8?</de(9DbI&:^0s
%_1a!?/XAZn2Z+,k#BqOgX!>^>eTGIo8]HuG4C7K;Tkj@HTR4L14(19SaI*C9j/GeN(tJ1n!A.;-MHde\5aE%^6(5)1QI-b^:.7j?
%ArH4FG^&DZX`/LYH&`Ul6+3!HOuM'9Cdh8pGUmu(Z_[s"7)'2"Ze_95)<Bh774\*bC315!Yi[f!<KB1]Fb,tmb^J?h83lLhjsb*!
%U9rh/*\CNRO.k%fpWRBL#]a,b73fn:93UB`RZ(`D[_3*jMDuG7Pn[LhVIVRH@?k23>jeI_#2E$J?0I"ad$FFSkCOM_Qn&(ZeN`6*
%q/'JajiGl#eg5=u+[D>1&((I1[H`bSrdW(A=X9+UR>pR!$]nK.0Q2L.+(PR!Zt_lKI/GZ7cTa!G"G:Dm7ahbAbIXs<:.<8M;kB'[
%k\0LUNF$^_qUC&?8`;Y=-VAJ\/V?3^e4P$uo.jtWf&GoaY.A#o_[i[l[WE3e]qim<P7a8.`JDpM-'UE\Wj=)fgo`rP;+<qA@t->1
%U+(_S]K>H]nr"+%a[%E/TJE^O/!jtD-PJn[Fd3uMA@E5UXS*A]LBK01/Un3D#o*Kpit,Pt""L;>@5=La'$B[[^%kKu*AIYb<J1QV
%bqd_$C!0U=^+ck2lS)A8kaL\+Zm8tr!JNJr<-`mckDK%QgUe+V\u_:tMi0tLpbM5@2NTJPk>>\:Z8e!jCHLsig.WPWDh13]A!(XK
%r<ZgJcp519ooa6GNV4q]6[AdS7If7nZa>-1O;*gU2u<6eqi90&1Ca>`Ka`e+d^u'4XN0Vh7-;QdD8KoX':Wmn-j::hA1khng0HXB
%;,]VCLL8kl&(%c[A=m-gdNO,&1R`MPCH2,59b!*VZqnZa3bh/+>h1drW+["!QX=n>5`\=%Jh<AFlnH"f=Y7S@!k2uj8u\HVamo"n
%/Mo)OVU[!W7tYS@)0.iT>@kGK1-Z-rC'eii?H/R!nZXTIXAq`oI89H;E;+1sd6Ks&N$rK49%i&jc$3;6c;Z,\+NL'[p/Ys9`MTW,
%[tM]28q*7eg0Rd"DRLQ/r7&1/50.2'io7C\'?^ku2\;S8^Fc:\U$-mGQBt[YJeDPIFed2H],ThBen2]CjDQki&;k(q\_QfG6c@V`
%p7]'JW*)Gm]N3jolg3nbGjOd.cMnAKNtJk>%&7S+r<Zgrrr+WB]P*^\#L2+P[$Ik<!Hn>\MKVGV/HjM@kX?_m"Z6lB:mWDg6U-&4
%`C<TS4e^Qr.BMs"e!`+\\j):qd=T(MhYe<I6+a"OJ!3M/6aJ%NSE-QaW^ATW4cSdpG"<r3\;o.Y5>7FQk*<"5d*OD=/mtk8](+G1
%J#$s@)7NiUe](UT-FIr\,"0taQQkNbP<+<-$?%n<P_F]6bNnR&=e]#go2sfO=S#BBoJ10*mIg2MhhRg%'$?.<2>_JLd^&J+Fd7S]
%2X:6p)aQg-=;'is)c;l'?>;2G1fe+EL3E-[AUFCfhCB((H\%Sa<0'WMfYLo_H"kM8]'=?"+n"^MbJh'/e]/FATjJ"W&lPFM<Nhi&
%CRtmQH6K<_AVIVNs$$/Dii_FD0eU^]/nm<_@n4Z3QF6,SYQl:aa(']X)WU6E:":CT!1RF"#".`A$L?Cr$A_n3eGS=*ZJL/QSmKq-
%h`N8k3sk&9l>h4FMAr<WB\V#Q]=>=cf0JPp%WImgisFNNfSM7=8hX2KK<*1!pkNiS@]+$a@RA8N5So7X1r#g.]E]fiI>a1/05^^5
%PK3?\RQl`ZG#JqQQdY^=a:i3-bm'SJfXnBe_e(I\bn=#H&GISL9C>0tXh,TM8%T8EaYeSVfRHHJnEM(lqt;P$g/'o$`HUd#q!5sr
%(8BcW:S0iM<W@@Apt^/_hgWp:roa/s53Tc\qks1<H2jF^8ps_.Ykh/Z*VOPa3#(F]`JOB5^?A=fI3;N2T&d]TKI(k%:ATDf8tVkX
%r`NQ:jra<9O0pJ.`>#D';U06A=0FTb0',F$UBT83ZDSC<ba\p:e7OlLk)Tob*:<N0</7!W[976Zf-)[LnG$=-bN"B&9'k;uWB,X0
%>s_g^Wm84rdbh+KX_V&tlEn-8Rs4#4La';Or'7-f0\Wk'5iT>&UU*_JD9>jd7F!6lcY_F<>/bn"O/TL]D"$A,"DC9!B-%&*A,pR<
%]B%q+k`cU.<7dFf^0I=S$e0N!$OPGkGZB7(h@531BaD[`(_Z<^@EbN.fU=<7EKM!.!Rb$hZ-*jc4Gb#ln!H/:l@e3@C[B6F'(etA
%VU:)+p!]oC+)JFTW:'7=N9=*JH%7A>[!*uMA98OE8^*HNd4@0`Urh)gL(q<uJL8J@YQe*M((tK"-W1(QE2U:)0Y,%b!>$G!OWkYe
%isC2^geBk$h8KOgBfd_t9]"MQ00a#$s"Qf?g?MG(Wa8S-kHqK.#=Y9uOW[Ic=^8P$7.6\05a!?uTNNqR/"Z94XPFN;M'Jf3`X5I0
%=B#C(\5ra+/%a:HFQ+#CBWjEFPi+_)2HJI2UJT&jMTm\PKCUY#1gO;H1(nJGHSJs'+&uf[65\LRM?>Q.Om"bKibHjkPD$*f!$='M
%^A=mg^="!pS=@(IZL'`\CHAh/&:1"CjY]a?b2Q=BCt"&3*"^BZPE8\VmT#25iX2GoRfOHif](p1&P.)IJE0Rd5a+4Y<a=HPI%MYb
%XR0dH[)`a+WULhg[K4eV*^HVQp\"ctf'OIcUgX=,n>'B]-Fc6JJ_^rG-.8<rihb/KI,TLsY'2loCdZD&k&uK@#'&IRZFF2ag?1Yq
%&ur=ki:Z'$gSSN15U<-T=_>#,W'$ae<5J]&o-BdY#amGo=g:c7h#X5BVXn8a.i'La9\;JF>fdB&(IWqVqQ(8ECQfS<!6YKe-+rB\
%&k@W3GF>FfKinFUGBH6'`G5EQ2A`kIe)Vi0;!T[0D*YR3h33*f"t#0>K#X^:<QioVm@!#9Ul"#$DG4h;3V<<9?-Z?*65pF&$fWkb
%>8l10eu4S-o\!p^,VJ-[1+@cZF=U)1b<?DLJLa4D%YJ+"P[KpQck?L_2>jUQ%%5[dd83UqDC;ip`s%#=o#BAnW(l^OpfWgjY+kO)
%b5apf(]U*+OTA'qVN2<XiKl!;Qi,et)BUt>@.qCOA_qSc*%VR$"iBqmj:46S<'Bf`_#b(VaG8bUNVF^h8&W!0*$MSa>h7-eD&?/+
%d5:c3c:M$koGbBcneq6C!Hfsb^=#[VBU)+pIEE-2S[%]eBl:cupFOTaLm*Wn7ac1HktF`bS[On"%t\_=XP[-&I#=at_*c\ja+(Q,
%WG/WI8i$C8"[_O7"'RTcl8WF,RZ_=N8D>F:=2mtiQBT6fp$X2@1/f&l/9cZD_ag^BY,C[#g)?jB!dS,&B>))T7e5G&GEuE4n)+20
%<n8ufiY4o"Y+H-=&LgkT",0ZV>.d0lB5o;K7r;X*+;KV^(?.fpguU.j^@'fr=9mU+8pjKm"XK\,f(tEjb#iZ;3!Zj4lV#s4%uZEu
%`41OVM31,`lY-CLLX`HmBHuFO;q7iYHD7ln'$:a,,M<F`C!iI.Ok.crPH9[Hg3"0W]UcZL[jGI9&T(Ip/Gn'FEQet%TIljMg!492
%69oDXHsFS+0k;peA'>ht*iCMH83YuXGe`:n8,Tb?$Z(T7!ea3&Tm&qB+n$hVcQo3'H5hBF%L?L=`l4P@FM[FW!FKIgmQI?\W:PO.
%J382=EM<&`F*euEc9;M9qreud5#d(+.ZQ2HVQsBVs5ZA)j3k<c@bh$L#6TM=W?tLjPhd]-(Xp"NY[Yck$VY;g1SZJlL''e.lJMi2
%?a+1Dn?:Qqnk[s?WNg;^j=sa9[-ih>lXV*-\;8a!R?(uf.gBJQj\T<7)E$_B@!tH_op[796*LQ!Cm!J+7ag8'<q!9c%X04DX$drc
%3FBYG29;d5e]nB<LioJ2K46&JR3eP`0huV4BgA$5rJP@Y&\UoV#Qh(bdJQ7&B&7>EG%I$7oj<022T)TM[_YTU'AXfUAt?$s*51Z)
%\<UP<:sQMODNuS=g5<C8G!=A@UkkT7B3nZEVa/b16+9-D!sdBAL#KADc%VW0a@%aWD,t4XOeXi'ecR?;n).T=2-Vre>X\E;O#1@,
%bO`q+-:3,<f7dfbLh>.Mi9H7PDE!s&&ml;o1Y"bFpW"\QMtTUG$EesFS#R$Hc^*HM3qp_?7CHq*m"!)N4_?i%jC>'olI$eOg6G:)
%>J*EN.-]d7[p_c7(Z/Ln&#),'2T:];g,3PCCBI)7p;3WCh?6+kb<`7CH-!m<m6,gSjf2L&nt`CH9XB$Ke#\=ZZF1\#$jG+=)@]rB
%Oi?\le$K9%WXGC^//t@7g9usNAgk.n.`mHtCHu_PAKjmZ\]FJGNk8Wj9()Y%J,IlM3;i=F2kN2:q_t/(r^6^F41k:RmGiEjqqF@7
%purl?LU[0phVnEllar*eM"j9_oj)8^=ijB5f5D\iMn1<bNdc]J]-eRmBC*7k]dh?a=e6>LQ+E_n?3])W,;7<[!RZZ+Qu(?RVnj6h
%CA$oe4ZmBh^Sf=OS_MFuI>8p0PG*FTOQG_XCmp[>A&'rfn8=%XSb%SRa_]VQ8fVD+kseNdiqD2/.!s?)1JgfR!Q!_(dn8fTD-uVU
%]sb)06Q*LgOSZ9&6YB_;hkDlJi:Q$G1*[2(P4ujB@BmHR.hk7T,chk+:%?7E_2En+/_o4f8T8BQ"YU96OXDHUhp]s[4sMZ-SrJ3@
%1'2,fQM[mX8;(E!i=LVfH<N6K9H;uH$Z2gM/k#?U_"C<q.BiS][-QXUdC.W8h?b936)0>H`#M=]]`.rZHec:&IY3K$4`J;lm6P9W
%I4BmcaX=UN!O*Q]''';0QlQ8t30g9E*P!_e!9K#O\s(I5?LN]q#g%fKh/M]6b"Q8VS464u-g5a-bDV^.<ui-pWqe[S#;nK0f`7om
%#q&GV_N7-.iSOuG1aN%Y[s0hX,k5e!.)T@%^KhV%+ZoZ=+UPX<:E:_W!\=sH=RE5D#2VP)EWq#7>7\sUe56*Rip34Mmt[O/]m/qO
%l6AD\'Clg@o(q#A.Bc*JC@I8)&#ZaF,0f\/Y+u.<MG>RJcAp=Sl5#L*'E%=sS=ec$dRHC[K3Iu+F3ule9ukJ<l08:P,V6>rJHotr
%%r/Co<sX_q[NF^Z,58EG6gk,GnZYnM-re)E8i9jV8C@0jB:X!e)8CSimfT#bhJ8,ei>e[4Y">)L).C#M,&*OC-^gRj6B9DYVI%/#
%8i9k9oGJ%b&?;m(!2g0W-aT<!Or0Y,.9#(a8h.H]CE9+^M'2*l6BSEo_@M!9rf'de%S>?a5FV%*m']'W$]*PKe-,-g75l:aH[QY"
%`F!Q-;"LE159GW?3',?)XA`!63D)/6qBjoO<'gesG4:SXldmYlA(>G4d//X)9Mr\f)Dtdt-C,!?GWAe.o5,;Rl)0)?<m^lWI0S.I
%T*A>LpbLPcBM1]!-W&9#m>k)tqSnoJ/@1#cY*E)!%?_QqEVRRNS67U^a,+&l*BJ5QEG!<J`gLD(80ru;N2057`(//_`L/#K58\FG
%WOfgmHJmrV.uc2h9@d)bK+Fl![,R`W\2KaW@aU2;9'Y^%Vf3'`.3,++5fV@-0cIM?Vf41sSAJi^##6\D\_4E:4R-E):>p^qcC?kJ
%6ZmMi%QI7o\N!Dg*hDLMC"J^D,MS6=Ccb67qW/5T.oL<1#IYT*epfK^]i^:TDKk?-i`JZ;L$`"Fd8=mC-`_/\De+C01k`Hm<1S7$
%OdiC!bd%(Vh3J:t"+"&@E!V@tf+3@:[g=87-IgS+WcR9tG3O[JA>BlNUt=!5nUA>;[>k2K1r9fpG8'6hbZ(.*0L'UL4LSD%pXLpO
%=L\%D*=_l7iuP2rgUNCX7+sJjWch@4.jq_D]$3!bDA,0n&rGJd#e;dN]!DlHB:V-Ck-E*9g4V[j=g[Tf?]V[@dj,7jl81Ah`/LeP
%;#DQslkf]Sk;IZ/G!-_"-#M7$qZB3&Ius:CZ_LX0=7N#"84)0,6LYmbO/<1>Y8OJNs-f6tgo*NJ;*[KcO0<PFU:@"Nd^>5s6BDLp
%j7@gSF$o(Yh'9RBO1\^Tqb^k.,[BB@cdBAmf^lI*8r#"d3&j7(CA&lAc!Q+'bBPnqjof!n)K[+Vci_s-4IGMq&7j2tA@oGgOkop.
%8Bhgi7[T">*6C,25dmB1Tk1,?U%XOf,hosb\N3C0`U+R#P3qI(FtZV7H6WQ\1aC[+23I9SH_ff0)7l?91F'd1W_RYTH!^-9+BAT)
%asprMpca61dTkmaAj"RSa:;_:[&g$Y,R%2Fl>UIAA6ssLF;ndJoKI(TU3PRC6mD`#1cI!jeNF`gI9F3,+jjJK^-,;6GlcWg-'M,Q
%-Bh6d\7Homh0ou)7\<L9aAe_"D/,E=IY^Na+!/5cY%ECbi]NY8Lh-n"$f,Ua4Zi4TRHWKWS,DJ)S,AqVS&HMSS,<<P-D+,D`l,7=
%Cgri,4u#DO5PA)S]PjO=OatO6a1eS.r7G(>k8q.Db]^?d2P8VKRnmk4>pL'=H4Ec\q1Q=>VWurM;nHT38Og#]LfcP_7^E4Ads,PS
%@L7j'+@])lW31@4JX`]Va4ct6p7>W($dqW_HZ(.A09#&,Bs\puG)K'+=_pF\Qr8'EEiE?MfH_\ECq(_U'mp_QqRbYAa@8sV6^g9r
%A5dWaEt@%gO_qDWG]g5$Mq#A5Zb6fjb9m%Sj[8FtO!(`lKXsIGlJ1`(]4A6>7P`[c:G3b7p-o*mB`d[27s2Ld&)9:.D7838%GP`V
%jZAp>D0O%&DRTkLgMK:S._8^5%53\Ifkp"3fkmI]([iXC7L12P##su5<7a5+aNYCO-G(;].;ZK&%2gl;bn@EuWPba&Tl):cmE=^l
%XtR5Y?*`31,M?q.a,:Ufh?ZCmc%)hH<1S7$Odf^a%q'B!^eaF6s7kg`ceT9Y3Y_D]2rFZ)nU($0qsaQF5Brct5CE(?2db5AE;eC1
%!DNBB(V"$q!CZRi4X"2^q="R/mXA%4*;t1<4MK>:BMQ0c;otLLHmBd<&7LPW]j7)il7k'>;3(q^Zq^;Dil@5\\&cg)f;Y[HM/Y\C
%l`0uAnPg'KD8I%ldAIRYI[?$NBM!/(TpTKhs$@A#'^87B\=CfY?5[$UP:_b2h)*$1KS7eF#k,:a("+ep%_\Ped_qG.r3/f)-&"+e
%b7Vd>aaR4#YNeX`1sNEeMr3VSpp2!J9%p3U9")`Le@KigmIXEQ&qo#sjYF3Eo.C,A[Tn![hNiGVp^S!^&1D]B>4g\=3"WX&EHG3#
%0'VPFe^6:?,<LXSI5jW;ono4'*Idl.__:HuKd:]^Wlr%U93-P.3D8FN7dgHEMj4*8_`:=H>e:UJi]C2H$4/fO=UfHi&4caQZZ8t0
%`@h.e)s2n^B?l<,?"o9N_j!:/K0Pcj@@B<cK)bOn<e1T."qLZQ?T(*0q4JJa4<-W.aR8HQ&'@%>E9mVL30g"Ns!X:!9p2g+jbVoM
%s101cBOAo^Ds8-f&GLW:`nFA*VU!FKl*]"G'mF!&\_Y[1LuJl/-C*U0cI&TLMQ5)%bEC"H<Z)%+PYdYpC,e_U-0b?-fni0i]6tPB
%%?tF])U?an8;acL>?TK6Vl5nTbI6aMZkN1fGiam.h\I/2D?j0]C4>"*Q3[sup&Pq%jq9'F8$:2j1HH=Jk2Pf!KSYBJ180?I-O<(^
%c,`U6Tk&)kU"^]_ULGcIdu;GJUu@Oh<maH'/.A4)FB$k=p.3EH9c2K<oHWW;a]'4*T\<3dekGL^aD'?n[@^iH>qfVsA#^OfWHNBZ
%\ec^u]b,iiR%%!UZ,K(DWm5tb8B_aH`Z&Akr_fp/4]#uDEG/C%5c/fjBQZckOYUUX+*)@r"s'X#oK]f#-XOIuJkVO6eLi[Yk<4/;
%k'9pQ=H8MY$J%N83#Wc_p^TXW*,VA&c`Xc1/CR&8UJZY5WZ<+Zm_sh1hT,\Bi#\W($Vf/scQ7pg,1Up*>k2;iE`=A'4<UY_!m5Yq
%ra6"lfU<_5dA$.A\2l_1icYblYT8j_Ql[nUe9W>BR5>/W?#6Od486h@o@U40`\ARgG'%9L;'N8?)BbJo[/b(L[Ol;@Z]/pMD'R>B
%)g#KBci`$/S>c*M#U3sam:&S.]lT7i4HXJ;V_JFED*nhM)p2tAAB1Y:*qs/T]=-Mq(5uK=Y+8r-W*P$F[N-CAm_t#NDhK6rAjB@4
%Wm3^#aNYCOhARKEX.ru?H=5K(-F)sPb'&H81=[W((@I*]6iIEipLr0O"5APOf_4;mU,PCM8Md"h2HAq2HfX=pX3B[(,XaDTh0iVb
%b@Q$5$-WI9mG7?EUkqr6e!)G]M$,qPaGrRDZtuDp!mfE5i=X(_g,8(Pb%N3!_7t&#<-%nKpY=@i#,k0^W/FC#H066Zq).&qjF>L%
%lg`m3r:,jEYJ5P_p'1trnGWsUrnpZ#J,&a)cNaFBrU7Ml"j-JAGsR%;4?Gk8dJX?`W:fA=Xu?FCRugtS'`8\83)>_iB'$F%>,ioc
%TDT2K^tljt$]p]t#%E]"O]i9@8D6T+#i5`$gGF88QB@S^\"/17$D!:4EOT^s6-?>Deg$QZ>r0L9qg,Fl^&'CEZrg/H\;j,$(mmF#
%bHsi1+Ud'Od(E!Z!370+YES*I9Lo^Smfo&j/-8Cn_l2r3ASn0'CCA?hN3kIkMDXNoe,jbaaedCL.ARak%@cT:)hH64'9D,YEOU4U
%hq<-B64TQ72)k3Z;BmVJ\JOc==IO)s2]8&@/XC,l+U?q#O<t8XRWMp_lZbb'C3;D4\DZ3p8UEdul:duQ)(8W1mP[[qAs@ir=njaN
%,p3s+R#k/MYJ(Rd7tL'r][!9]BB5(U2JO0`,FcVEllBf%AA]6`qZOS_\ni:8e!(eJ>:FBah.YB76F_&#?kSuJ'qJptT(.JB?WjpP
%$d;2b4\M`2GuX29k/lWtWH'4dV+/Sqb)NKggR\ntNGPC/):+S;&6J9J9$0;$T[Zg+fm63C4\P"gHr0:bSqrSV\!:9jld"dT4L;Ue
%AG,YPhkJfWAq/7q]NFmB6*mme%,o#e6Pd.bU=O6dE*W[UDMY.]mDqQo05<@m-?@]lbm.J?BGbM\iXg:d*S1L*mGMBRh<QYOF[giG
%/X*I5j3YVE3uGukK4U(_)VKKS,_$234X2IQ/SqM^`/($M>&0op7AaFteoF;F%G'76)m/caM;bpf,IE<e:g$2T>NURO7S:S,o,rYp
%"^SQ'#2>9f@/I!R1>!XrRLHV0G9%.$#HoJ4h+":pm40E>S[3ti*=]Gm^h4cGfGT6`p7oHIPUs8DfSM4eeaCgsZ\F7_m`gO;m_&r(
%9KIWSN`OoBS?00"H+2.rjUW22D:\9^g0Mn>C3M6?X3FfhB"Mi(R-h'<@=)/#_anu'+!B*S.SEqdL:_5H=RN?S@C]Oe_fBra&'Nf%
%4=iGWH03KAA@fC1LZp-#mrg`+i!`cD13WU+bMDhQ9Qqo;;%]G*,hWdUJ)OMl+3q[6J9(6%i$7g)p+nf&Vk9COCn,YWL`"[3'JqLJ
%oCi9m5eg0G6fqF:`,MLaZ^]]$rQK-nW2`+a`L@RsZCKEBGaAGI+1]lZcU/-98('#-iGkg2VGtR?3C3+kg'NP0-d_=TCO9!$q,mJ(
%1H'lKFi4MuKRAFYV'0<tLo!S2I?K=S#r`L-5HD%2-90=kChJK3THnpVHjn=g^\+9%<766Vk!7r!Vduj0"iV&T%N5U6Z->j8_tI5\
%glfAj6NYECcOu7lntmThnrdh"dPg3-<Y%%;Gp=#]KP"M6Kk>SX0k:b]2dKf.8eJrYm7W5k81Zj61_.X5UTM0dk]Bqpeus5<K8g?h
%6EChm:/-]@cLaT#b7EB5S_ISqP@#NVg@U#l.Erg*BJ:JAQ+RK&-?j6tZK7RpoK+A2?7iK7e!kMVRd1(OXO^CE4h6iAX3bkKkSZPQ
%hqRj[?O"MD03PB!?T2oWJ48sWe"oIg(<c9R+A`rZ3>T9802gK7XrDe%,"\9Lk$j03C/IQ73:E,`'L\d_`<8O568&jHB:s,\&E8=_
%jdR/UH0<YbD?rR(H_s?C7H?D^0IM!STi&,n&2]WC$&$=2k1Al#^.s![A9mU!K*Fp&0d<tKf5jNtAi'#B?@_eA$^-D3^tDh9@M'ON
%MUY/(Y:?G%-0h`PbI+JT;\,+!*MiHcgU:7j-B;-M;)14QTG3J>_a^]gn_*>#<0iEs#d!HafM4C_>-7eA0KZtZ!V/d[N1,^#e`t1d
%d73Tp"#\EZDY"Z18#(gefr->%*J8r7:&5Vel_[oK14$pb]%Sc[8$r-0o;V)tR[r.Y#,l02!@u5q0bmXeF[mM<[UYh*R7[>XaUPbE
%oo-jTQWZaHAqEa+=41,`%>"eQNZ45Q/)+7)So.=fs8.&`k=1#_q>>kiAG#F0FV8q.RHsq`),-jIdS6!q=sDL/)EktlqT6d4c9E4;
%;c>5.,;JX33_D-1,opqrk4I(D!V3D(ffCC`k"W?[1cOfQEK?)MqbP@T+!b3^d7D-GiM_<^gbXB4BgU5nO$9mFjtab(4j\Isg[fW#
%>Aq-j[M_eWpG%n'M_a[CCc<NZ*$#h!,k"*H5r!3S=/C>1Z;^3lF_#=WlDbPVcF-N6!%W>_2Y7NH9?=oMU$.fk'rX@,qk+mBgR:22
%\T?c/(PJ/#baUA!?o+@[f\!p307"7d2L"h,DFgq:;&,62HN-+]O2;k?e)Fh%/JDY-g5qOU`:)XL]Xs6;>h6_E^E"g1(gAS8gK&H`
%0XhR+S+cnoP-RIF%K]4["lZ'7\@_p'St_N10[2f(ojgcoaR'je)auRTY3<=kS[oS,Wgme'e-7'>$%WkhN[qG"4n*H:gDq$SqY"0[
%SQ^;hG6KS9NMEe2f78,PC:+J+7D=r(,Ct/J&p5cqDRAZL8@#!8ah9O9kA:W(Q\A8&R:u;S4jrm`U@#,'N]4EGU<:p.!Go(eJMLa!
%K87Ds-:;rZoqnW#J^.gun$oeahrIL--bNH3%TFBnTXks.$q;HMm>i1Q;7O+sle;Lp=,H@S*apdH4&KUBZ,?3-KHX$"G*a0#$Ng0+
%8sk(N</l=pe/2>HOG]"9,WQdr<Zmmb_V("g$!T]ggPVrQ9Z<-LbIk80mCJ@5K)-C?Jg`@8=L2q+OSC^=:qkneb!5N3Oj-:\NNL-0
%O1iY-9]jMj<apSI&mOq)IGRP)<*+GCC:+ZbP[*8d:OZr+f4d-p3o!F4d@s_sk6?O"p`]r>^0I\[5&Y0hMusA%[UHYpF&[>W'M,od
%7RW3ii/hDk@Ga2<P'?-2`:Xee[[g,qf76l<jH_.1,R9Q\hD>EYro\3<ZFn&:A]ScD$sE=#k3BOe%oeVPCKj2:4)*:fEbDY[D2H$N
%=dE@U:0#Wc>%O/r_il.[=h6hM$.eSs0(7IH#5t:L%hIo6Y\>6ND2m/&-hib35JlmO+bE7D!?Kb1ahPRogtRS(P!R_Th]k4L9auHJ
%m!.#m49)/&G-E+p'""9PmuQ?8#7$:GIgT0o(*qH\H1ZcQjZD_2>Q\m;7G+8Y:=_V3StI>uh]$qVXYD+flm?6Ems7rE/\VdgD;S]4
%h3%,K@h@i'],bGUP<?F?;.'sa0\oS&GtC58LuST\V)Y%pPW%:+,#*2;[gV$h%1YjJ.WdFp=3hc*1Sp(#laLf`%d8>N^MW2G@@*!)
%g<&0pZL0jXZ3/H4/aK>UA`E>T'I,_GBo>C)YLlKbg%4L^&*;kpk3<5HFp%,Q't^:+TprSXLQT@9EF3&En\.FV"YEG'$Eq&_RCXF7
%95X5]qr.!-8+b?t^-"!&9H-7kPSqGg<h1U%"d>aYZOkrc7>!)Laj*r:gW*=(m<qVZjqfWPL0p4?&,$U0_2dQ[*S.q$,.b,&)S*7j
%hmXj:)Z@g?g;>O![Uh<lVgXc@L;d(:ol#MDnXFAIC-okaY*m"OG)#=LP?XeG*N['`C6t-0?]6Kqns=EnI:!kL*J$Se@Fr?I"[PKa
%a=23JbfdI=i=06HPRiC'1Ld9(D.t(QIkXK)m$"0&EE@mr#+%0d6XGmeiU-]d=#[g(S^X$Ab(Cu%G+XnACf1M(D1B4b>!5PNgdQAa
%Lo[ZQ(#IfFIW+54@bhco]1!jWelkP],H?_LF^=Lp3:f]2eS.)RTY%(Kpb.7-<kiP>ed``\841^"Rq-Tn%VAQ^-m\K8[76TJh"T29
%4(PKRB".XJ_n,U-!oeA0[1k-i:-NU,k+*)(S8XAr\dc,7INNr(bjV]3h8;JH?*P]D&C0ZK;kQ+"T$q-Rn8b0s&4N]^5t@jr=7U9j
%5883mg/R^:_p@D*QXk/%c0.MSC4a+#$pVoN3*e#VqmJ<A,1p1tTtRL(>:8Ko\[Mic!@d3>fY*:"q0X#V^Yig&>1Kh,01Hm;XV+"Y
%01P=35Z2%*i!#]7ohUdIcB8:_[MUPa&.,sq(m=k["N76bPe$UZEHRY;/PaVoP#,qf+*_rXju-StW>rinBJ&LWmak[L79lan&nEhe
%#@3`CoVSOV_3Z^:pIg"XF[GWcH>&>Br"Nhpk<7_9s5C.'5Q+1Rq!g!Y([[9U55o3re%U>3nU#`ooY^QE5()JD5l8=YCS2L!;ds`.
%,YYVBc]Bj2QUCE3V\_N#^Il)e]V[68$r`FuTNJD!\7h#'*Ze1*Rue3giB?nC%aZnD)cA*7FBB%uo>](F^A@oaD:3h\IL?(5jD@,V
%ZVb.sS(_]nd_S5jJkT;CkW4TnJlMYOCm>G9TZSZoOcVhRCaMC[Lru?bc^1uF?$`rTg*)W1K:FeV*ReZ8<;ml6$EhJGK&##D^eB-i
%ZnF%uBcHjjPdmJ,cI"!oau.oDp`QQ0USR=:H'%81N>aE@RYp9B@nC[An#m,1TE13D<;mkc\t#Rk+VLbVJ>A0(rZ$?PN`%rI5"VQS
%IftM&jRVKtEt%7?%T5cY7*[\<9n&`IJd+h&;%;^Pdj=+Z5%NZV5#D6mUP<j^=^O>"_`A\kZ'#<hUlWIN.Jb;A^#014['@H'iF%QU
%-lE8ii>d9+a`p-g]U(1`@C#:X?H^'D';K!R]LZ0IWUr1hjaZ5gUbB'Es6/.R1p8gBp(;:d*%+AT8emkJ;?#8S#1'_=+6BS@rEArj
%S:Rt:;8YEj,Y<"#[]K@'d_1(CqZEUEP"\im3Vj^ejm]/*6>D=qf;,OYWDgQ&"09GHMO+Gdn5I[QMA[2`*RKZQr4Ao\dr:'BNnhW-
%-.6qNjL0W3.\hMF6FF5:Ll-3$Op:dEbC)e7!BllRh:k&&ETdjCEO3DZ64m`28+M4aD4m%lr;m;,LdN\g\/9md\3dBOPjCIs^\Nc`
%I<)3]4([iFM2t^W\U,N)9c]lHh1=6r%5qDg)Ubi+q#+uCJq.%H/SBZQb+bT"(Z*n+_d)(9F/?f`HCe9-+4^6+DtpJ/U6E*-'MCV<
%a'5<eE)[Mc2o@/@JFj+lBgZ7ca2s,_aaDR#"r9ia6ZofAa#PG)C=)>jTu"%6C\+roZ@TC-o0sQ(@7F4LVV8[m-cB85\@B0[8;JQB
%LH:Zdp]Y<pHQc3d4KBhUG8,rXbH,D4L'WX3_us8T@'7\)*Dr;gP*i&'N5TG^X0VfTY3uXj!C@tN0tt*,E_*"5lT.5@oZ5)71&CJ4
%WjX;3eiiVr"f%:/lbk`5pCX5b$e93V5%c87Pu!&\4lcLU55tOc5O\R5HTMB0^\O8lh`b5:W;lVjgW**>ppp^IoCT53+P[Z/*u?)@
%3G\t%9Xp'I$6=ce!PKWFMAc%moG"+<cOLCA9pd@A`-Kf,C.T%5&:E%%@D%fg6FR9SSnDU0)uZtmc,#qO_,#rCdA\R1k\S9h%Q-kZ
%*-\Nm:&Z.upTT%\ilA;?6ri+`f^!fs;o@*3Q?U$MNhG;mit:-A5Jo7+7_&.uPp>(WA$),o[mWZ%ag$u`LX,j=:CSd+]O2.p-U0$T
%lMKZcFCp4c#>EVI2Ig'\\?[:f"B(trn=`4XiJoaA-h!=<.-R<d%kgpu/$3).0F4b)LEL"t:-mYI[[#hXHIEV\IWEOH6[7tdjk40Z
%HC`$oEc4T;;<&[b)C>'5DL2s@dGEjs9Ifmu2o/g%9jZE%ZYPjdgMIJ%[l,6@@bU1ZMn>L1XVuF@ars%)pU4'4+^'""6F2<($$j%/
%+$]s3C2+CS_jt>1>5__87o7rH&8F'+Lt^pY#u=(0.4C*\[/!uj*;GlamtU:="Q;k^:n;Gt#1oV1`$<3HJ\=V[]t\ap[n60f-nVBI
%gFH.q8GhKb=TA)ZK963_djFBB4H<[sq57_YeWVRr@G0VHJV5oMn5/l!NZhMeq(_QZGT8a.pAL\IT/-BFQkV&fS6i)p%Dn?k-9^Gu
%/aXtPY+&2SqAD3<nIr9hXZT3tRAMX^,ZXB+%agW9XG`sJBrajUS)6[nCP%WXd`=TdroHZId@Ph)5WQ%$%[J3[j/nD+0:T[_J3>P'
%DInj`GcGe'R&V.%3G?6eL<>=/EIFju34XF1es(T29flZ#+Etl;W"6`$L.%3Wj07#GH3BTNr=n[4`@iae(T782n/e(;NHB&mHX2#U
%U+8,,jU50tAMMOtHkYM;#UF8S>lmS'F1gcVZ%E;q?;Rk-eJ,Wu/$0C(\IGh^Gh3,WXPQEQ(62K8<6a_>`5K15at]]OWk:h4Cg<LD
%W'VI'OkrnAil"+A%DaULa:V=D<r7I)ngZ#@<)p93;lWNp+X=Z)Nq@YN+OfWe`5EMWF_RU#n'M4V:SW,g4Y2"/1PpaQK0o%.J\aBL
%Rr5<c#e[WrLcuK8Q>'3B4,>g'1OeId+n6>,?F8q;8?[Rh]j<V<o_JYE0h-Ipg0ReJd/t?6UUM+Om!V?L%34Ui0R0(nqSa'KpNMVZ
%0n9S(G,VE!YAU)\]gY9mH6"!hm:AAI]m`G^(]h4T;3gn>JW8j?]='.GPln](Nq=5\]HO;tT[.Sk[#H_iD'sl$+][&VhCQ[?[qNiR
%YCRq3?8d'"q?%lq!d&.O.dtae)].c;b5#q5T"P$qgHW@Nkc&K?#^6^Drk"4Urp\t:m25;ArqOCO:Z$WmkHB82Qi8j<lEYe^D<XV>
%FTneT%OZB/nY'2@H4#+TPI`+mk&]2fqRF8WrS;(baL;U+H\'uZ99S74'3'>31Q9I_mr!I"#/0a4Ze)eR4^)CaFtdj8?#jBJeQ0,;
%i0@i8Z^Ce>!*E8'!^t,K<%206P,@];-3dO+*-p"tj:r86j(CFT_r/tF<u$P!Ggjn,$HdEKbqfcI_MaBiM%!<?pUeuuh)qu_nJF'H
%"E.E7WI61O@A5#lF0l(9AOhM?jZ/4skpgf('!lH\gSQTK,m*IY`&5<qPlfVN*O[o_OW1?OK6QIlQgLUBq?&Gq#4>-m8:1R!0V=2?
%^l6nM,_I7YXG67$=/B5%#Gean#Ks-&h%6:>4X*3.SUnj>K;0#WecfK5cS00WeuFL#"ATRA*n'?(0ML;[ZXuJf'&=^0lX_N_&+Q55
%Z$q%2!EbOTXahh7CU14JeQl+DgTF+<(&UKIGWelfl/p/bQOi[cD*+Kr+cijjZ=B\hE-II3aMBrj$1%CtU[Q/t5q7?.\a0^QM!'3*
%/#+YM:#6Y[GPdC*8H]gI'%l[l'%,A$fK>7YoFZT%\H,t*&._cX#c38O8]%#!.4_R(mGehE_m:RJM\87:2JG)q,PnltE?StBJNK#X
%/V=3\`5TH_Fn"tDd]tH-^6rQhB*fV[pM&?7rMf0E,Vk%uo_:qnEWuKqgR?bc5KNZZ]Jo4b3.#fUf%!RFm-g_^_hf":'c.B**u*5R
%J&eptE/=YV%Q<k2#9n5!7h0!7r1ni6j4Pn9isBjnGHa&He\Jm:.6D-eo4m2h6&D'$+sHc!g.2"C?2a<r7)0$Ere^]+Aqog]]9Msg
%(:XnALXIs[i04Ic'N=Zq<_00908lER:"=(`ljQ(4VL]@)cMCqZhX-[(Zf7SZ0.3KCep>W^B19U_os=`eNH7VX*C4MPBs-<@.<gMD
%aXaeRf8;MGFc`^LZrGeBZ?2*9Z<5d9ltQ%8Y>'qa;*LH\#5JZHA?iFQfTYC.E$nD(*,8Dp+hHZ!Da7c[l73jB3n>4&`tXJ.1J:Fe
%#XQ\1>3.`._0NkLoj1R3>eqB.>P#Ubfu:e>c>a3nH?Kj`QRpd9jc":!!plZTWd8k1GdqEJUI(LD,4PdJlOX`q=>8<lX7Mbf+j4XW
%lFDkl,3gRmCp+0FL[_(qRf>M^lek%0K>EpVcA9V^j2FA%[9(njo>&8mLrD1A<A.1\%N34'3Ym[rZfJP9+Crp.nNcFn5+]HZ*NStd
%Y.*MB&%"AWd->##W)^mqhYocT(Gcc_]CNbRo168H09]#Oi(g:\6m6sR$6'0P,FrXd'-Qj3D_md^]F7Rrb^fXTRK3L\1LM?QBU'6?
%15s/_W)8h(kCJEO&M*UPUUD't&8N+;L2GXj5Z68GAcT;6A[&?D8Pt(@rH"c7Z&r&*LdJ/0&8Qb@e]!K9]IOL4>U=O9p&kO2GpgkL
%)ETb\AZ!]jPHKO'E`r'iA">=9JYX>kA,u:!.&r`_5p3j06Z.Nm#0N>6%atf:H)kCWq9Xt[/k1@DD,fU[H=5b_]r!N'Eo4pVNai1!
%L';/XL#5A&c+@\#((i1]`69D<+HCMp=[R'MQ:#kMi7A_J=3O'g3705eKOj:S(Y*<lcAW`*Mp[,)MXuBs"%Q)q,Z9PtD^)"U@m6nC
%U'mg+B;2Egf*RpEC=*S:eKH9I(C[abnj#a#!+")\PP=4T_lrr0.D&[UgQ*H5J+nRWI/ijmqQKqAfms+Sqqo$Op\,aorU?(*PidJ?
%$`/Me=;>mX>U[jQ'8fk%F=G]o^-1b8:Vj5TV1`[CReCF>8Rp2po.9W*;qnG?D%j?b3*'4/KR3TPj:Fh#X=>#(83jN&mVBfEYnaaS
%%c/'S9:J5II&U!@'Vsa?G*cS&c873/X1]Zl;j?,^FUZ[-2LWV*,6D4El#Rua*[]nJ7r3GmIu0+Ja>\DP:?&[TGA]4,eb!DF"RKUS
%:IP43(B6,GKT5-FUUCe&GbnF#??baSaaW*gT;9Ao\Xt^,Q&Q#AJ:X7=Ub7a*K6c$D!NY_'#'_4T4c[5eV9c@oI-!_O$7-Y?PXZ6*
%*(31aX\GG_;=RR=MI-uoP"+@XFPm`Cfu.$WH0epX(8]?]-h5h>*-cR>"s,isPXY+@n6%m)[apT,%-"O"k9EK,`++>9=YG2X4c;h6
%OEp3@0TQ5iA\IjfpadKFo#.0)#`2Kg/K]6(+E>t*T4-(*d462]FD1q#433ZZiht^uGXOm*q=n537(f\oJ]A6)B2SL6HP2CQ_LY4D
%B&KqH6s13g"eWbD5lfaunq[S9P!>.U%$3I7V9cAYn`U]CO'N[d0gMV;(I&(q`?Wq\a7$Sm`!.8E8=]A$B@sP8oEkgE?(->b%PhV/
%paPt`*q;d>YD5Qc]N^[j(,A.<-]4OJcOo^S2sBjrmHK=s%\TGn#sAU`#"&0n=`eimB0=h5jP5QF3gTlP:!O[b&h#+D<#+t0[e2/Y
%BZP%Pbs5E"(HB\R#\64bM5[&//k1@D/Rgc^'lrcj!umTajZP/n(M"g^k^RS92e.fe$&%+L95+nF97VnJXnsSk@)h?/a=U!(&>s_(
%bI_'ihC7@mWOM!)NF[''GX_o08d3t`:MrdOeIHj$2r,HK#aap68h('cYd@^V]75t$?Jc,1[Pr>Tk^De?'AC8tedE5sLcNb:5&+S&
%?a(-DF/m&kqj*PT-DImmb\IHOfI6&R;?Iq[6&=<N@<90g]@!G[3j/%c:2p6Z\6thrR2bBJCgbl!?k(3nCYQ<&K"DV.cp031_S$Mi
%01btm-rnZd,<$C^6.lbr]LsAd?>"qQhl(uj<",`8H%]4a<mhN;os&`)aMcPp7K06cM)D$.%M%8T(p(.4<G>eY+c&$nR1TNhg;b'8
%Y#i#G"L)RdJ:UnA#%kPVVm4k0&JnjuG(2(IR4NsBhO=`sY(p*SihNch+DYp^bcZV0"[!ed`j;@KI?sIi&08Q%s/`EN3juc2S]D]_
%i@7XRF3K7Hgdi^2mY\+PiS=mYRifK&]k7;6>Bd0,kdC%X*.*08a1X[.m(A6=ff9RkRW,"t7,e2BG)l55afFZIQFFhsS]es8SJ0BY
%3`Wk.#Io3&\r^5mn&DX4cf0#5mJ>OnB=kmrl;L&WL@s5[OI5Dr(mC*6'f2.73QuY!gb@JC,uN5rUBWctJe2VES_"U)HJmgt"OhJE
%q5*>Ye*F>-Vl``;*T?7C5b!dC/aQD:XG(B"l[nYKf*U\Q4))BW6:-V@G%l;'hOu/-:Lf]g]A?PZmQ)S@K'9</l)l6nh0#qt8\HUG
%[<dH^h0$hQ]'FH__9Q/d]-Ajn#Q&VpC[/TY@,fdchjXRnd2UTEs7jV%>2MMmpRgn=rC(T?j1g$>SNZ*3bE(Q\"7B@a^ZJfPZ@'Jc
%R]]g+%23oJ02"CH\#Nd.%/VLjX]q86',FD[e,Lt[5>'(=qN0;8>EoN:4H\a<R=>`^f=mifk\;WRI3La^dC6g1pUNjd;$S<JBL=%R
%&s027I)9N)[mZ'l.9YE"(3ooIaf]pRF<Db,T)(q[AoeK'_&#N4nL$@\e!gGX89G"F$c8"fC8hT[6Qm^Y$a@a[aB#i!\T4s;f2BI!
%Ep&U-^#8CYif-QqN6`Cg0p'E(]^$/(ad+;+qsdX'Q4""7(eHNhD]rt0:?4uee!t"`/jq!hn?U9&Uh`F<2M?1GKQ,G[r\FpZL+oEM
%C(9trAS9MD2bd@!YFcj$q(B@L8:X:,f7.<Toc/nXH\C@JVYSTL$/Tn^a6$FS?KGhjK`KL/B+:9,Z4(PEQIR"Cj9Gj__0n[TO%Oij
%;51`ErR*YV#Tha_,h[-:GmEq,ZOF7,DWO;]ROt4Fs5BNt*7>?DGf@*3IV:a#pkKNcs5l\.N?</D++EDj+q2d95Ueri?ENCed/':&
%/G'Y;iZ7)4*kAe.A,^B_*f]hld7@@tS%7uJb8e/N8DYT)oGL,PJ)R'kOUp21gCH=TP&.IWG6\#no$F'DN!`qVA=iqif&HkcQ+.)+
%8:sVEek;TC^$&CJbH'b`B'C9S`/AE"&EO%iZHnXdI&00Dd*0;*k"m+03Q%HK-e6[\q[e2N>Jh5"--Dff;>*$@`J*,DNZ2\C07![_
%kH_8Bk9KWXDiGZLA1r:a7G2%h$]`F?Ep8kUR>keFl.B:H,U$4t6V>M4i<^_Q[V2*s6H&<+Bd-4Q/_4(SeCGI=.eM<an(StM@PX-U
%*BaQQfu\H+,J</(8,riocD[`:jiG<Xh.TcD[^L<deK?3h+<nuK_?hrpnW?bGP=$D4cKX&[oJI5[#)oW%37@(\K.sL"OY0%P/o.Yj
%GNZcYo2q!!g7U=+BnKL)Jhb%7,UBN_#>f;8UF*TdNTT5\QK3ob>%5C-G/ejqN-$3EFBPB=hOc#+c_EC1fN;@3m6W_X>0*;3$&:g)
%!(lm9rq@VY6=j6Y:jlV\2r\tecW'IqH9:ut8?$&CUK0"7ZAJa?`WKH"AnW.UeGJa^qkqhEE+NSU'YTur0qF>IY5HOm!&g5SKNe;,
%?rY"KDFCH),Gta+UjCE2b\QYQb7L=>g8jM0H(a,A]Z*8bG`B[5n7l(P=Q">:&&<9d<"Br\e]]um#[6WaJQ9Sl;S?=sjY[90m5)6q
%ksAA1rHM`.nibt)btZ$DG3"B+4&Vlt!\'!"+S<$nGKm4lC!%G!1:LsXipdRh$dL[_fYN56%]X8hX_Z=#o@BWZ[m;nS+bmX$fEk4a
%@L$U=HMreY(fD=PX6di3>,d(bq8gQUV2ksTl(bS\otcKc9CV(icU]Hj#J5HYWa(7)K;&/c=m1<RCB]>]Y<*:/@AMIr5FD,h4:q$F
%B$!_:8'+L2*H'V`Z>T\'_Ih64Ybk`,=Bod,X`]tiX`Z##QgJ&OqL`&e@q=2f%=5]X%r=@f?=$T!B5(?XSG8<g]\0k?!1MY(jpQ]G
%O"V)kCU(;RZ!qP^`*1"8eZ'*EgE0PbCQ$JQn&PS;^[@SorTn*(`2FY^(<2!Es7QBc?hpk*r+k/3Gt.9H:8Og$+6$7'L2jfTlFFi/
%Y[;%-b+:qW683VbfpndS)Z^[aU1mQric2d#.3TlaaXYO6Q:m(dIC:!crnO_f1EqpGH,)PhJlnXoP1h)?m`ZA+K$n"?aFT,l>W%gK
%e&t0D9,%-=!&!X\RpHCMdd0juPU8_YBj.ih0V,6j*":%`#+&Bd"1bls\UI."It#nH00\qf-0eG]:=LWuT7T;*Ma&jTqpep4[4)Y"
%YUkUE4NXKJX3n@hEle,Z`2PKc^QGci;^aYXX.1&i7D4SFKGSJe4RFK=o3q]/)SPQ]R;-,4Z5D]%`W9i]DuDPe@mS\dD1C_K\>[I)
%>eEc&oT:#Zlr)9MVjad<TfYP%p0\er`!`/%;=IIG0<]8Bh3%sRl>d`[U*5kXh?W_*-VtMiPi"Ci1q&Z\RIn[j?`/0%942t`OQTsE
%"^LmDNUfl.P(pG=7)K^@N$alT8"VT]>[r_78/*9a=:?aI5"D5$i\i0LBgKZu>KZRggeC['@MVj/Urft5"DJC=>YIJIYrAM>8NmV8
%;qa^E)7LoBoU=?6;mgeMqi\V!!L_*E70'_r1FaYG^RI'(!:Q*'0sA-Fcf)TVp5cf93?jB(ffSc%'9.YUMpQ$I]Xgaj"!kNHhSEMk
%Vr5YF7>kcOC6*/T(MHUq*32`cp3G%:V?i;Ddj'a^JGVHI@^c"WbJHN^?6]8'67S\HZR"mX7&G0EnopcP/^'sKm;eUQ69rSkc7k-g
%Of%Wo(:hIoA1`)+@uJE8>W7fRLBrg6cZ%"\a;6*7l5`9Fj`QkJ-f+O++h:@20&32p25F>Dj7X"AaRb!__R!cpC[8ng>NS1E2`oGD
%<SaULV^7QRH<WN!bBf%'1-MXG07/Eg$)XL6eC0nY@9hA`i='4!]^-LOm`Gda@R;k]qA/ACTf6\2bBZ_?%o&8AW^hekBcUCD:G(&H
%E9eQ00Qm"Po=Uqm26(uJo7HaDrhD=%Z-hS:Eqqijo%GZPQ0-cpBPF1dOQP%@IL88QT'[9@1`Q#44@pYiWDWR-I*shj'uhdto#*@V
%+O-i^r"OPD/A%dfad'?8D9aPf9t%B@5H^IR)!5DaB&-;T<7`@j5(X=aa45MLPM5_o2Wmh,S;M\P739IMBiTM1;J^($<pK^gmVI40
%\7%(=&!6hLMiTT)oJJGFekM#'/m=q43S8-`Y0kg)XGuB2<tn*oeZOi4SLKZUerNlPMUZD58I#)r9j4*caRsjc"j9Vtj.+iIehm^Y
%c'sJ7EK$5q)#+6/kPY!2=W@P*%cj&-i]O-j>/J-4f\dO*.iE`Vk?LS!/T>S!CKb3_V1uf6`g[Srh:/1*WIBT[S49<+gpKqJcB^5!
%Q+T+6.%_n`N=I?h4L+`0m<@<,0QZrAGH't;ZJ$a\fQJqQTeE\1?+<`:UB7]Q;15[$0aN2a(%9#!3Z&M9*K94b*K3;J9<<@SDDZ@.
%QL*qB3-@/+`$f'idG5#CZW=^H2fcA77!G[qk\c%2=Y&?_)nF]+K"F`!E48.&X;13@D;<s8"t]CiiJYfte9A<BR1N6PAmGIpa;n=l
%UeJ^f1Q^;kLQ\_A^W*`=!$m>1ca=j"C<DP/kkmi"WbMlQ-Bo$&E`P,PI.c\5ldUXA%-;6>*>\*1#jP'$TG1j_!B.o2+k_Pc@&&l!
%IfXRI)^op5OGJhca>iZX/UeN'\R5\j&WF&8'CfK^\%*;6">8oT0K#!!9@D!=/'ktuEa+[MZM5kPo-'9F<<`J4,\<u+H2NaOgLFBA
%T^2l381e7o$b9gREPn`1e?'I#\Vh7$"UrlO0I"b!Lmnk&I@eWAiG=ma&:75*hM#0VX!4bcVMdX_0O5jqTN\u9\*@!o+:ck#*uq..
%`#_m9GMuS@d3\h(]K^I]U);KphA1ipe\YV%Q*Wnej6Wd@j(i)e<A!![>Ido@U8p^'oX$=EW>=p=N?%=JV//,\fhuiJ5G*p'%"cU&
%GSb7.7hZ/O1k!0$#/OtR]F-Y:M6,Sj^>*[C[P_K?Oq&Aml.L(]bH8loO=JHTH35bm%24p&!ZUs>Zp@4lCf#;+9tnh#9oXYW"RYV'
%Y'[(K:;oSWS'r(@<^eh)\,a^f9,(`'c87dp:&(<m1>I7Y-FYEm[*)sm8.1RNHi^S^8a?Kk^QcDs9->QN6%.=$.E*k(PQjmpA5![R
%d9<sLqQF.j01W]S4lNM-;`a;/7=Z[bq-<g$U)=NKWBo<f2H\44o#5(8#2#1dqm\Ii)bTZ3O<hUMWsfDP9[t5'65l:BSm,[kQH+J>
%.m]#s?#5^XdF.kN[2HM;M/g=Qmmlrh,:I96@.Qkj25lm&s$3R\ct<Zp"eC>.k<%r94YW3mcXDVH"/5jA5-goYMNMXYe:6l='p0kb
%\89L%>[)p(hAmV/8/+ljOe*VU#ml,;&_Pi(#$k4B+VMpb*sA:=<$>[`9OVZ`OfZ?i%YuuA.8kqZ]!&JP8[/kC_B<Q_nD^_(=b[Q,
%!*G7)Q9\L1qM%NC0dt;f6qL%X-UJb0h4Tmr/0Q0E=ir#L-]#uX7+A`cJVe,7pKL"19hLBtXKgKl1<+mRC6aLmC,XJ)$+66tTRfXt
%0kMBJ,"\4E$otE:RVL2a.7?L]$^OeVW-fna"gG#-9%*Q@fOD7.AOPQsVE(HO26Oa7\,sokH%oBjC-lI/]s4a.inD^$:CRDdn1&)V
%@*FLB-X,F^<eC.6W,*qf$*'Xp2-!4ORgVlj2XS@!JgK/(>#lIY<gXdVrrQ,V"#OKoaG"6N0Bq0?n>o'=`;7o;6)7.R8m!+aQI?mY
%OFg<=!29W^5VTU4Bpf8ZGZdJ\/at'YUCM=)qT%X:#<=F8rU/#.l'LH0@J:"VI^e&R4s#d"o3^rN5<M.P:B0oolM))7VZ%;ohgM!o
%q99H?_qW4-V(uuGA8qM=mf)_T[*+1f]mb,([/9`>[<m9HZ%p*b^TR!#LSs=ql#?=fg[R'3.\m6NYM]?Ome*W1!*Ff;QN~>
%AI9_PrivateDataEnd
